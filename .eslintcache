[{"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\technicalSkills\\TechnicalSkills.js":"1","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\context\\TechnicalSkillsContext.js":"2","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\resumeAcardion\\CreateResumeAcardion.js":"3","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\PostJobFields.js":"4","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\context\\CountriesContext.js":"5","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\technicalSkills\\TechSkills2.js":"6","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\technicalSkills\\NewM.js":"7","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\keySkills\\KeySkillsSelect.js":"8","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\education\\EducationForm.js":"9","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\experience\\ExperienceForm.js":"10","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\type.js":"11","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\achievementsAction.js":"12","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\achivements\\AchievementForm.js":"13","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\achievementsReducer.js":"14","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\JobSearchBanner.js":"15","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\BannerJob.js":"16","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\autocomleteInputs\\AutocompleteCountry.js":"17","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\languageFrom\\LanguageForm.js":"18","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\context\\LanguagesContext.js":"19","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\App.js":"20","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\pages\\Home.js":"21","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\context\\JobsContext.js":"22","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\JobSearchMain.js":"23","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\Completed.js":"24","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\JobSearchList.js":"25","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\JobSearchRight.js":"26","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\PostViewCard.js":"27","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\DrawerPost.js":"28","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\createContacts\\ContactInformation.js":"29","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\experienceAction.js":"30","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\profileInfoAction.js":"31","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\languagesReducer.js":"32","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\languagesAction.js":"33","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\drivingLReducer.js":"34","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\drivingL\\DrivingLicence.js":"35","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\drivingLAction.js":"36","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\personalDevReducer.js":"37","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\personalDevelopment\\PersonalDevelopment.js":"38","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\createProfile\\ProfileForm.js":"39","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\templates\\TemplateTwo.js":"40","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\educationFormReducer.js":"41","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\ProgressBar.js":"42","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\experienceReducer.js":"43","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\experience\\ExperienceForm2.js":"44","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\index.js":"45","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\store.js":"46","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\pages\\Candidates.js":"47","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\timelines\\index.js":"48","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\CandidateSearchMain.js":"49","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\CreateResumeMain.js":"50","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\languageSelect.js":"51","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\contactReducer.js":"52","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\postjobReducer.js":"53","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\CandidateSearchRight.js":"54","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\PostView.js":"55","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\educationFormAction.js":"56","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\pages\\JobSearch.js":"57","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\PageNotFound.js":"58","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\rootReducer.js":"59","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\profileReducer.js":"60","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\keySkillsReducer.js":"61","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\BannerCandidates.js":"62","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\postJobFieldsAction.js":"63","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\keySkillsAction.js":"64","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\ColorPicker.js":"65","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\colorReducer.js":"66","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\colorAction.js":"67","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\context\\CandidatesContext.js":"68","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\Resume.js":"69","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\technicalSkillsAction.js":"70","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\numbersReducer.js":"71","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\numbersAction.js":"72","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\technicalSkillsReducer.js":"73","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\tab\\TabForTemplates.js":"74","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\templates\\TemplateTree.js":"75","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\templates\\TemplateFour.js":"76"},{"size":6697,"mtime":1608316016869,"results":"77","hashOfConfig":"78"},{"size":884,"mtime":1608286057156,"results":"79","hashOfConfig":"78"},{"size":3535,"mtime":1608698639723,"results":"80","hashOfConfig":"78"},{"size":20159,"mtime":1608467238372,"results":"81","hashOfConfig":"78"},{"size":967,"mtime":1608294171820,"results":"82","hashOfConfig":"78"},{"size":8408,"mtime":1608698265084,"results":"83","hashOfConfig":"78"},{"size":7655,"mtime":1608734604556,"results":"84","hashOfConfig":"78"},{"size":3420,"mtime":1608544877953,"results":"85","hashOfConfig":"78"},{"size":7414,"mtime":1608639093340,"results":"86","hashOfConfig":"78"},{"size":10796,"mtime":1608615151596,"results":"87","hashOfConfig":"78"},{"size":2727,"mtime":1608748363839,"results":"88","hashOfConfig":"78"},{"size":384,"mtime":1608427100289,"results":"89","hashOfConfig":"78"},{"size":6604,"mtime":1608638732787,"results":"90","hashOfConfig":"78"},{"size":513,"mtime":1608426922127,"results":"91","hashOfConfig":"78"},{"size":5787,"mtime":1608462938414,"results":"92","hashOfConfig":"78"},{"size":3178,"mtime":1608466377653,"results":"93","hashOfConfig":"78"},{"size":2477,"mtime":1608467926329,"results":"94","hashOfConfig":"78"},{"size":6510,"mtime":1608794291641,"results":"95","hashOfConfig":"78"},{"size":1668,"mtime":1608513567155,"results":"96","hashOfConfig":"78"},{"size":3131,"mtime":1608525305728,"results":"97","hashOfConfig":"78"},{"size":265,"mtime":1607570600276,"results":"98","hashOfConfig":"78"},{"size":761,"mtime":1608180925643,"results":"99","hashOfConfig":"78"},{"size":582,"mtime":1607739577590,"results":"100","hashOfConfig":"78"},{"size":3047,"mtime":1608065398378,"results":"101","hashOfConfig":"78"},{"size":3114,"mtime":1607735853627,"results":"102","hashOfConfig":"78"},{"size":357,"mtime":1607739987594,"results":"103","hashOfConfig":"78"},{"size":3096,"mtime":1607724073740,"results":"104","hashOfConfig":"78"},{"size":1632,"mtime":1607735841072,"results":"105","hashOfConfig":"78"},{"size":7939,"mtime":1608177712714,"results":"106","hashOfConfig":"78"},{"size":368,"mtime":1608095888737,"results":"107","hashOfConfig":"78"},{"size":891,"mtime":1608748350360,"results":"108","hashOfConfig":"78"},{"size":777,"mtime":1608525249648,"results":"109","hashOfConfig":"78"},{"size":1677,"mtime":1608531794824,"results":"110","hashOfConfig":"78"},{"size":487,"mtime":1608538641150,"results":"111","hashOfConfig":"78"},{"size":3003,"mtime":1608794520732,"results":"112","hashOfConfig":"78"},{"size":354,"mtime":1608539102283,"results":"113","hashOfConfig":"78"},{"size":529,"mtime":1608542859164,"results":"114","hashOfConfig":"78"},{"size":6465,"mtime":1608795066548,"results":"115","hashOfConfig":"78"},{"size":7967,"mtime":1608783902313,"results":"116","hashOfConfig":"78"},{"size":18532,"mtime":1608901120929,"results":"117","hashOfConfig":"78"},{"size":683,"mtime":1608546982634,"results":"118","hashOfConfig":"78"},{"size":941,"mtime":1608550499444,"results":"119","hashOfConfig":"78"},{"size":535,"mtime":1608573183375,"results":"120","hashOfConfig":"78"},{"size":11736,"mtime":1608637241043,"results":"121","hashOfConfig":"78"},{"size":624,"mtime":1607957875915,"results":"122","hashOfConfig":"78"},{"size":401,"mtime":1607957925720,"results":"123","hashOfConfig":"78"},{"size":413,"mtime":1607739925891,"results":"124","hashOfConfig":"78"},{"size":1371,"mtime":1607369521943,"results":"125","hashOfConfig":"78"},{"size":612,"mtime":1607739406529,"results":"126","hashOfConfig":"78"},{"size":859,"mtime":1608817785140,"results":"127","hashOfConfig":"78"},{"size":1987,"mtime":1607276215033,"results":"128","hashOfConfig":"78"},{"size":440,"mtime":1608007951887,"results":"129","hashOfConfig":"78"},{"size":415,"mtime":1607999603411,"results":"130","hashOfConfig":"78"},{"size":379,"mtime":1607739982059,"results":"131","hashOfConfig":"78"},{"size":4710,"mtime":1607740713409,"results":"132","hashOfConfig":"78"},{"size":407,"mtime":1608067872380,"results":"133","hashOfConfig":"78"},{"size":366,"mtime":1607540770601,"results":"134","hashOfConfig":"78"},{"size":506,"mtime":1607305531654,"results":"135","hashOfConfig":"78"},{"size":1034,"mtime":1608653458619,"results":"136","hashOfConfig":"78"},{"size":901,"mtime":1608783678202,"results":"137","hashOfConfig":"78"},{"size":504,"mtime":1608284252580,"results":"138","hashOfConfig":"78"},{"size":3103,"mtime":1607742682374,"results":"139","hashOfConfig":"78"},{"size":386,"mtime":1607999431285,"results":"140","hashOfConfig":"78"},{"size":352,"mtime":1608193898051,"results":"141","hashOfConfig":"78"},{"size":1039,"mtime":1608901275408,"results":"142","hashOfConfig":"78"},{"size":1360,"mtime":1608903912192,"results":"143","hashOfConfig":"78"},{"size":324,"mtime":1608654248238,"results":"144","hashOfConfig":"78"},{"size":821,"mtime":1607740077282,"results":"145","hashOfConfig":"78"},{"size":1693,"mtime":1607520340721,"results":"146","hashOfConfig":"78"},{"size":709,"mtime":1608747338824,"results":"147","hashOfConfig":"78"},{"size":341,"mtime":1608693154463,"results":"148","hashOfConfig":"78"},{"size":629,"mtime":1608695414986,"results":"149","hashOfConfig":"78"},{"size":1079,"mtime":1608731870435,"results":"150","hashOfConfig":"78"},{"size":2645,"mtime":1608914964618,"results":"151","hashOfConfig":"78"},{"size":20310,"mtime":1608914831271,"results":"152","hashOfConfig":"78"},{"size":20718,"mtime":1608917459579,"results":"153","hashOfConfig":"78"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"kieyu0",{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"164"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"177"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"177"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"189"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"189"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"189"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"177"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"189"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"247","messages":"248","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"249","messages":"250","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"189"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"177"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"189"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"315","messages":"316","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"322","messages":"323","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"324","messages":"325","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\technicalSkills\\TechnicalSkills.js",["326"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\context\\TechnicalSkillsContext.js",[],["327","328"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\resumeAcardion\\CreateResumeAcardion.js",["329","330"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\PostJobFields.js",["331","332","333","334","335"],"import React, { useState, useContext}  from 'react';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport isEmail from \"validator/lib/isEmail\";\r\nimport \"../styles/PostJobFields.css\";\r\nimport PostView1 from './PostView1';\r\nimport Select from \"react-select\"\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {savePostJob} from \"../stores/actions/postJobFieldsAction\"\r\nimport {TechnicalSkillsContext} from \"../context/TechnicalSkillsContext\";\r\nimport { CountriesContext } from '../context/CountriesContext';\r\nimport AutocompleteCountry from './autocomleteInputs/AutocompleteCountry';\r\n\r\nconst schema = yup.object().shape({\r\n    adRegion: yup.string().required(),\r\n    city: yup.string().required(),\r\n    companyName: yup.string().required(),\r\n    country: yup.string().required(),\r\n    email: yup.string().required(),\r\n    fromSalary: yup.number().positive().integer().required(),\r\n    fullName: yup.string().required(),\r\n    industry: yup.string().required(),\r\n    jobCondition: yup.string().required(),\r\n    jobTitle: yup.string().required(),\r\n    jobType: yup.string().required(),\r\n    region: yup.string().required(),\r\n    salaryType: yup.string().required(),\r\n    workplace: yup.string().required(),\r\n    toSalary: yup.number().positive().integer().required(),\r\n  });\r\n\r\nfunction PostJobFields() {\r\n    const { t } = useTranslation();\r\n    const dispatch = useDispatch();\r\n    const {technicalSkills} = useContext(TechnicalSkillsContext);\r\n    const countries = useContext(CountriesContext)\r\n    console.log(\"counties\", countries);\r\n    const postjob = useSelector(state => state.postjobReducer.postjob)\r\n    const { register, errors, handleSubmit, control, formState } = useForm({resolver: yupResolver(schema)});\r\n    \r\n    const [phone, setPhone] = useState('');\r\n    const [postedData, setPostedData] = useState({});\r\n    const [checked, setChecked] = useState(false);\r\n\r\n    const toggleChecked = () => {\r\n      setChecked((prev) => !prev);\r\n    };\r\n    \r\n    const onSubmit = (data, e) => {\r\n        console.log(\"manaaaa>>>\", data);\r\n        dispatch(savePostJob(data))\r\n        setPostedData(data);\r\n        e.target.reset();\r\n        setPhone(\"\")\r\n    }\r\n    const techSkill = [\r\n        { value: 'react', label: 'REACT' },\r\n        { value: 'html', label: 'HTML' },\r\n        { value: 'css', label: 'CSS' },\r\n        { value: 'javascript', label: 'JAVASCRIPT' },\r\n        { value: 'vue', label: 'VUE' },\r\n        { value: 'redux', label: 'REDUX' },\r\n        { value: 'angular', label: 'ANGULAR' },\r\n        { value: 'english teacher', label: 'English teacher' },\r\n        { value: 'nurse', label: 'Nurse' },\r\n        { value: 'accountant', label: 'Accountant' },\r\n        { value: 'cleaner', label: 'Cleaner' }\r\n        ]\r\n    const languages = [\r\n        {value: 'uzbek', label: \"Uzbek\"},\r\n        {value: 'russian', label: \"Russian\"},\r\n        {value: 'english', label: \"English\"}\r\n    ]\r\n    \r\n    return (\r\n            <div id=\"jobPostFields\">\r\n                <div className=\"jobpost__bg\">\r\n                        <h2 className=\"jobpost__title\">Create your account to post your job</h2>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <form className=\"jobpost__form\" id=\"jobfields\" onSubmit={handleSubmit(onSubmit)}>               \r\n                                <label name=\"companyLabel\"  htmlFor=\"company\">Your company name <span className=\"required\">*</span></label>\r\n                                <input name=\"companyName\" id=\"company\" ref={register({ required: true})} />\r\n                                <p className=\"error__message\">{errors?.companyName?.message}</p>\r\n\r\n                                <label name=\"fullNameLabel\" htmlFor=\"fullname\">Your full name <span className=\"required\">*</span></label>\r\n                                <input type=\"text\" id=\"fullname\" name=\"fullName\" ref={register({ required: true})}/>\r\n                                <p className=\"error__message\">{errors.fullName?.message}</p>\r\n\r\n                                <label name=\"emailLabel\" htmlFor=\"email\">Your Email <span className=\"required\">*</span></label>\r\n                                <input name=\"email\" id=\"email\"\r\n                                        ref={register({\r\n                                            required: true,\r\n                                            validate: (input) => isEmail(input),\r\n                                        })}\r\n                                        placeholder=\"Email\"\r\n                                />\r\n                                <p className=\"error__message\">{errors.email?.message}</p>\r\n\r\n                                <label name=\"phoneLabel\" htmlFor=\"phone\">Your number (optional)</label>\r\n                                <Controller\r\n                                    as={\r\n                                        <PhoneInput\r\n                                    inputProps={{\r\n                                    name: 'phone',\r\n                                    required: true,\r\n                                    autoFocus: true\r\n                                    }}\r\n                                    country={'uz'}\r\n                                    value={phone}\r\n                                    onChange={phone => setPhone({ phone })}\r\n                                /> }\r\n                                name=\"phone\"\r\n                                control={control}\r\n                                rules= {{required: false}}\r\n                                /> \r\n                                {/* <input type=\"tel\" id=\"tel\" name=\"tel\" ref={register({ required: true})}/> */}\r\n                                <label name=\"cityLabel\" htmlFor=\"city\">City <span className=\"required\">*</span></label>\r\n                                <input type=\"text\" id=\"city\" name=\"city\" ref={register({ required: true})}/>\r\n                                <p className=\"error__message\">{errors.city?.message}</p>\r\n\r\n                                <label name=\"regionLabel\" htmlFor=\"region\">Region <span className=\"required\">*</span></label>\r\n                                <input type=\"text\" id=\"region\" name=\"region\" ref={register({ required: true})}/>\r\n                                <p className=\"error__message\">{errors.region?.message}</p>\r\n\r\n                                <label name=\"countryLabel\" htmlFor=\"country\">Country <span className=\"required\">*</span></label>\r\n                                <Controller\r\n                                    as={\r\n                                        <AutocompleteCountry/>\r\n                                    }\r\n                                    name=\"isNightShift\"\r\n                                    control={control}\r\n                                    />\r\n                                {/* <input type=\"text\" id=\"country\" name=\"country\" ref={register({ required: true})}/> */}\r\n                                <p className=\"error__message\">{errors.country?.message}</p>\r\n\r\n                                <label name=\"industryLabel\" htmlFor=\"industry\">Industry <span className=\"required\">*</span></label>\r\n                                <p>Select the industry thst best describes your company.</p>\r\n                                <select name=\"industry\" ref={register({required:true})}>\r\n                                    <option value=\"industry1\">industry1</option>\r\n                                    <option value=\"industry2\">industry2</option>\r\n                                    <option value=\"industry3\">industry3</option>\r\n                                </select>\r\n\r\n                                <label name=\"jobTitleLabel\" htmlFor=\"jobTitle\">Job title <span className=\"required\">*</span></label>\r\n                                <input type=\"text\" id=\"jobTitle\" name=\"jobTitle\" ref={register({ required: true})}/>\r\n                                <p className=\"error__message\">{errors.jobTitle?.message}</p>\r\n\r\n                                <label name=\"question\">Where will employee work? <span className=\"required\">*</span></label>\r\n                                <div className=\"radios\">\r\n                                    <div className=\"radio__btn\">\r\n                                        <input type=\"radio\" id=\"atoffice\" name=\"workplace\" value=\"At Office\" ref={register({ required: true})}/>\r\n                                        <label name=\"atofficeLabel \" htmlFor=\"atoffice\">At Office</label>\r\n                                    </div>\r\n                                    <div className=\"radio__btn\">\r\n                                        <input type=\"radio\" id=\"multiloc\" name=\"workplace\" value=\"Multi-location\" ref={register({ required: true})}/>\r\n                                        <label name=\"multilocLabel\" htmlFor=\"multiloc\">Multi Locations</label>\r\n                                    </div>\r\n                                    <div className=\"radio__btn\">\r\n                                        <input type=\"radio\" id=\"remote-19\" name=\"workplace\" value=\"Remote Due To Covid-19\"/>\r\n                                        <label name=\"remoteDueToLabel\" htmlFor=\"remote-19\" ref={register({ required: true})}>Remote due to Covid-19</label>\r\n                                    </div>\r\n                                    <div className=\"radio__btn\">\r\n                                        <input type=\"radio\" id=\"fulRemote\" name=\"workplace\" value=\"Full Remote\" ref={register({ required: true})}/>\r\n                                        <label name=\"fullRemoteLabel\" htmlFor=\"fulRemote\">Fully remote</label>\r\n\r\n                                    </div>\r\n                                    <div className=\"radio__btn\">\r\n                                        <input type=\"radio\" id=\"ontheroad\" name=\"workplace\" value=\"On The Road\" ref={register({ required: true})}/>\r\n                                        <label name=\"onTheRoadLabel\" htmlFor=\"ontheroad\">On the road</label>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                                <label name=\"adverLocLabel\" htmlFor=\"advertloc\">Where would you like to advertise this job? <span className=\"required\">*</span> </label>\r\n                                <input type=\"text\" id=\"advertloc\" name=\"adRegion\" autoComplete={true}\r\n                                ref={register({ required: true})}\r\n                                />\r\n                                \r\n                                <label>Is this job full time or part time? <span className=\"required\">*</span></label>\r\n                                <div className=\"radios\">\r\n                                    <div className=\"radio__btn\">\r\n                                        <input type=\"radio\" id=\"full\" name=\"jobCondition\" value=\"Full Time\" ref={register({ required: true})}/>\r\n                                    <label name=\"fullTimeLabel\" htmlFor=\"full\">Full time</label>\r\n                                    </div>\r\n                                    <div className=\"radio__btn\">\r\n                                        <input type=\"radio\" id=\"part\" name=\"jobCondition\" value=\"Part Time\" ref={register({ required: true})}/>\r\n                                    <label name=\"partTimeLabel\" htmlFor=\"part\">Part time</label>\r\n                                    </div>\r\n                                    <div className=\"radio__btn\">\r\n                                        <input type=\"radio\" id=\"fullandpart\" name=\"jobCondition\" value=\"Part And Full Time\" ref={register({ required: true})}/>\r\n                                    <label name=\"fullAndPartLabel\" htmlFor=\"fullandpart\">Either full-time or paer-time</label>\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n\r\n                                <label>Are these additional job types that apply? <span className=\"required\">*</span></label>\r\n                                <div className=\"radios\">\r\n                                    <div className=\"radio__btn\">\r\n                                        <input type=\"radio\" id=\"internship\" name=\"jobType\" value=\"internship\" ref={register({ required: true})}/>\r\n                                        <label name=\"internshipLabel\" htmlFor=\"internship\">Internship</label>\r\n                                    </div>\r\n                                    <div className=\"radio__btn\">\r\n                                        <input type=\"radio\" id=\"temporary\" name=\"jobType\" value=\"temporary\" ref={register({ required: true})}/>\r\n                                        <label name=\"tempLabel\" htmlFor=\"temporary\">Temporary</label>\r\n                                    </div>\r\n                                    <div className=\"radio__btn\">\r\n                                        <input type=\"radio\" id=\"contract\" name=\"jobType\" value=\"contract\" ref={register({ required: true})}/>\r\n                                        <label name=\"contractLabel\" htmlFor=\"contract\">Contract</label>\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n                                <label name=\"salaryLabel\" htmlFor=\"salfrom\">Salary</label>\r\n\r\n                                <div className=\"salary_inputs\">\r\n                                <div className=\"row salary_box\">\r\n                                    <div className=\"col-md-4 inp\">\r\n                                        <label name=\"fromLabel\" htmlFor=\"from\">From </label>\r\n                                        <input type=\"number\" id=\"salfrom\" name=\"fromSalary\" ref={register({ required: true})}/>\r\n                                        <p className=\"error__message\">{errors.fromSalary?.message}</p>\r\n                                    </div>\r\n                                    <div className=\"col-md-4 inp\">\r\n                                        <label name=\"toLabel\" htmlFor=\"to\">To </label>\r\n                                        <input type=\"number\" id=\"to\" name=\"toSalary\" ref={register({ required: true})}/>\r\n                                        <p className=\"error__message\">{errors.toSalary?.message}</p>\r\n                                    </div>\r\n                                    <div className=\"col-md-4 inp\">\r\n                                    <div className=\"sal_type\">\r\n                                        <label name=\"typeLabel\" htmlFor=\"salaryType\">Type </label>\r\n                                        <select name=\"salaryType\" id=\"salaryType\" ref={register({ required: true})}>\r\n                                            <option key=\"value\" value=\"0\" disabled>Select an option</option>\r\n                                            <option key=\"value\" value=\"hour\">hour</option>\r\n                                            <option key=\"value\" value=\"day\">day</option>\r\n                                            <option key=\"value\" value=\"month\">month</option>\r\n                                        </select>\r\n                                        <p className=\"error__message\">{errors.salaryType?.message}</p>\r\n                                    </div> \r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"nightShift\">\r\n                                <Controller\r\n                                    as={\r\n                                <FormGroup>\r\n                                <FormControlLabel\r\n                                    control={<Switch checked={checked} color=\"primary\" \r\n                                    defaultValue={checked} ref={register({required:false})} \r\n                                    name=\"isNightShift\" \r\n                                    onChange={toggleChecked} \r\n                                    value={!checked? \"Night job\" : \"Day job\"}\r\n                                    />}\r\n                                    label={checked? \"Nightshift\" : \"Dayshift\"}\r\n                                />\r\n                                </FormGroup>\r\n                                }\r\n                                name=\"isNightShift\"\r\n                                control={control}\r\n                                // rules= {{required:false}} \r\n                         />\r\n                                </div>\r\n                                <div className=\"additional\">\r\n                                    <label name=\"aboutJob\" htmlFor=\"aboutJob\">About job </label>\r\n                                    <textarea name=\"aboutJob\" id=\"aboutJob\" cols=\"30\" rows=\"7\" ref={register({ required: false})}></textarea>\r\n                                    <label name=\"addReqLabel\" htmlFor=\"addRequirement\">Additional requirements(if needed) </label>\r\n                                    <textarea name=\"addRequirement\" id=\"addRequirement\" cols=\"30\" rows=\"7\" ref={register({ required: false})}></textarea>\r\n                                </div>\r\n                                <div>\r\n                                <label className=\"language__title\">Skills</label>\r\n                                 <Controller\r\n                                    as={\r\n                                <Select\r\n                                    defaultValue={[]}\r\n                                    isMulti\r\n                                    name=\"skills\"\r\n                                    options={technicalSkills}\r\n                                    className=\"basic-multi-select\"\r\n                                    classNamePrefix=\"select\"\r\n                                />\r\n                                    }\r\n                                    name=\"skills\"\r\n                                    control={control}\r\n                                    rules= {{required: true}}\r\n                                />\r\n                                <p className=\"error__message\">{errors.skills?.message}</p>\r\n                                <label className=\"language__title\">Languages</label>\r\n                                <Controller\r\n                                    as={\r\n                                <Select\r\n                                    defaultValue={[]}\r\n                                    isMulti\r\n                                    name=\"languages\"\r\n                                    options={languages}\r\n                                    className=\"basic-multi-select\"\r\n                                    classNamePrefix=\"select\"\r\n                                />\r\n                                    }\r\n                                    name=\"languages\"\r\n                                    control={control}\r\n                                    rules= {{required: true}}\r\n                                />\r\n                                <p className=\"error__message\">{errors.languages?.message}</p>      \r\n\r\n                               \r\n                                </div>\r\n                                    \r\n                                </div>\r\n                                <button htmlFor=\"jobfields\" className=\" btn btn-success postJobFieldButton mt-5\" type=\"submit\">Save and Post</button>\r\n                            </form>\r\n                                \r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <PostView1/>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                </div>\r\n                {\r\n                    \r\n                }\r\n        </div>\r\n    )\r\n  \r\n}\r\n\r\nexport default PostJobFields\r\n",["336","337"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\context\\CountriesContext.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\technicalSkills\\TechSkills2.js",["338","339","340","341","342","343","344"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\technicalSkills\\NewM.js",["345","346"],"import React, {useState, useContext} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {TechnicalSkillsContext} from \"../../../context/TechnicalSkillsContext\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport PropTypes from 'prop-types';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport NumberFormat from 'react-number-format';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport { withStyles, makeStyles} from '@material-ui/core/styles';\r\nimport {deleteTechSkill, saveTechSkills, getSelectedTechSkill, editTechSkill} from \"../../../stores/actions/technicalSkillsAction\";\r\nimport  \"../../../styles/TechSkills2.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n  }));\r\n  \r\n  const ValidationTextField = withStyles({\r\n    root: {\r\n      '& input:invalid + fieldset': {\r\n        borderColor: 'ff1100',\r\n        borderWidth: 2,\r\n      },\r\n    },\r\n  })(TextField);\r\n\r\nfunction TechSkills2() {\r\n    const dispatch = useDispatch();\r\n    const techskills = useSelector(state => state.technicalSkillsReducer.techSkillsList)\r\n    const selectedTechSkill = useSelector(state => state.technicalSkillsReducer.selectedTechSkill)\r\n    console.log(\"this is I select\",selectedTechSkill);\r\n\r\n    const {technicalSkills} = useContext(TechnicalSkillsContext);\r\n\r\n  const classes = useStyles();\r\n  const {control,reset } = useForm();\r\n\r\n  const initialState = {\r\n    id:\"\",\r\n    tech_skill:\"\",\r\n    tech_skill_rank:\"\"\r\n  }\r\n    const [techSkill, setTechSkill] = useState(initialState);\r\n    const [selected, setSelected] = useState(\"\");\r\n    const [editClicked, setEditClicked] = useState(false)\r\n\r\nconsole.log(\"TECHSKILL\", techSkill);\r\n\r\n\r\n\r\n    const onSubmit = (e) => {\r\n      e.preventDefault(); \r\n      if(techSkill.id===\"\"){\r\n        dispatch(saveTechSkills({...techSkill, ...{id:Date.now()}}))\r\n      }else{\r\n        dispatch(editTechSkill(techSkill))\r\n      }      \r\n      \r\n     e.target.reset();\r\n     setSelected(\"\")\r\n      setTechSkill(initialState)\r\n    };\r\n  \r\n    const handleRemoveTechSkill =(e, i)=>{\r\n      e.preventDefault()\r\n      dispatch(deleteTechSkill(i))\r\n    }\r\n    const handleEditTechSkill =(e,id)=>{\r\n      e.preventDefault()\r\n      setEditClicked(!editClicked)\r\n      dispatch(getSelectedTechSkill(id))\r\n     let selFromReducer = selectedTechSkill?.tech_skill\r\ntechnicalSkills.map(item =>(\r\n  item.title===selFromReducer? setSelected(item) : \"\"\r\n))\r\n      setTechSkill(selectedTechSkill)\r\n      // setTechSkill({tech_skill: selectedTechSkill.setech_skill, tech_skill_rank: selectedTechSkill.tech_skill_rank}\r\n    // )\r\n    }\r\n\r\n      const handleChange = (e)=>{\r\n      const {name,value} = e.target\r\n      setTechSkill({...techSkill, ...{tech_skill: selected?.title, tech_skill_rank:value}})\r\n      }\r\n      \r\n    return (\r\n        <div className=\"technical__skillsContainer\">\r\n          <div className=\"technical__skillsHeader\">\r\n            {techskills.length!==0 &&\r\n            techskills.map((sk, i) =>(\r\n               <div className=\"tech__skillbox\">\r\n                   <div className=\"tech__skillTitleBox\">\r\n                        <h5 className=\"tech__skillTitle\">{sk.tech_skill +\" \"+ sk.tech_skill_rank} %</h5>\r\n                   </div>\r\n                  <div className=\"tech_skillButtons\">\r\n                    <Fab size=\"small\" color=\"primary\" aria-label=\"edit\" onClick={e=>handleEditTechSkill(e, sk.id)}  className={classes.margin}>\r\n                        <EditIcon className=\"tech__skillEdit\"/>\r\n                    </Fab>\r\n                    <Fab size=\"small\" color=\"secondary\" aria-label=\"delete\" onClick={e=>handleRemoveTechSkill(e, i)} className={classes.margin}>\r\n                        <DeleteOutlineIcon className=\"tech__skillDelete\"/>\r\n                    </Fab>\r\n                  </div>\r\n                  \r\n              </div>\r\n            ))\r\n            }\r\n           \r\n          </div>\r\n            <form className=\"technical__skillsForm\" onSubmit={onSubmit} id=\"tech_skillsForm\" >\r\n                    <div className=\"special_box2\">\r\n                        <Controller\r\n                            render={({onChange, value}) =>\r\n                            <Autocomplete\r\n                                valiant=\"outlined\"\r\n                                options={technicalSkills}\r\n                                className=\"tech__skillsInput\"\r\n                                getOptionLabel={(option) => option.title}\r\n                                id={\"tech_skill\"}\r\n                                required\r\n                                name={\"tech_skill\"}\r\n                                defaultValue={techSkill?.tech_skill}\r\n                                value={selected}\r\n                                onChange={((e, newValue)=>{\r\n                                    setSelected(newValue)\r\n                                })\r\n                                }\r\n                                renderInput={(params) => (\r\n                                <TextField {...params} label=\"Technical Skill\" variant=\"outlined\" margin=\"normal\" />\r\n                                )}\r\n                            />\r\n                            }\r\n                            name={\"tech_skill\"}\r\n                           control={control}\r\n                           rules= {{required: true}}\r\n                           defaultValue={\"\"}\r\n                         /> \r\n                        <Controller\r\n                            render={({onChange, value}) =>\r\n                            <ValidationTextField\r\n                                label=\"Technical skill rank\"\r\n                                className=\"tech__skillsInput\"\r\n                                id=\"tech_rank\"\r\n                                defaultValue={\"\"}\r\n                                onChange={(e=>handleChange(e))}\r\n                                placeholder=\"from 1 to 100\"\r\n                                required\r\n                                value={techSkill?.tech_skill_rank}\r\n                                name=\"tech_skill_rank\"\r\n                                variant=\"outlined\"\r\n                                multiline\r\n                                InputProps={{\r\n                                inputComponent: NumberFormatCustom,\r\n                                }}\r\n                            />\r\n                            }\r\n                            name=\"tech_skill_rank\"\r\n                            control={control}\r\n                            rules= {{required: true}}\r\n                        /> \r\n                    </div>\r\n            <button type=\"submit\" className=\"btn btn-success btn-block mt-3\">save</button>\r\n            </form>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TechSkills2\r\n\r\n\r\n\r\nfunction NumberFormatCustom(props) {\r\n    const { inputRef, onChange, ...other } = props;\r\n  \r\n    return (\r\n      <NumberFormat\r\n        {...other}\r\n        getInputRef={inputRef}\r\n        onValueChange={(values) => {\r\n          onChange({\r\n            target: {\r\n              name: props.name,\r\n              value: values.value,\r\n            },\r\n          });\r\n        }}\r\n        minLength=\"4\"\r\n        maxLength=\"4\"\r\n        isNumericString\r\n      />\r\n    );\r\n  }\r\n  \r\n  NumberFormatCustom.propTypes = {\r\n    inputRef: PropTypes.func.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n  };","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\keySkills\\KeySkillsSelect.js",["347"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\education\\EducationForm.js",["348"],"import React, {useState} from 'react';\r\nimport \"../../../styles/EducationForm.css\"\r\nimport { withStyles, makeStyles} from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {saveEducation} from \"../../../stores/actions/educationFormAction\";\r\nimport PropTypes from 'prop-types';\r\nimport NumberFormat from 'react-number-format';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport countries from \"i18n-iso-countries\";\r\nimport uzbek from \"i18n-iso-countries/langs/uz.json\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nconst ValidationTextField = withStyles({\r\n  root: {\r\n    '& input:invalid + fieldset': {\r\n      borderColor: 'ff1100',\r\n      borderWidth: 2,\r\n    },\r\n  },\r\n})(TextField);\r\n\r\nfunction EducationForm() {\r\n  const [checked, setChecked] = useState(false); \r\n  const initialValue={\r\n     endYear: '',\r\n    startYear:'',\r\n  }\r\n  const [values, setValues] = useState(initialValue);\r\n  const classes = useStyles();\r\n  const {control } = useForm();\r\n  const education  = useSelector(state => state.educationReducer.education);\r\n  const dispatch = useDispatch();\r\n  const [educationFields, setEducationFields] = useState([])\r\n   \r\n const onSubmit = (e) => {\r\n      e.preventDefault();\r\n    dispatch(saveEducation(educationFields))\r\n    setChecked(false)\r\n    setValues(initialValue)\r\n    e.target.reset()\r\n  };\r\n \r\n    const handleChange = (e)=>{\r\n     \r\n      setValues({\r\n        ...values,\r\n        [e.target.name]: e.target.value,\r\n      });\r\n      setEducationFields({\r\n        ...educationFields,\r\n        ...{[e.target.name]: e.target.value}\r\n      })\r\n      // const {name, value} = e.target\r\n      // education[name]=value\r\n      \r\n      console.log(\"education>>>\", education);\r\n    }\r\n    countries.registerLocale(uzbek);\r\n    const uz = countries.getNames(\"uz\", {select: \"official\"})\r\n    console.log(uz);\r\n    return (\r\n      <div>\r\n        {<form className=\"educationForm\" onSubmit={onSubmit}>\r\n            <Controller\r\n               render={({onChange, value}) =>\r\n                   <ValidationTextField\r\n                      className={\"profileInfoFields\"}\r\n                      label=\"Degree\"\r\n                      required\r\n                      placeholder=\"Bachelor's\"\r\n                      multiline\r\n                      onChange={e => handleChange(e)}\r\n                      variant=\"outlined\"\r\n                      id=\"degree\"\r\n                      name=\"degree\"\r\n                    />\r\n                  }\r\n                name=\"degree\"\r\n                control={control}\r\n                rules= {{required: true}}\r\n            /> \r\n            <Controller\r\n                render={({onChange, value}) =>\r\n                   <ValidationTextField\r\n                      className={\"profileInfoFields\"}\r\n                      label=\"Major\"\r\n                      required\r\n                      placeholder=\"Computer Science\"\r\n                      multiline\r\n                      onChange={e => handleChange(e)}\r\n                      variant=\"outlined\"\r\n                      id=\"major\"\r\n                      name=\"major\"\r\n                    />\r\n                  }\r\n                name=\"major\"\r\n                control={control}\r\n                rules= {{required: true}}\r\n            /> \r\n            <Controller\r\n                render={({onChange, value}) =>\r\n                   <ValidationTextField\r\n                      className={\"profileInfoFields\"}\r\n                      label=\"University\"\r\n                      required\r\n                      placeholder=\"Harvard\"\r\n                      multiline\r\n                      variant=\"outlined\"\r\n                      onChange={e => handleChange(e)}\r\n                      id=\"university\"\r\n                      name=\"university\"\r\n                    />\r\n                  }\r\n                name=\"university\"\r\n                control={control}\r\n                rules= {{required: true}}\r\n            /> \r\n            <div className=\"study__years\">\r\n            <Controller\r\n                render={({onChange, value}) =>\r\n                   <ValidationTextField\r\n                      className=\"profileInfoFields\"\r\n                      label=\"Start\"\r\n                      required\r\n                      value={values.startYear}\r\n                      placeholder=\"2016\"\r\n                      multiline\r\n                      onChange={handleChange}\r\n                      variant=\"outlined\"\r\n                      id=\"startYear\"\r\n                      name=\"startYear\"\r\n                      InputProps={{\r\n                        inputComponent: NumberFormatCustom,\r\n                      }}\r\n                    />\r\n                  }\r\n                name=\"startYear\"\r\n                control={control}\r\n                rules= {{required: true}}\r\n            /> \r\n            {checked ? \" \" : ( \r\n            <Controller\r\n                render={({onChange, value}) =>\r\n                <ValidationTextField\r\n                    label=\"End\"\r\n                    className=\"profileInfoFields\"\r\n                    value={values.endYear}\r\n                    onChange={handleChange}\r\n                    placeholder=\"2021\"\r\n                    required\r\n                    name=\"endYear\"\r\n                    variant=\"outlined\"\r\n                    multiline\r\n                    id=\"endYear\"\r\n                    InputProps={{\r\n                      inputComponent: NumberFormatCustom,\r\n                    }}\r\n              />\r\n                  }\r\n                name=\"endYear\"\r\n                control={control}\r\n                rules= {{required: true}}\r\n            /> \r\n            )} \r\n            <Controller\r\n                render={({onChange, value}) =>\r\n                   <FormGroup>\r\n                   <FormControlLabel\r\n                       control={<Switch checked={checked} color=\"primary\" \r\n                       name=\"toPresent\" \r\n                       onChange={e=>{setChecked(!checked)}} \r\n                       value={checked}\r\n                       />}\r\n                       label={checked? \"To present\" : \"\"}\r\n                   />\r\n                   </FormGroup>\r\n                   }\r\n                   name=\"toPresent\"\r\n                   control={control}\r\n                   // rules= {{required:false}} \r\n            />\r\n\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-success btn-block\">save</button>\r\n        </form>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EducationForm\r\n\r\n\r\n\r\nfunction NumberFormatCustom(props) {\r\n  const { inputRef, onChange, ...other } = props;\r\n\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      minLength=\"4\"\r\n      maxLength=\"4\"\r\n      isNumericString\r\n    />\r\n  );\r\n}\r\n\r\nNumberFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n",["349","350"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\experience\\ExperienceForm.js",["351","352","353","354"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\type.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\achievementsAction.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\achivements\\AchievementForm.js",["355"],"import React, {useState} from 'react';\r\nimport \"../../../styles/EducationForm.css\"\r\nimport { withStyles, makeStyles} from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {saveAchievement} from \"../../../stores/actions/achievementsAction\";\r\nimport PropTypes from 'prop-types';\r\nimport NumberFormat from 'react-number-format';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nconst ValidationTextField = withStyles({\r\n  root: {\r\n    '& input:invalid + fieldset': {\r\n      borderColor: 'ff1100',\r\n      borderWidth: 2,\r\n    },\r\n  },\r\n})(TextField);\r\n\r\nfunction AchievementForm() {\r\n  const initialYear ={\r\n     startYear:'',\r\n  }\r\n  const [values, setValues] = useState(initialYear);\r\n  const classes = useStyles();\r\n  const {control } = useForm();\r\n  const achievements  = useSelector(state => state.achievementsReducer.achievements);\r\n  const dispatch = useDispatch();\r\n  const [achievementsArr, setAchievementsArr] =useState({})\r\n\r\n  const onSubmit = (e) => {\r\n      e.preventDefault();\r\n    dispatch(saveAchievement(achievementsArr))\r\n    setAchievementsArr({})\r\n    setValues(initialYear)\r\n    e.target.reset()\r\n  };\r\n\r\n  const handleChange = (e)=>{\r\n    // const {name,value} = e.target\r\n     setAchievementsArr(prev => ({...prev, ...{\r\n       [e.target.name] : e.target.value\r\n     }}))\r\n    }\r\n\r\n    return (\r\n      <div className=\"technical__skillsContainer\">\r\n        <div className=\"achievement__boxContainer\">\r\n            {achievements && \r\n            achievements.map((achievement, index)=>(\r\n            <div className=\"achievement__box\" key={index}>\r\n              <div className=\"achievement_boxInfo\">\r\n                  <h5 className=\"tech__skillTitle\">{achievement.achievement}</h5>\r\n                  <p className=\"achievement__address\">{achievement.organizationName} / {achievement.organizationName}</p>\r\n                  <p className=\"achievement__address\">{achievement.startYear}</p>\r\n              </div>\r\n              <div className=\"tech_skillButtons\">\r\n                <Fab size=\"small\" color=\"primary\" aria-label=\"edit\"  className={classes.margin}>\r\n                    <EditIcon className=\"tech__skillEdit\"/>\r\n                </Fab>\r\n                <Fab size=\"small\" color=\"secondary\" aria-label=\"delete\" className={classes.margin}>\r\n                    <DeleteOutlineIcon className=\"tech__skillDelete\"/>\r\n                </Fab>\r\n              </div>\r\n            </div>\r\n              )\r\n            )\r\n          }\r\n        </div>\r\n       \r\n        {<form className=\"educationForm\" onSubmit={onSubmit}>\r\n            <Controller\r\n               render={({onChange, value}) =>\r\n                   <ValidationTextField\r\n                      className={\"profileInfoFields\"}\r\n                      label=\"Achievement\"\r\n                      required\r\n                      placeholder=\"IELTS Score 7.5...\"\r\n                      multiline\r\n                      onChange={e => handleChange(e)}\r\n                      variant=\"outlined\"\r\n                      id=\"achievement\"\r\n                      name=\"achievement\"\r\n                    />\r\n                  }\r\n                name=\"achievement\"\r\n                control={control}\r\n                rules= {{required: true}}\r\n            /> \r\n            <Controller\r\n                render={({onChange, value}) =>\r\n                   <ValidationTextField\r\n                      className={\"profileInfoFields\"}\r\n                      label=\"Organization\"\r\n                      required\r\n                      placeholder=\"British Council\"\r\n                      multiline\r\n                      onChange={e => handleChange(e)}\r\n                      variant=\"outlined\"\r\n                      id=\"organizationName\"\r\n                      name=\"organizationName\"\r\n                    />\r\n                  }\r\n                name=\"organizationName\"\r\n                control={control}\r\n                rules= {{required: true}}\r\n            /> \r\n            <Controller\r\n                render={({onChange, value}) =>\r\n                   <ValidationTextField\r\n                      className={\"profileInfoFields\"}\r\n                      label=\"Address\"\r\n                      required\r\n                      placeholder=\"213, ...Street, Tashkent, Uzb\"\r\n                      multiline\r\n                      variant=\"outlined\"\r\n                      onChange={e => handleChange(e)}\r\n                      id=\"address\"\r\n                      name=\"address\"\r\n                    />\r\n                  }\r\n                name=\"address\"\r\n                control={control}\r\n                rules= {{required: true}}\r\n            /> \r\n            <div className=\"study__years\">\r\n            <Controller\r\n                render={({onChange, value}) =>\r\n                   <ValidationTextField\r\n                      className=\"profileInfoFields\"\r\n                      label=\"Start\"\r\n                      required\r\n                      placeholder=\"2016\"\r\n                      multiline\r\n                      onChange={e => handleChange(e)}\r\n                      variant=\"outlined\"\r\n                      id=\"startYear\"\r\n                      name=\"startYear\"\r\n                      InputProps={{\r\n                        inputComponent: NumberFormatCustom,\r\n                      }}\r\n                    />\r\n                  }\r\n                name=\"startYear\"\r\n                control={control}\r\n                rules= {{required: true}}\r\n            />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-success btn-block\">save</button>\r\n        </form>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AchievementForm\r\n\r\n\r\n\r\nfunction NumberFormatCustom(props) {\r\n  const { inputRef, onChange, ...other } = props;\r\n\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      minLength=\"4\"\r\n      maxLength=\"4\"\r\n      isNumericString\r\n    />\r\n  );\r\n}\r\n\r\nNumberFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\achievementsReducer.js",[],["356","357"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\JobSearchBanner.js",["358"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\BannerJob.js",["359","360","361","362"],"import React, {useState, useContext, useEffect} from 'react';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport \"../styles/PostJob.css\";\r\nimport PostAddIcon from '@material-ui/icons/PostAdd';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport axios from 'axios';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {CandidatesContext} from \"../context/CandidatesContext\";\r\nfunction BannerJob() {\r\n    const { t, i18n } = useTranslation();\r\n    const history = useHistory();\r\n    const {candidates} = useContext(CandidatesContext);\r\n    return (\r\n        <div className=\"postJob\" id=\"postJob\">\r\n            <div className=\"postJob__title\">\r\n                <h3 >{t(\"banner_post_job_title\")}</h3>\r\n            </div>\r\n            <div className=\"postJob__img\">\r\n                <img src=\"../../assets/images/secretary.png\" alt=\"postjob\"/>\r\n            </div>\r\n            <div className=\"postJob__title2\">\r\n                <h1>{t(\"banner_post_job_title2\")}</h1>\r\n            </div>\r\n            <div className=\"findJob__form\">\r\n                <form action=\"#\" id=\"findCandidateSubmit\">\r\n                    <label htmlFor=\"free-solo-demo\"><h3>{t(\"banner_post_job_label1\")}</h3></label>\r\n                    <Autocomplete\r\n                         id=\"free-solo-demo\"\r\n                         freeSolo\r\n                         options={candidates.map((candidate) => candidate.job_title)}\r\n                         renderInput={(params) => (\r\n                           <TextField {...params} label={t(\"banner_post_job_placeholder1\")} margin=\"normal\" variant=\"outlined\" />\r\n                         )}\r\n                    />\r\n                    <label htmlFor=\"free-solo-2-demo\"><h3>{t(\"banner_post_job_label2\")}</h3></label>\r\n                     <Autocomplete\r\n                          freeSolo\r\n                          id=\"free-solo-2-demo\"\r\n                          disableClearable\r\n                          options={candidates.map((candidate) => candidate.address)}\r\n                          renderInput={(params) => (\r\n                         <TextField\r\n                              {...params}\r\n                              label={t(\"banner_post_job_placeholder2\")}\r\n                              icon={<SearchIcon/>}\r\n                              margin=\"normal\"\r\n                              variant=\"outlined\"\r\n                              InputProps={{ ...params.InputProps, type: 'search' }}\r\n                         />\r\n                      )}\r\n                     />   \r\n                </form>\r\n            </div>\r\n            <div className=\"button__container\">\r\n                <button className=\"btn postJob__buttonFind\" htmlFor=\"findCandidateSubmit\"  onClick={e => history.push(\"/searchcandidates\")}>{t(\"banner_post_job_post_button2\")} <SearchIcon/></button>\r\n                <button className=\"btn postJob__buttonFind\" onClick={e => history.push(\"/jobpost\")}>{t(\"banner_post_job_post_button1\")} <PostAddIcon/></button>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BannerJob\r\n","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\autocomleteInputs\\AutocompleteCountry.js",["363","364","365"],"\r\nimport React, {useState, useEffect} from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport countries from \"i18n-iso-countries\";\r\nimport uzbek from \"i18n-iso-countries/langs/uz.json\";\r\nimport english from \"i18n-iso-countries/langs/en.json\";\r\nimport russian from \"i18n-iso-countries/langs/ru.json\";\r\nimport { useTranslation } from \"react-i18next\";\r\nfunction sleep(delay = 0) {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, delay);\r\n  });\r\n}\r\ncountries.registerLocale(uzbek);\r\ncountries.registerLocale(english);\r\ncountries.registerLocale(russian);\r\nconst uz = countries.getNames(\"uz\", { select: \"official\" });\r\nconst ru = countries.getNames(\"ru\", { select: \"official\" });\r\nconst en = countries.getNames(\"en\", { select: \"official\" });\r\n\r\nexport default function AutocompleteCountry() {\r\nconst { t, i18n } = useTranslation();\r\n  const [open, setOpen] = useState(false);\r\n  const [count, setCount] = useState([]);\r\n\r\n  console.log(\"Count\", count);\r\n  useEffect(() => {\r\n    if(i18n.language===\"uz\"){\r\n        Object.keys(uz).forEach((key, i) => {\r\n        if (key === \"UZ\") {\r\n          count[i] = {\r\n            id: key,\r\n            name: \"O'zbekiston\"\r\n          };\r\n        } else {\r\n          count[i] = {\r\n            id: key,\r\n            name: uz[key]\r\n          };\r\n        }\r\n      });\r\n    }else if(i18n.language===\"ru\"){\r\n        Object.keys(ru).forEach((key, i) => {\r\n              count[i] = {\r\n                id: key,\r\n                name: ru[key]\r\n              };\r\n    })\r\n    }else{\r\n        Object.keys(en).forEach((key, i) => {\r\n            count[i] = {\r\n              id: key,\r\n              name: en[key]\r\n            };\r\n    })\r\n    }\r\n  }, [t, i18n])\r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <Autocomplete\r\n        id=\"country\"\r\n        style={{ width: \"100% \" }}\r\n        open={open}\r\n        onOpen={() => {\r\n          setOpen(true);\r\n        }}\r\n        onClose={() => {\r\n          setOpen(false);\r\n        }}\r\n        getOptionSelected={(option, value) => option.name === value.name}\r\n        getOptionLabel={(option) => option.name}\r\n        options={count}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            label={t(\"autocomplete_country\")}\r\n            variant=\"outlined\"\r\n            InputProps={{\r\n              ...params.InputProps\r\n            }}\r\n          />\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\languageFrom\\LanguageForm.js",["366","367","368","369","370","371"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\context\\LanguagesContext.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\App.js",["372"],"import './App.css';\nimport NavBar from './pages/NavBar';\nimport { Switch, Route} from \"react-router-dom\";\nimport { Transition, TransitionGroup } from 'react-transition-group';\nimport { play, exit } from './timelines'\nimport PageNotFound from './components/PageNotFound';\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport JobPost from './pages/JobPost';\nimport JobSearch from './pages/JobSearch';\nimport BuildCV from './pages/BuildCV';\nimport Contacts from './pages/Contacts';\nimport Candidates from './pages/Candidates';\nimport CandidatesContextProvider from './context/CandidatesContext';\nimport EmployerContextProvider from './context/EmployerContext';\nimport JobsContextProvider, { JobsContext } from './context/JobsContext';\nimport CountriesContextProvider from './context/CountriesContext';\n// Importing the Bootstrap CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport KeySkillsContextProvider from './context/KeySkillsContext';\nimport TechnicalSkillsContextProvider from \"./context/TechnicalSkillsContext\";\nfunction App() {\n  return (\n    <>\n    <TechnicalSkillsContextProvider>\n      <KeySkillsContextProvider>\n       \n        <JobsContextProvider>\n          <CountriesContextProvider>\n            <CandidatesContextProvider>\n              <EmployerContextProvider>\n                <NavBar/>\n                  <Route render={({ location }) => {\n                          const { pathname, key } = location;\n\n                          return (\n                            <TransitionGroup component={null}>\n                              <Transition\n                                key={key}\n                                appear={true}\n                                onEnter={(node, appears) => play(pathname, node, appears)}\n                                onExit={(node, appears) => exit(node, appears)}\n                                timeout={{enter: 750, exit: 150}}\n                              >\n                                <Switch location={location}>\n                                  <Route exact path=\"/\" component={Home}/>\n                                  <Route path=\"/jobpost\" component={JobPost} />\n                                  <Route path=\"/jobsearch\" component={JobSearch} />\n                                  <Route path=\"/buildresume\" component={BuildCV} />\n                                  <Route path=\"/contact\" component={Contacts} />\n                                  <Route path=\"/login\" component={Login} />\n                                  <Route path=\"/searchcandidates\" component={Candidates}/>\n                                  <Route path=\"/pagenotfount\" component={PageNotFound} />\n                                </Switch>\n                              </Transition>\n                            </TransitionGroup>\n                          )\n                    }}/>\n              </EmployerContextProvider>\n                </CandidatesContextProvider>\n          </CountriesContextProvider>\n        </JobsContextProvider>\n       \n      </KeySkillsContextProvider>\n    </TechnicalSkillsContextProvider>\n    \n    </>\n  );\n  \n}\n\nexport default App;\n","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\pages\\Home.js",["373"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\context\\JobsContext.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\JobSearchMain.js",[],["374","375"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\Completed.js",["376","377","378","379","380","381","382"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\JobSearchList.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\JobSearchRight.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\PostViewCard.js",["383"],"import React, {useState, useContext} from 'react'\r\nimport \"../styles/PostViewCard.css\"\r\nimport {EmployerContext} from \"../context/EmployerContext\";\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Button from '@material-ui/core/Button';\r\nimport DrawerPost from './DrawerPost';\r\nimport { IconButton } from '@material-ui/core';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\n\r\nfunction PostViewCard() {\r\n    \r\n  const {employers} = useContext(EmployerContext);\r\n\r\n\r\n  function truncate(str, n) {\r\n    return str?.length > n ? str.substring(0, n - 1) + \"...\" : str;\r\n}\r\n    return (\r\n        employers.map((postedJob, index) =>(\r\n          <div className=\"col-lg-6 \">\r\n            <div className=\"one__edgeShadow\">\r\n              <div className=\"header__button\">\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  size=\"small\"\r\n                  startIcon={<SaveIcon />}\r\n                >\r\n                  Save job\r\n                </Button>\r\n              </div>\r\n                <div class=\"card__container\"> \r\n                  <div className=\"post__header\">\r\n                <p className=\"job__title\">{postedJob.job_title}</p>\r\n                <p className=\"job__company\">{postedJob.company}</p>\r\n                <p className=\"job__address\">{postedJob.address}</p>\r\n              </div>\r\n                  <div className=\"post__content\">\r\n                <div className=\"job__about\">\r\n                  <ul>\r\n                  <li className=\"aboutMore__list\">\r\n                      <p>{truncate(postedJob.aboutJob, 100)}</p>\r\n                  </li>\r\n                  <li className=\"aboutMore__list\">\r\n                      <p>{postedJob.skills.first} / {postedJob.skills.second} /{postedJob.skills.third}</p>\r\n                  </li>\r\n                </ul>\r\n                </div>\r\n                \r\n              </div>\r\n              \r\n                  <input id={postedJob.id} class=\"toggle\" type=\"checkbox\"/> \r\n                  <label for={postedJob.id} class=\"lbl-toggle\">More...</label>\r\n                  <div class=\"collapsible-content\">\r\n              <div class=\"content-inner\">\r\n                <div className=\"job__aboutMore\">\r\n                  <ul>\r\n                    <li className=\"aboutMore__list\">\r\n                      <p> {truncate(postedJob.aboutJob, 200)}</p>\r\n                    </li>\r\n                    <li className=\"aboutMore__list\">\r\n                      <p> {truncate(postedJob.addRequired, 200)}</p>\r\n                    </li>\r\n\r\n                  </ul>\r\n                  <div className=\"post__footer\">\r\n                      <IconButton>\r\n                        <ExpandLessIcon/>\r\n                      </IconButton>\r\n                      <DrawerPost/>\r\n                  </div>\r\n                  \r\n                </div>\r\n                \r\n              </div>\r\n            </div>\r\n                </div> \r\n            </div>\r\n          \r\n          </div>\r\n              \r\n                \r\n        )))\r\n          \r\n    \r\n}\r\n\r\nexport default PostViewCard\r\n","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\DrawerPost.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\createContacts\\ContactInformation.js",["384","385","386","387"],"import React, {useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/material.css'\r\nimport { withStyles, makeStyles} from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport isEmail from \"validator/lib/isEmail\";\r\nimport { saveContactInfo } from '../../../stores/actions/contactInfoAction';\r\nimport \"../../../styles/ProfileInformationForm.css\"\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst schema = yup.object().shape({\r\n  phone: yup.string().required(),\r\n  address: yup.string().required(),\r\n  email: yup.string().required(),\r\n  \r\n});\r\nfunction ContactInformation() {\r\n\r\n    const { register, errors, handleSubmit, control, formState } = useForm({resolver: yupResolver(schema)});\r\n \r\n    const [phone, setPhone] =useState();\r\n    const ValidationTextField = withStyles({\r\n      root: {\r\n        '& input:valid + fieldset': {\r\n          borderColor: '#00ba5a',\r\n          borderWidth: 2,\r\n        },\r\n        '& input:invalid + fieldset': {\r\n          borderColor: 'ff1100',\r\n          borderWidth: 2,\r\n        },\r\n        '& input:valid:focus + fieldset': {\r\n          borderLeftWidth: 6,\r\n          padding: '4px !important', // override inline-style\r\n        },\r\n      },\r\n    })(TextField);\r\n    const contact  = useSelector(state => state.contactReducer.contact);\r\n      const dispatch = useDispatch();\r\n      \r\n    const onSubmit = (data, e) => {\r\n          e.preventDefault();\r\n        dispatch(saveContactInfo(data))\r\n    // console.log(\" this is me\", data);\r\n        e.target.reset();\r\n        \r\n        setPhone(\"\")\r\n      };\r\n\r\n    return (\r\n      <>\r\n          {\r\n                  <form className=\"contactInfo\" onSubmit={handleSubmit(onSubmit)}>\r\n                      <Controller\r\n                          as={\r\n                              <PhoneInput\r\n                                  inputProps={{\r\n                                  name: 'phone',\r\n                                  required: true,\r\n                                  autoFocus: true\r\n                                  }}\r\n                                  country={'uz'}\r\n                                  value={phone}\r\n                                  onChange={()=> setPhone(phone)}\r\n                                  ref={register({\r\n                                    required: true\r\n                                })}\r\n                              /> }\r\n                            name=\"phone\"\r\n                            control={control}\r\n                            rules= {{required: true}}\r\n                      /> \r\n                      <Controller\r\n                          as={\r\n                                <ValidationTextField\r\n                                  className={\"profileInfoFields\"}\r\n                                  label=\"Email\"\r\n                                  required\r\n                                  placeholder=\"Email\"\r\n                                  multiline\r\n                                  variant=\"outlined\"\r\n                                  id=\"email\"\r\n                                  name=\"email\"\r\n                                  ref={register({\r\n                                    required: true,\r\n                                    validate: (input) => isEmail(input),\r\n                                })}\r\n                                />\r\n                              }\r\n                              name=\"email\"\r\n                              control={control}\r\n                              rules= {{required: true}}\r\n                        /> \r\n                      <Controller\r\n                          as={\r\n                                <ValidationTextField\r\n                                   className={\"profileInfoFields\"}\r\n                                   label=\"Address\"\r\n                                   required\r\n                                   placeholder=\"Address\"\r\n                                   multiline\r\n                                   variant=\"outlined\"\r\n                                   id=\"address\"\r\n                                   name=\"address\"\r\n                                 />\r\n                              }\r\n                        name=\"address\"\r\n                        control={control}\r\n                        rules= {{required: true}}\r\n                      /> \r\n\r\n\r\n                    <p className=\"error__message\">{errors?.address?.message}</p>\r\n                    <Controller\r\n                          as={\r\n                                <ValidationTextField\r\n                                   className={\"profileInfoFields\"}\r\n                                   label=\"Linked In\"\r\n                                   placeholder=\"linkedIn\"\r\n                                   multiline\r\n                                   variant=\"outlined\"\r\n                                   id=\"linkedIn\"\r\n                                   name=\"linkedIn\"\r\n                                 />\r\n                            }\r\n                       name=\"linkedIn\"\r\n                       control={control}\r\n                       rules= {{required: false}}\r\n                      /> \r\n\r\n                    <Controller\r\n                          as={\r\n                                <ValidationTextField\r\n                                   className={\"profileInfoFields\"}\r\n                                   label=\"Telegram\"\r\n                                   placeholder=\"Telegram\"\r\n                                   multiline\r\n                                   variant=\"outlined\"\r\n                                   id=\"telegram\"\r\n                                   name=\"telegram\"\r\n                                 />\r\n                            }\r\n                     name=\"telegram\"\r\n                     control={control}\r\n                     rules= {{required: false}}\r\n                     /> \r\n                    <Controller\r\n                          as={\r\n                                <ValidationTextField\r\n                                   className={\"profileInfoFields\"}\r\n                                   label=\"Facebook\"\r\n                                   placeholder=\"Facebook\"\r\n                                   multiline\r\n                                   variant=\"outlined\"\r\n                                   id=\"facebook\"\r\n                                   name=\"facebook\"\r\n                                 />\r\n                            }\r\n                      name=\"facebook\"\r\n                      control={control}\r\n                      rules= {{required: false}}\r\n                      /> \r\n\r\n                    <Controller\r\n                          as={\r\n                                <ValidationTextField\r\n                                   className={\"profileInfoFields\"}\r\n                                   label=\"Instagram\"\r\n                                   placeholder=\"Instagram\"\r\n                                   multiline\r\n                                   variant=\"outlined\"\r\n                                   id=\"instagram\"\r\n                                   name=\"instagram\"\r\n                                 />\r\n                            }\r\n                      name=\"instagram\"\r\n                      control={control}\r\n                      rules= {{required: false}}\r\n                      /> \r\n                       \r\n                    {/* <button type=\"submit\" className=\"btn btn-success\">save</button> */}\r\n                    <button type=\"submit\" className=\"btn btn-success btn-block\">save</button>\r\n                </form>            \r\n          \r\n        }\r\n        </>       \r\n           \r\n    )\r\n}\r\n\r\nexport default ContactInformation\r\n","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\experienceAction.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\profileInfoAction.js",["388"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\languagesReducer.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\languagesAction.js",["389","390","391","392","393","394"],"\r\nimport {GET_LANGUAGES_UZ, GET_LANGUAGES_RU, GET_LANGUAGES_EN, SAVE_LANGUAGES } from \"../type\";\r\nimport axios from 'axios';\r\n\r\n\r\nexport const saveLanguage = (language) => async dispatch =>{\r\n    dispatch({\r\n        type: SAVE_LANGUAGES,\r\n        payload: language\r\n    })\r\n}\r\n\r\nexport const getLanguagUZ = () => {\r\ntry {\r\n    return (dispatch) => {\r\n        axios.get('http://localhost:5000/languagesUZ')\r\n        .then(res =>{\r\n            const language_uz = res.data\r\n            dispatch({\r\n                type: GET_LANGUAGES_UZ,\r\n                payload: language_uz\r\n            })\r\n        }).catch(err =>{\r\n            const errMsg = err.message\r\n        })\r\n    }   \r\n       \r\n} catch (error) {\r\n    console.log(error.message);\r\n}  \r\n  \r\n}\r\nexport const getLanguagRU = () => {\r\ntry {\r\n    return (dispatch) => {\r\n        axios.get('http://localhost:5000/languagesRU')\r\n        .then(res =>{\r\n            const language_ru = res.data\r\n            dispatch({\r\n                type: GET_LANGUAGES_RU,\r\n                payload: language_ru\r\n            })\r\n        }).catch(err =>{\r\n            const errMsg = err.message\r\n        })\r\n    }   \r\n} catch (error) {\r\n    console.log(error.message);\r\n}  \r\n  \r\n}\r\nexport const getLanguagEN = () =>{\r\ntry {\r\n    return (dispatch) => {\r\n        axios.get('http://localhost:5000/languagesEN')\r\n        .then(res =>{\r\n            const language_en = res.data\r\n            dispatch({\r\n                type: GET_LANGUAGES_EN,\r\n                payload: language_en\r\n            })\r\n        }).catch(err =>{\r\n            const errMsg = err.message\r\n        })\r\n    }   \r\n} catch (error) {\r\n    console.log(error.message);\r\n}  \r\n  \r\n}","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\drivingLReducer.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\drivingL\\DrivingLicence.js",["395"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\drivingLAction.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\personalDevReducer.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\personalDevelopment\\PersonalDevelopment.js",["396"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\createProfile\\ProfileForm.js",["397"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\templates\\TemplateTwo.js",["398","399","400"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\educationFormReducer.js",["401"],"import { CREATE_EDUCATION, EDIT_EDUCATION, GET_EDUCATIONS } from \"../type\";\r\n\r\nconst initialState = {\r\n    educations: [],\r\n    education:{}\r\n}\r\n\r\n\r\nexport const educationReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        // case GET_EDUCATIONS:\r\n        //     return {\r\n        //         ...state, educations: action.payload\r\n        //     }\r\n        case CREATE_EDUCATION:\r\n            return { ...state, educations: state.educations.concat(action.payload) }\r\n        case EDIT_EDUCATION:\r\n            return { ...state, educations: state.educations.concat(action.payload) }\r\n        \r\n    \r\n        default: return state;\r\n            \r\n    }\r\n}","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\ProgressBar.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\experienceReducer.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\experience\\ExperienceForm2.js",["402","403"],"import React, {useState} from 'react';\r\nimport \"../../../styles/EducationForm.css\"\r\nimport { withStyles, makeStyles} from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {saveExperience} from \"../../../stores/actions/experienceAction\";\r\nimport PropTypes from 'prop-types';\r\nimport NumberFormat from 'react-number-format';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nconst ValidationTextField = withStyles({\r\n  root: {\r\n    '& input:invalid + fieldset': {\r\n      borderColor: 'ff1100',\r\n      borderWidth: 2,\r\n    },\r\n  },\r\n})(TextField);\r\n\r\nfunction ExperienceForm() {\r\n  const [checked, setChecked] = useState(false);  \r\n  const initialDate={\r\n    endYear: '',\r\n    startYear:'',\r\n  }\r\n  const [values, setValues] = useState(initialDate);\r\n  const [projectInputList, setProjectInputList] = useState([{project: \"\"}]);\r\n  const initialState = {\r\n    jobTitle:\"\",\r\n    companyName:\"\",\r\n    address:\"\",\r\n    startYear:\"\",\r\n    endYear:\"\",\r\n    aboutJob:\"\",\r\n    projects:[{project:\"\"}]\r\n  }\r\n  const [expr, setExpr] = useState(\r\n     initialState\r\n  )\r\n  const classes = useStyles();\r\n  const {control } = useForm();\r\n  const experience  = useSelector(state => state.experienceReducer.experience);\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = (e) => {\r\n      e.preventDefault();\r\n    dispatch(saveExperience(expr))\r\n    // setValues({ endYear: '',\r\n    // startYear:''})\r\n    setChecked(false)\r\n    setExpr(initialState)\r\n    setValues(initialDate)\r\n    e.target.reset()\r\n  };\r\n\r\n  const toggleChecked = (e) => {\r\n    setChecked((prev) => !prev);\r\n    console.log(e.target.value);\r\n  };\r\n\r\n  const handleRemoveProject =(e,proI)=>{\r\n      e.preventDefault()\r\n      setExpr((prev) =>{\r\n           let temp= { ...prev, projects:[...prev.projects]}\r\n    temp.projects.splice(proI,1)\r\n    return temp\r\n      })\r\n   \r\n   \r\n  }\r\n\r\n  const handleAddProject =(e)=>{\r\n      e.preventDefault()\r\n      setExpr((prev)=>{\r\n        let temp= { ...prev, projects:[...prev.projects, {project:\"\"}]}\r\n        return temp\r\n      })\r\n  } \r\n\r\n//   const handleProject = (e,proI)=>{\r\n//       const {name, value} = e.target.value\r\n//     setProjectInputList(prevState =>{\r\n//         let projects = [...prevState];\r\n//         projects[i] = {...projects[i], [name]:value}\r\n//         return {projects}\r\n//     })\r\n//   }\r\n  console.log(\"aaa>>>\", expr);\r\n    \r\n    const handleChange =(e) =>{\r\n        setValues({\r\n            ...values,\r\n            [e.target.name]: e.target.value,\r\n          });\r\n          setExpr({\r\n            ...expr,\r\n            ...{[e.target.name]: e.target.value}\r\n          }) \r\n    }  \r\n    const handleProjectChange = (e, proI)=>{\r\n    const {name, value} = e.target\r\n      setExpr((prev)=>{\r\n          let temp= { ...prev, projects:[...prev.projects]}\r\n          temp.projects[proI][name]=value\r\n          return temp\r\n      })\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {<form className=\"educationForm\" onSubmit={onSubmit}>\r\n            <Controller\r\n               render={({onChange, value}) =>\r\n                   <ValidationTextField\r\n                      className={\"profileInfoFields\"}\r\n                      label=\"Job title\"\r\n                      required\r\n                      placeholder=\"Web developer\"\r\n                      multiline\r\n                      value={expr.jobTitle}\r\n                      onChange={e => handleChange(e)}\r\n                      variant=\"outlined\"\r\n                      id=\"jobTitle\"\r\n                      name=\"jobTitle\"\r\n                    />\r\n                  }\r\n                name=\"jobTitle\"\r\n                control={control}\r\n                rules= {{required: true}}\r\n            /> \r\n            <Controller\r\n                render={({onChange, value}) =>\r\n                   <ValidationTextField\r\n                      className={\"profileInfoFields\"}\r\n                      label=\"Company name\"\r\n                      required\r\n                      placeholder=\"Amazon\"\r\n                      multiline\r\n                      value={expr.companyName}\r\n                      onChange={e => handleChange(e)}\r\n                      variant=\"outlined\"\r\n                      id=\"companyName\"\r\n                      name=\"companyName\"\r\n                    />\r\n                  }\r\n                name=\"companyName\"\r\n                control={control}\r\n                rules= {{required: true}}\r\n            /> \r\n            <Controller\r\n                render={({onChange, value}) =>\r\n                   <ValidationTextField\r\n                      className={\"profileInfoFields\"}\r\n                      label=\"Address\"\r\n                      required\r\n                      placeholder=\"123, Street, Region...\"\r\n                      multiline\r\n                      value={expr.address}\r\n                      variant=\"outlined\"\r\n                      onChange={e => handleChange(e)}\r\n                      id=\"address\"\r\n                      name=\"address\"\r\n                    />\r\n                  }\r\n                name=\"address\"\r\n                control={control}\r\n                rules= {{required: true}}\r\n            /> \r\n            <div className=\"study__years\">\r\n            <Controller\r\n                render={({onChange, value}) =>\r\n                   <ValidationTextField\r\n                      className=\"profileInfoFields\"\r\n                      label=\"Start\"\r\n                      required\r\n                      value={values.startYear}\r\n                      placeholder=\"2016\"\r\n                      multiline\r\n                      onChange={e=>handleChange(e)}\r\n                      variant=\"outlined\"\r\n                      id=\"startYear\"\r\n                      name=\"startYear\"\r\n                      InputProps={{\r\n                        inputComponent: NumberFormatCustom,\r\n                      }}\r\n                    />\r\n                  }\r\n                name=\"startYear\"\r\n                control={control}\r\n                rules= {{required: true}}\r\n            />\r\n            {checked ? \" \" : ( \r\n            <Controller\r\n                render={({onChange, value}) =>\r\n                <ValidationTextField\r\n                    label=\"End\"\r\n                    className=\"profileInfoFields\"\r\n                    value={values.endYear}\r\n                    onChange={e=>handleChange(e)}\r\n                    placeholder=\"2021\"\r\n                    required\r\n                    name=\"endYear\"\r\n                    variant=\"outlined\"\r\n                    multiline\r\n                    id=\"endYear\"\r\n                    InputProps={{\r\n                      inputComponent: NumberFormatCustom,\r\n                    }}\r\n              />\r\n                  }\r\n                name=\"endYear\"\r\n                control={control}\r\n                rules= {{required: true}}\r\n            /> \r\n            )} \r\n            <Controller\r\n                render={({onChange, value}) =>\r\n                   <FormGroup>\r\n                   <FormControlLabel\r\n                       control={<Switch checked={checked} color=\"primary\" \r\n                       name=\"To present\" \r\n                       onChange={toggleChecked} \r\n                       value={!checked}\r\n                       />}\r\n                       label={checked? \"To present\" : \"\"}\r\n                   />\r\n                   </FormGroup>\r\n                   }\r\n                   name=\"toPresent\"\r\n                   control={control}\r\n                   // rules= {{required:false}} \r\n            />\r\n            </div>\r\n            <div className=\"special_box\">\r\n                <Controller\r\n                    render={({onChange, value}) =>\r\n                       <TextField\r\n                         id=\"aboutMe__text\"\r\n                         label=\"About your job\"\r\n                         multiline\r\n                         className=\"aboutMe__text\"\r\n                         rows={6}\r\n                         name=\"aboutJob\"\r\n                         onChange={e => handleChange(e)}\r\n                         value={expr.aboutJob}\r\n                         placeholder=\"Brief description and responsibility you had in this position.\" \r\n                         defaultValue=\"\"\r\n                         variant=\"outlined\"\r\n                       />\r\n                     }\r\n                   name=\"aboutJob\"\r\n                   control={control}\r\n                   rules= {{required: true}}\r\n                 /> \r\n            </div>\r\n            {expr.projects&& expr.projects.map((pro, proI) =>{\r\n                console.log(\"projectInputList\", projectInputList);\r\n                return(\r\n                    <div className=\"special_box2\">\r\n                        <Controller\r\n                            render={({onChange, value}) =>\r\n                               <TextField\r\n                                 id=\"project__text\"\r\n                                 label={\"Project\"}\r\n                                 multiline\r\n                                 className=\"project__text\"\r\n                                 rows={3}\r\n                                 name={\"project\"}\r\n                                 onChange={(e) => handleProjectChange(e,proI)}\r\n                                 placeholder=\"Project you worked\" \r\n                                //  defaultValue={pro.project}\r\n                                 variant=\"outlined\"\r\n                               />\r\n                             }\r\n                           name={\"project\"}\r\n                           control={control}\r\n                           rules= {{required: true}}\r\n                         /> \r\n                         <div className=\"button__box\">\r\n                             {expr.projects.length !==1 && \r\n                             <Fab size=\"small\" color=\"secondary\" aria-label=\"add\" onClick={(e)=> handleRemoveProject(e, proI) } className={classes.margin}>\r\n                               <DeleteOutlineIcon/>\r\n                             </Fab>\r\n                             }\r\n                             {expr.projects.length - 1 ===proI && \r\n                             <Fab size=\"small\" color=\"primary\" aria-label=\"add\" onClick={e=>handleAddProject(e)} className={classes.margin}>\r\n                               <AddIcon/>\r\n                             </Fab>\r\n                             }\r\n                         </div>\r\n                    </div>\r\n                )\r\n            })}\r\n            \r\n            <button type=\"submit\" className=\"btn btn-success btn-block\">save</button>\r\n        </form>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExperienceForm\r\n\r\n\r\n\r\nfunction NumberFormatCustom(props) {\r\n  const { inputRef, onChange, ...other } = props;\r\n\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      minLength=\"4\"\r\n      maxLength=\"4\"\r\n      isNumericString\r\n    />\r\n  );\r\n}\r\n\r\nNumberFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\index.js",[],["404","405"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\store.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\pages\\Candidates.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\timelines\\index.js",["406"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\CandidateSearchMain.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\CreateResumeMain.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\languageSelect.js",["407"],"import React, {useState, useEffect} from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport i18next from \"i18next\";\r\nimport \"../styles/languageSelect.css\"\r\n\r\nimport ArrowDropDown from \"@material-ui/icons/ArrowDropDown\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\n\r\nconst languageMap = {\r\n  en: { label: \"En\", dir: \"ltr\", active: true },\r\n  ru: { label: \"Ру\", dir: \"ltr\", active: false },\r\n  uz: { label: \"O'z\", dir: \"ltr\", active: false }\r\n};\r\n\r\nconst LanguageSelect = () => {\r\n  const selected = localStorage.getItem(\"i18nextLng\") || \"uz\";\r\n  const { t } = useTranslation();\r\n\r\n  const [menuAnchor, setMenuAnchor] = useState(null);\r\n  useEffect(() => {\r\n    document.body.dir = languageMap[selected].dir;\r\n  }, [menuAnchor, selected]);\r\n\r\n  return (\r\n    <div className=\"language__select\">\r\n      <Button onClick={({ currentTarget }) => setMenuAnchor(currentTarget)}>\r\n        {languageMap[selected].label}\r\n        <ArrowDropDown fontSize=\"small\" />\r\n      </Button>\r\n      <Popover\r\n        open={!!menuAnchor}\r\n        anchorEl={menuAnchor}\r\n        onClose={() => setMenuAnchor(null)}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"right\"\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"right\"\r\n        }}\r\n      >\r\n        <div>\r\n          <List>\r\n            {Object.keys(languageMap)?.map(item => (\r\n              <ListItem\r\n                button\r\n                key={item}\r\n                onClick={() => {\r\n                  i18next.changeLanguage(item);\r\n                  setMenuAnchor(null);\r\n                }}\r\n              >\r\n                {languageMap[item].label}\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </div>\r\n      </Popover>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LanguageSelect;\r\n","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\contactReducer.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\postjobReducer.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\CandidateSearchRight.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\PostView.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\educationFormAction.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\pages\\JobSearch.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\PageNotFound.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\rootReducer.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\profileReducer.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\keySkillsReducer.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\BannerCandidates.js",["408","409","410"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\postJobFieldsAction.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\keySkillsAction.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\ColorPicker.js",["411"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\colorReducer.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\colorAction.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\context\\CandidatesContext.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\Resume.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\technicalSkillsAction.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\numbersReducer.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\numbersAction.js",["412","413"],"import { GET_NUMBERS_1_100 } from \"../type\"\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\nexport const getNumbers = () => {\r\n    try {\r\n        return (dispatch) => {\r\n            axios.get('http://localhost:5000/numbersf1t100')\r\n            .then(res =>{\r\n                const numbers1t100 = res.data\r\n                dispatch({\r\n                    type: GET_NUMBERS_1_100,\r\n                    payload: numbers1t100\r\n                })\r\n            }).catch(err =>{\r\n                const errMsg = err.message\r\n            })\r\n        }   \r\n           \r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }  \r\n      \r\n    }","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\technicalSkillsReducer.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\tab\\TabForTemplates.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\templates\\TemplateTree.js",["414","415","416"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\templates\\TemplateFour.js",["417","418","419","420","421","422","423","424","425","426"],{"ruleId":"427","severity":1,"message":"428","line":34,"column":11,"nodeType":"429","messageId":"430","endLine":34,"endColumn":21},{"ruleId":"431","replacedBy":"432"},{"ruleId":"433","replacedBy":"434"},{"ruleId":"427","severity":1,"message":"435","line":13,"column":8,"nodeType":"429","messageId":"430","endLine":13,"endColumn":19},{"ruleId":"427","severity":1,"message":"436","line":14,"column":8,"nodeType":"429","messageId":"430","endLine":14,"endColumn":23},{"ruleId":"427","severity":1,"message":"437","line":40,"column":13,"nodeType":"429","messageId":"430","endLine":40,"endColumn":14},{"ruleId":"427","severity":1,"message":"438","line":45,"column":11,"nodeType":"429","messageId":"430","endLine":45,"endColumn":18},{"ruleId":"427","severity":1,"message":"439","line":46,"column":54,"nodeType":"429","messageId":"430","endLine":46,"endColumn":63},{"ruleId":"427","severity":1,"message":"440","line":49,"column":12,"nodeType":"429","messageId":"430","endLine":49,"endColumn":22},{"ruleId":"427","severity":1,"message":"441","line":63,"column":11,"nodeType":"429","messageId":"430","endLine":63,"endColumn":20},{"ruleId":"431","replacedBy":"442"},{"ruleId":"433","replacedBy":"443"},{"ruleId":"427","severity":1,"message":"444","line":25,"column":9,"nodeType":"429","messageId":"430","endLine":25,"endColumn":28},{"ruleId":"445","severity":1,"message":"446","line":49,"column":6,"nodeType":"447","endLine":49,"endColumn":8,"suggestions":"448"},{"ruleId":"427","severity":1,"message":"449","line":66,"column":11,"nodeType":"429","messageId":"430","endLine":66,"endColumn":32},{"ruleId":"427","severity":1,"message":"450","line":72,"column":11,"nodeType":"429","messageId":"430","endLine":72,"endColumn":29},{"ruleId":"427","severity":1,"message":"451","line":76,"column":13,"nodeType":"429","messageId":"430","endLine":76,"endColumn":25},{"ruleId":"427","severity":1,"message":"452","line":77,"column":14,"nodeType":"429","messageId":"430","endLine":77,"endColumn":18},{"ruleId":"427","severity":1,"message":"453","line":77,"column":19,"nodeType":"429","messageId":"430","endLine":77,"endColumn":24},{"ruleId":"427","severity":1,"message":"454","line":42,"column":18,"nodeType":"429","messageId":"430","endLine":42,"endColumn":23},{"ruleId":"427","severity":1,"message":"452","line":88,"column":14,"nodeType":"429","messageId":"430","endLine":88,"endColumn":18},{"ruleId":"427","severity":1,"message":"455","line":83,"column":7,"nodeType":"429","messageId":"430","endLine":83,"endColumn":14},{"ruleId":"427","severity":1,"message":"456","line":40,"column":9,"nodeType":"429","messageId":"430","endLine":40,"endColumn":16},{"ruleId":"431","replacedBy":"457"},{"ruleId":"433","replacedBy":"458"},{"ruleId":"427","severity":1,"message":"459","line":46,"column":9,"nodeType":"429","messageId":"430","endLine":46,"endColumn":19},{"ruleId":"427","severity":1,"message":"460","line":71,"column":9,"nodeType":"429","messageId":"430","endLine":71,"endColumn":28},{"ruleId":"427","severity":1,"message":"452","line":81,"column":13,"nodeType":"429","messageId":"430","endLine":81,"endColumn":17},{"ruleId":"427","severity":1,"message":"453","line":81,"column":19,"nodeType":"429","messageId":"430","endLine":81,"endColumn":24},{"ruleId":"427","severity":1,"message":"461","line":35,"column":10,"nodeType":"429","messageId":"430","endLine":35,"endColumn":16},{"ruleId":"431","replacedBy":"462"},{"ruleId":"433","replacedBy":"463"},{"ruleId":"427","severity":1,"message":"464","line":15,"column":11,"nodeType":"429","messageId":"430","endLine":15,"endColumn":18},{"ruleId":"427","severity":1,"message":"465","line":1,"column":16,"nodeType":"429","messageId":"430","endLine":1,"endColumn":24},{"ruleId":"427","severity":1,"message":"466","line":1,"column":38,"nodeType":"429","messageId":"430","endLine":1,"endColumn":47},{"ruleId":"427","severity":1,"message":"467","line":8,"column":8,"nodeType":"429","messageId":"430","endLine":8,"endColumn":13},{"ruleId":"427","severity":1,"message":"468","line":12,"column":16,"nodeType":"429","messageId":"430","endLine":12,"endColumn":20},{"ruleId":"427","severity":1,"message":"469","line":10,"column":10,"nodeType":"429","messageId":"430","endLine":10,"endColumn":15},{"ruleId":"427","severity":1,"message":"470","line":25,"column":17,"nodeType":"429","messageId":"430","endLine":25,"endColumn":25},{"ruleId":"445","severity":1,"message":"471","line":58,"column":6,"nodeType":"447","endLine":58,"endColumn":15,"suggestions":"472"},{"ruleId":"427","severity":1,"message":"473","line":8,"column":10,"nodeType":"429","messageId":"430","endLine":8,"endColumn":20},{"ruleId":"445","severity":1,"message":"446","line":44,"column":4,"nodeType":"447","endLine":44,"endColumn":6,"suggestions":"474"},{"ruleId":"445","severity":1,"message":"446","line":47,"column":4,"nodeType":"447","endLine":47,"endColumn":6,"suggestions":"475"},{"ruleId":"445","severity":1,"message":"446","line":50,"column":4,"nodeType":"447","endLine":50,"endColumn":6,"suggestions":"476"},{"ruleId":"427","severity":1,"message":"452","line":57,"column":12,"nodeType":"429","messageId":"430","endLine":57,"endColumn":16},{"ruleId":"477","severity":1,"message":"478","line":124,"column":87,"nodeType":"479","messageId":"480","endLine":124,"endColumn":88},{"ruleId":"427","severity":1,"message":"481","line":16,"column":31,"nodeType":"429","messageId":"430","endLine":16,"endColumn":42},{"ruleId":"427","severity":1,"message":"482","line":3,"column":8,"nodeType":"429","messageId":"430","endLine":3,"endColumn":14},{"ruleId":"431","replacedBy":"483"},{"ruleId":"433","replacedBy":"484"},{"ruleId":"427","severity":1,"message":"485","line":4,"column":8,"nodeType":"429","messageId":"430","endLine":4,"endColumn":16},{"ruleId":"427","severity":1,"message":"486","line":5,"column":8,"nodeType":"429","messageId":"430","endLine":5,"endColumn":23},{"ruleId":"427","severity":1,"message":"487","line":6,"column":8,"nodeType":"429","messageId":"430","endLine":6,"endColumn":16},{"ruleId":"427","severity":1,"message":"488","line":7,"column":8,"nodeType":"429","messageId":"430","endLine":7,"endColumn":20},{"ruleId":"427","severity":1,"message":"489","line":8,"column":8,"nodeType":"429","messageId":"430","endLine":8,"endColumn":20},{"ruleId":"427","severity":1,"message":"490","line":9,"column":8,"nodeType":"429","messageId":"430","endLine":9,"endColumn":20},{"ruleId":"427","severity":1,"message":"491","line":10,"column":8,"nodeType":"429","messageId":"430","endLine":10,"endColumn":21},{"ruleId":"427","severity":1,"message":"465","line":1,"column":16,"nodeType":"429","messageId":"430","endLine":1,"endColumn":24},{"ruleId":"427","severity":1,"message":"492","line":5,"column":22,"nodeType":"429","messageId":"430","endLine":5,"endColumn":32},{"ruleId":"427","severity":1,"message":"493","line":13,"column":8,"nodeType":"429","messageId":"430","endLine":13,"endColumn":14},{"ruleId":"427","severity":1,"message":"439","line":23,"column":54,"nodeType":"429","messageId":"430","endLine":23,"endColumn":63},{"ruleId":"427","severity":1,"message":"494","line":42,"column":11,"nodeType":"429","messageId":"430","endLine":42,"endColumn":18},{"ruleId":"427","severity":1,"message":"495","line":1,"column":52,"nodeType":"429","messageId":"430","endLine":1,"endColumn":62},{"ruleId":"427","severity":1,"message":"496","line":24,"column":19,"nodeType":"429","messageId":"430","endLine":24,"endColumn":25},{"ruleId":"497","severity":1,"message":"498","line":28,"column":17,"nodeType":"499","messageId":"500","endLine":30,"endColumn":2},{"ruleId":"427","severity":1,"message":"496","line":44,"column":19,"nodeType":"429","messageId":"430","endLine":44,"endColumn":25},{"ruleId":"497","severity":1,"message":"498","line":47,"column":17,"nodeType":"499","messageId":"500","endLine":49,"endColumn":2},{"ruleId":"427","severity":1,"message":"496","line":63,"column":19,"nodeType":"429","messageId":"430","endLine":63,"endColumn":25},{"ruleId":"497","severity":1,"message":"498","line":66,"column":17,"nodeType":"499","messageId":"500","endLine":68,"endColumn":2},{"ruleId":"427","severity":1,"message":"501","line":2,"column":26,"nodeType":"429","messageId":"430","endLine":2,"endColumn":36},{"ruleId":"427","severity":1,"message":"461","line":32,"column":10,"nodeType":"429","messageId":"430","endLine":32,"endColumn":16},{"ruleId":"427","severity":1,"message":"502","line":32,"column":10,"nodeType":"429","messageId":"430","endLine":32,"endColumn":22},{"ruleId":"427","severity":1,"message":"503","line":15,"column":8,"nodeType":"429","messageId":"430","endLine":15,"endColumn":22},{"ruleId":"427","severity":1,"message":"504","line":15,"column":24,"nodeType":"429","messageId":"430","endLine":15,"endColumn":41},{"ruleId":"427","severity":1,"message":"505","line":24,"column":7,"nodeType":"429","messageId":"430","endLine":24,"endColumn":15},{"ruleId":"427","severity":1,"message":"506","line":1,"column":44,"nodeType":"429","messageId":"430","endLine":1,"endColumn":58},{"ruleId":"427","severity":1,"message":"507","line":44,"column":28,"nodeType":"429","messageId":"430","endLine":44,"endColumn":47},{"ruleId":"427","severity":1,"message":"459","line":59,"column":9,"nodeType":"429","messageId":"430","endLine":59,"endColumn":19},{"ruleId":"431","replacedBy":"508"},{"ruleId":"433","replacedBy":"509"},{"ruleId":"510","severity":1,"message":"511","line":36,"column":3,"nodeType":"512","messageId":"513","endLine":36,"endColumn":32,"fix":"514"},{"ruleId":"427","severity":1,"message":"437","line":20,"column":11,"nodeType":"429","messageId":"430","endLine":20,"endColumn":12},{"ruleId":"427","severity":1,"message":"465","line":1,"column":16,"nodeType":"429","messageId":"430","endLine":1,"endColumn":24},{"ruleId":"427","severity":1,"message":"466","line":1,"column":38,"nodeType":"429","messageId":"430","endLine":1,"endColumn":47},{"ruleId":"427","severity":1,"message":"467","line":8,"column":8,"nodeType":"429","messageId":"430","endLine":8,"endColumn":13},{"ruleId":"427","severity":1,"message":"465","line":1,"column":16,"nodeType":"429","messageId":"430","endLine":1,"endColumn":24},{"ruleId":"427","severity":1,"message":"496","line":17,"column":23,"nodeType":"429","messageId":"430","endLine":17,"endColumn":29},{"ruleId":"497","severity":1,"message":"498","line":21,"column":21,"nodeType":"499","messageId":"500","endLine":23,"endColumn":6},{"ruleId":"427","severity":1,"message":"503","line":7,"column":12,"nodeType":"429","messageId":"430","endLine":7,"endColumn":26},{"ruleId":"427","severity":1,"message":"504","line":7,"column":28,"nodeType":"429","messageId":"430","endLine":7,"endColumn":45},{"ruleId":"427","severity":1,"message":"505","line":16,"column":11,"nodeType":"429","messageId":"430","endLine":16,"endColumn":19},{"ruleId":"427","severity":1,"message":"485","line":3,"column":8,"nodeType":"429","messageId":"430","endLine":3,"endColumn":16},{"ruleId":"427","severity":1,"message":"486","line":4,"column":8,"nodeType":"429","messageId":"430","endLine":4,"endColumn":23},{"ruleId":"427","severity":1,"message":"487","line":5,"column":8,"nodeType":"429","messageId":"430","endLine":5,"endColumn":16},{"ruleId":"427","severity":1,"message":"488","line":6,"column":8,"nodeType":"429","messageId":"430","endLine":6,"endColumn":20},{"ruleId":"427","severity":1,"message":"489","line":7,"column":8,"nodeType":"429","messageId":"430","endLine":7,"endColumn":20},{"ruleId":"427","severity":1,"message":"490","line":8,"column":8,"nodeType":"429","messageId":"430","endLine":8,"endColumn":20},{"ruleId":"427","severity":1,"message":"491","line":9,"column":8,"nodeType":"429","messageId":"430","endLine":9,"endColumn":21},{"ruleId":"427","severity":1,"message":"503","line":15,"column":8,"nodeType":"429","messageId":"430","endLine":15,"endColumn":22},{"ruleId":"427","severity":1,"message":"504","line":15,"column":24,"nodeType":"429","messageId":"430","endLine":15,"endColumn":41},{"ruleId":"427","severity":1,"message":"505","line":24,"column":7,"nodeType":"429","messageId":"430","endLine":24,"endColumn":15},"no-unused-vars","'techskills' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["515"],"no-negated-in-lhs",["516"],"'TechSkills2' is defined but never used.","'TechnicalSkills' is defined but never used.","'t' is assigned a value but never used.","'postjob' is assigned a value but never used.","'formState' is assigned a value but never used.","'postedData' is assigned a value but never used.","'techSkill' is assigned a value but never used.",["515"],["516"],"'ValidationTextField' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["517"],"'handleRemoveTechSkill' is assigned a value but never used.","'handleAddTechSkill' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'name' is assigned a value but never used.","'value' is assigned a value but never used.","'reset' is assigned a value but never used.","'jobList' is assigned a value but never used.","'classes' is assigned a value but never used.",["515"],["516"],"'experience' is assigned a value but never used.","'handleProjectChange' is assigned a value but never used.","'values' is assigned a value but never used.",["515"],["516"],"'history' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","'i18n' is assigned a value but never used.","'sleep' is defined but never used.","'setCount' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'count'. Either include it or remove the dependency array.",["518"],"'withStyles' is defined but never used.",["519"],["520"],["521"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'JobsContext' is defined but never used.","'Resume' is defined but never used.",["515"],["516"],"'CallIcon' is defined but never used.","'MailOutlineIcon' is defined but never used.","'RoomIcon' is defined but never used.","'LinkedInIcon' is defined but never used.","'TelegramIcon' is defined but never used.","'FacebookIcon' is defined but never used.","'InstagramIcon' is defined but never used.","'makeStyles' is defined but never used.","'Button' is defined but never used.","'contact' is assigned a value but never used.","'EDIT_CLICK' is defined but never used.","'errMsg' is assigned a value but never used.","no-unreachable","Unreachable code.","BlockStatement","unreachableCode","'useContext' is defined but never used.","'handleSubmit' is assigned a value but never used.","'progressColors' is assigned a value but never used.","'setProgressColors' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'GET_EDUCATIONS' is defined but never used.","'setProjectInputList' is assigned a value but never used.",["515"],["516"],"no-whitespace-before-property","Unexpected whitespace before property requestAnimationFrame.","MemberExpression","unexpectedWhitespace",{"range":"522","text":"523"},"no-global-assign","no-unsafe-negation",{"desc":"524","fix":"525"},{"desc":"526","fix":"527"},{"desc":"524","fix":"528"},{"desc":"524","fix":"529"},{"desc":"524","fix":"530"},[1140,1142],".","Update the dependencies array to be: [dispatch]",{"range":"531","text":"532"},"Update the dependencies array to be: [t, i18n, count]",{"range":"533","text":"534"},{"range":"535","text":"532"},{"range":"536","text":"532"},{"range":"537","text":"532"},[1854,1856],"[dispatch]",[1758,1767],"[t, i18n, count]",[1730,1732],[1787,1789],[1844,1846]]