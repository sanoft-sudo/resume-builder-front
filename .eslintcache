[{"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\resumeAcardion\\CreateResumeAcardion.js":"1","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\imageUploader\\ImageUploader.js":"2","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\PostJobFields.js":"3","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\App.js":"4","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\keySkills\\KeySkillsSelect.js":"5","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\createContacts\\ContactInformation.js":"6","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\autocomleteInputs\\AutocompleteCountry.js":"7","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\PostView1.js":"8","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\tab\\TabForResumeAndObjective.js":"9","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\type.js":"10","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\obektivkaReducer.js":"11","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\rootReducer.js":"12","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\templates\\ObektivkaTable.js":"13","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\templates\\ObektivkaTemplate.js":"14","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\index.js":"15","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\store.js":"16","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\pages\\Home.js":"17","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\pages\\JobPost.js":"18","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\pages\\ResumeCreator.js":"19","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\PageNotFound.js":"20","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\context\\CountriesContext.js":"21","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\pages\\NavBar.js":"22","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\context\\KeySkillsContext.js":"23","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\timelines\\index.js":"24","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\JobSearchBanner.js":"25","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\CreateResumeMain.js":"26","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\contactReducer.js":"27","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\profileReducer.js":"28","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\drivingLReducer.js":"29","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\numbersReducer.js":"30","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\experienceReducer.js":"31","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\colorReducer.js":"32","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\CandidateSearchRight.js":"33","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\ColorPicker.js":"34","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\templates\\TemplateFour.js":"35","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\achivements\\AchievementForm.js":"36","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\education\\EducationForm.js":"37","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\experience\\ExperienceForm2.js":"38","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\technicalSkillsAction.js":"39","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\educationFormAction.js":"40","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\achievementsAction.js":"41","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\obektivkaAction.js":"42","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\postJobFieldsAction.js":"43","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\loginAndregister\\TabForRegister.js":"44","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\loginAndregister\\SignInWithGoogle.js":"45","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\datePicker\\MyDatePicker.js":"46","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\templates\\TemplateOne.js":"47","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\datePicker\\SingleYearPicker.js":"48","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\personalDevelopment\\PersonalDevelopment.js":"49","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\createProfile\\ProfileForm.js":"50","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\datePicker\\BirthdayPicker.js":"51","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\pages\\Candidates.js":"52","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\pages\\Contacts.js":"53","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\pages\\Login.js":"54","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\context\\EmployerContext.js":"55","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\languageSelect.js":"56","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\personalDevReducer.js":"57","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\keySkillsReducer.js":"58","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\JobSearchRight.js":"59","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\tab\\TabForTemplates.js":"60","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\colorAction.js":"61","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\languageFrom\\LanguageForm.js":"62","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\technicalSkills\\NewM.js":"63","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\templates\\TemplateTree.js":"64","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\keySkillsAction.js":"65","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\profileInfoAction.js":"66","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\experienceAction.js":"67","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\drivingLAction.js":"68","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\templates\\TemplateTwo.js":"69","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\obektivka\\obektivkaProfile\\ObektivkaProfile.js":"70","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\obektivka\\obektivaAccardion\\ObektivaAccardion.js":"71","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\obektivka\\obektivkaBirthDateAndPlace\\ObektivkaBirthDateAndPlace.js":"72","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\datePicker\\DateYearMonthPicker.js":"73","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\obektivkaProfileReducer.js":"74","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\obektivkaBirthReducer.js":"75","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\obektivkaAcademicReducer.js":"76","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\obektivkaStateAwardReducer.js":"77","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\obektivkaMPReducer.js":"78","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\obektivkaExperienceReducer.js":"79","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\obektivkaLanguageReducer.js":"80","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\obektivka\\obektivkaLanguage\\ObektivkaLanguages.js":"81","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\obektivkaLanguageAction.js":"82","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\obektivka\\obektivkaMP\\ObektivkaMP.js":"83","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\obektivka\\obektivkaExperience\\ObektivkaExperience.js":"84","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\obektivkaBirthAction.js":"85","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\obektivka\\obektivkaAcademic\\ObektivkaAcademic.js":"86","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\obektivkaStateAwardAction.js":"87","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\obektivka\\obektivkaStateAwards\\ObektivkaStateAwards.js":"88","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\pages\\JobSearch.js":"89","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\JobSearchMain.js":"90","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\postjobReducer.js":"91","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\technicalSkillsReducer.js":"92","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\languagesReducer.js":"93","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\BannerCandidates.js":"94","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\PostViewCard.js":"95","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\loginAndregister\\SignUp.js":"96","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\technicalSkills\\TechSkills2.js":"97","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\languagesAction.js":"98","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\contactInfoAction.js":"99","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\JobSearchList.js":"100","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\obektivkaRelativesReducer.js":"101","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\obektivkaRelativesAction.js":"102","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\obektivka\\obektivkaRelatives\\ObektivkaRelatives.js":"103","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\searchFormAction.js":"104","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\obektivka\\obektivkaImageUploader\\ObektivkaImageUploader.js":"105"},{"size":3703,"mtime":1609868041985,"results":"106","hashOfConfig":"107"},{"size":3689,"mtime":1611160741783,"results":"108","hashOfConfig":"107"},{"size":28784,"mtime":1611083675435,"results":"109","hashOfConfig":"107"},{"size":3274,"mtime":1610299284718,"results":"110","hashOfConfig":"107"},{"size":3420,"mtime":1610299295482,"results":"111","hashOfConfig":"107"},{"size":7987,"mtime":1610312270550,"results":"112","hashOfConfig":"107"},{"size":2466,"mtime":1610433254735,"results":"113","hashOfConfig":"107"},{"size":3799,"mtime":1611155402438,"results":"114","hashOfConfig":"107"},{"size":2509,"mtime":1610977029578,"results":"115","hashOfConfig":"107"},{"size":5455,"mtime":1611150166677,"results":"116","hashOfConfig":"107"},{"size":1787,"mtime":1610979884875,"results":"117","hashOfConfig":"107"},{"size":1188,"mtime":1610579506979,"results":"118","hashOfConfig":"107"},{"size":3652,"mtime":1611096472030,"results":"119","hashOfConfig":"107"},{"size":7667,"mtime":1611164870665,"results":"120","hashOfConfig":"107"},{"size":624,"mtime":1607957875915,"results":"121","hashOfConfig":"107"},{"size":401,"mtime":1607957925720,"results":"122","hashOfConfig":"107"},{"size":265,"mtime":1607570600276,"results":"123","hashOfConfig":"107"},{"size":283,"mtime":1607519976555,"results":"124","hashOfConfig":"107"},{"size":276,"mtime":1609027524797,"results":"125","hashOfConfig":"107"},{"size":506,"mtime":1607305531654,"results":"126","hashOfConfig":"107"},{"size":967,"mtime":1608294171820,"results":"127","hashOfConfig":"107"},{"size":3107,"mtime":1607723413984,"results":"128","hashOfConfig":"107"},{"size":806,"mtime":1608282463429,"results":"129","hashOfConfig":"107"},{"size":1371,"mtime":1607369521943,"results":"130","hashOfConfig":"107"},{"size":16829,"mtime":1611155557103,"results":"131","hashOfConfig":"107"},{"size":957,"mtime":1610570065060,"results":"132","hashOfConfig":"107"},{"size":440,"mtime":1608007951887,"results":"133","hashOfConfig":"107"},{"size":901,"mtime":1608783678202,"results":"134","hashOfConfig":"107"},{"size":487,"mtime":1608538641150,"results":"135","hashOfConfig":"107"},{"size":341,"mtime":1608693154463,"results":"136","hashOfConfig":"107"},{"size":535,"mtime":1608573183375,"results":"137","hashOfConfig":"107"},{"size":1231,"mtime":1608987001844,"results":"138","hashOfConfig":"107"},{"size":379,"mtime":1607739982059,"results":"139","hashOfConfig":"107"},{"size":1039,"mtime":1608901275408,"results":"140","hashOfConfig":"107"},{"size":22391,"mtime":1611202730252,"results":"141","hashOfConfig":"107"},{"size":6131,"mtime":1610880123945,"results":"142","hashOfConfig":"107"},{"size":6261,"mtime":1610878183179,"results":"143","hashOfConfig":"107"},{"size":10380,"mtime":1610878477759,"results":"144","hashOfConfig":"107"},{"size":709,"mtime":1608747338824,"results":"145","hashOfConfig":"107"},{"size":407,"mtime":1608067872380,"results":"146","hashOfConfig":"107"},{"size":384,"mtime":1608427100289,"results":"147","hashOfConfig":"107"},{"size":356,"mtime":1610579896667,"results":"148","hashOfConfig":"107"},{"size":386,"mtime":1607999431285,"results":"149","hashOfConfig":"107"},{"size":2292,"mtime":1609596030179,"results":"150","hashOfConfig":"107"},{"size":1041,"mtime":1609595069409,"results":"151","hashOfConfig":"107"},{"size":4631,"mtime":1611072410203,"results":"152","hashOfConfig":"107"},{"size":33464,"mtime":1611159579952,"results":"153","hashOfConfig":"107"},{"size":1689,"mtime":1610898323494,"results":"154","hashOfConfig":"107"},{"size":6131,"mtime":1610880929082,"results":"155","hashOfConfig":"107"},{"size":8494,"mtime":1611156305156,"results":"156","hashOfConfig":"107"},{"size":1874,"mtime":1610974232340,"results":"157","hashOfConfig":"107"},{"size":413,"mtime":1607739925891,"results":"158","hashOfConfig":"107"},{"size":201,"mtime":1611205525280,"results":"159","hashOfConfig":"107"},{"size":271,"mtime":1609187299815,"results":"160","hashOfConfig":"107"},{"size":817,"mtime":1607740217300,"results":"161","hashOfConfig":"107"},{"size":1987,"mtime":1607276215033,"results":"162","hashOfConfig":"107"},{"size":529,"mtime":1608542859164,"results":"163","hashOfConfig":"107"},{"size":504,"mtime":1608284252580,"results":"164","hashOfConfig":"107"},{"size":357,"mtime":1607739987594,"results":"165","hashOfConfig":"107"},{"size":3320,"mtime":1611204280090,"results":"166","hashOfConfig":"107"},{"size":324,"mtime":1608654248238,"results":"167","hashOfConfig":"107"},{"size":6776,"mtime":1609695360876,"results":"168","hashOfConfig":"107"},{"size":7655,"mtime":1608734604556,"results":"169","hashOfConfig":"107"},{"size":21634,"mtime":1610965437385,"results":"170","hashOfConfig":"107"},{"size":352,"mtime":1608193898051,"results":"171","hashOfConfig":"107"},{"size":891,"mtime":1608748350360,"results":"172","hashOfConfig":"107"},{"size":368,"mtime":1608095888737,"results":"173","hashOfConfig":"107"},{"size":354,"mtime":1608539102283,"results":"174","hashOfConfig":"107"},{"size":22572,"mtime":1610965013271,"results":"175","hashOfConfig":"107"},{"size":7619,"mtime":1610983987893,"results":"176","hashOfConfig":"107"},{"size":3289,"mtime":1611097187703,"results":"177","hashOfConfig":"107"},{"size":5920,"mtime":1611047812480,"results":"178","hashOfConfig":"107"},{"size":1890,"mtime":1610981523059,"results":"179","hashOfConfig":"107"},{"size":633,"mtime":1610983711929,"results":"180","hashOfConfig":"107"},{"size":621,"mtime":1610984857342,"results":"181","hashOfConfig":"107"},{"size":735,"mtime":1611027726958,"results":"182","hashOfConfig":"107"},{"size":526,"mtime":1611053131918,"results":"183","hashOfConfig":"107"},{"size":524,"mtime":1611066643245,"results":"184","hashOfConfig":"107"},{"size":536,"mtime":1611070679953,"results":"185","hashOfConfig":"107"},{"size":793,"mtime":1611036504260,"results":"186","hashOfConfig":"107"},{"size":4580,"mtime":1611048921392,"results":"187","hashOfConfig":"107"},{"size":1919,"mtime":1611048650221,"results":"188","hashOfConfig":"107"},{"size":5879,"mtime":1611072499340,"results":"189","hashOfConfig":"107"},{"size":5189,"mtime":1611162717507,"results":"190","hashOfConfig":"107"},{"size":393,"mtime":1611047916928,"results":"191","hashOfConfig":"107"},{"size":8569,"mtime":1611051139156,"results":"192","hashOfConfig":"107"},{"size":394,"mtime":1611051965898,"results":"193","hashOfConfig":"107"},{"size":3342,"mtime":1611065283638,"results":"194","hashOfConfig":"107"},{"size":366,"mtime":1607540770601,"results":"195","hashOfConfig":"107"},{"size":582,"mtime":1607739577590,"results":"196","hashOfConfig":"107"},{"size":415,"mtime":1607999603411,"results":"197","hashOfConfig":"107"},{"size":1079,"mtime":1608731870435,"results":"198","hashOfConfig":"107"},{"size":777,"mtime":1608525249648,"results":"199","hashOfConfig":"107"},{"size":3103,"mtime":1607742682374,"results":"200","hashOfConfig":"107"},{"size":3096,"mtime":1607724073740,"results":"201","hashOfConfig":"107"},{"size":7117,"mtime":1609611646656,"results":"202","hashOfConfig":"107"},{"size":8408,"mtime":1608698265084,"results":"203","hashOfConfig":"107"},{"size":1839,"mtime":1609695791773,"results":"204","hashOfConfig":"107"},{"size":364,"mtime":1608068229032,"results":"205","hashOfConfig":"107"},{"size":3114,"mtime":1607735853627,"results":"206","hashOfConfig":"107"},{"size":529,"mtime":1611081774525,"results":"207","hashOfConfig":"107"},{"size":414,"mtime":1611081871041,"results":"208","hashOfConfig":"107"},{"size":15567,"mtime":1611096209056,"results":"209","hashOfConfig":"107"},{"size":319,"mtime":1611152966645,"results":"210","hashOfConfig":"107"},{"size":3770,"mtime":1611161601871,"results":"211","hashOfConfig":"107"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"215"},"kieyu0",{"filePath":"216","messages":"217","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"218","messages":"219","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"215"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"225","messages":"226","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"227","messages":"228","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"242","messages":"243","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"215"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"266","usedDeprecatedRules":"215"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"269","messages":"270","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"285","messages":"286","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"287","messages":"288","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"291","messages":"292","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"215"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"259"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"311","messages":"312","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"313","messages":"314","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"259"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"322","messages":"323","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"215"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"327","messages":"328","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"329","messages":"330","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"215"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"334","messages":"335","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"348","messages":"349","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"350","messages":"351","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"361","messages":"362","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"363","messages":"364","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"367","messages":"368","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"369","messages":"370","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"215"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"386","messages":"387","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"388"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"391","messages":"392","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"398","messages":"399","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"400","usedDeprecatedRules":"215"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"405","usedDeprecatedRules":"215"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"416","messages":"417","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"418","messages":"419","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"420","messages":"421","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"422","messages":"423","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"424","messages":"425","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"434","messages":"435","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"436"},{"filePath":"437","messages":"438","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"439","messages":"440","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"441"},"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\resumeAcardion\\CreateResumeAcardion.js",["442","443"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport \"../../../styles/CreateResumeAcardion.css\";\r\nimport ProfileForm from \"../createProfile/ProfileForm\";\r\nimport ContactInformation from \"../createContacts/ContactInformation\"\r\nimport EducationForm from '../education/EducationForm';\r\nimport ExperienceForm2 from '../experience/ExperienceForm2';\r\nimport NewM from \"../technicalSkills/NewM\";\r\nimport TechSkills2 from \"../technicalSkills/TechSkills2\";\r\nimport TechnicalSkills from \"../technicalSkills/TechnicalSkills\";\r\nimport KeySkillsSelect from '../keySkills/KeySkillsSelect';\r\nimport AchievementForm from '../achivements/AchievementForm';\r\nimport LanguageForm from '../languageFrom/LanguageForm';\r\nimport DrivingLicence from '../drivingL/DrivingLicence';\r\nimport PersonalDevelopment from '../personalDevelopment/PersonalDevelopment';\r\nimport ImageUploader from '../imageUploader/ImageUploader';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n}));\r\nconst fields = [\r\n    {id: \"aa\", label: \"Profile image\", icon: <i class=\"fas fa-camera\"></i>,\r\n    data: <ImageUploader/>},\r\n    {id: \"ab\", label: \"Personal information\", icon: <i class=\"fas fa-user\"></i>,\r\n    data: <ProfileForm/>},\r\n    {id: \"cb\", label: \"Contact information\", icon: <i class=\"far fa-address-book\"></i>,\r\n    data: <ContactInformation/>},\r\n    {id: \"db\", label: \"Education\", icon: <i class=\"fas fa-user-graduate\"></i>,\r\n    data: <EducationForm/>},\r\n    {id: \"eb\", label: \"Experience\", icon: <i class=\"fas fa-suitcase\"></i>,\r\n    data: <ExperienceForm2/>},\r\n    {id: \"fb\", label: \"Key Skills\", icon: <i class=\"fas fa-shapes\"></i>,\r\n    data: <KeySkillsSelect/>},\r\n    {id: \"gb\", label: \"Technical Skills\", icon: <i class=\"fas fa-chart-bar\"></i>,\r\n    data: <NewM/>},\r\n    {id: \"hb\", label: \"Achievements\", icon: <i class=\"fas fa-award\"></i>,\r\n    data: <AchievementForm/>},\r\n    {id: \"ib\", label: \"Languages\", icon: <i class=\"fas fa-language\"></i>,\r\n    data: <LanguageForm/>},\r\n    {id: \"Jb\", label: \"Driving licence\", icon: <i class=\"far fa-address-card\"></i>,\r\n    data: <DrivingLicence/>},\r\n    {id: \"kb\", label: \"Personal Development\", icon: <i class=\"fas fa-chart-line\"></i>,\r\n    data: <PersonalDevelopment/>},\r\n   \r\n\r\n]\r\n function CreateResumeAcardion() {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleChange = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"container-fluild\">\r\n       <div className={classes.root}>\r\n        {fields?.map((field, index) =>(\r\n            <Accordion key={index} expanded={expanded === \"panel\"+field.id} onChange={handleChange(\"panel\"+field.id)}>\r\n                <AccordionSummary\r\n                expandIcon={field.icon}\r\n                aria-controls={\"panel\"+field.id +\"bh-content\"}\r\n                id={\"panel\"+field.id+\"bh-header\"}\r\n                >\r\n                <Typography className={classes.heading}>{field.label}</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                  \r\n                   {field.data}\r\n                </AccordionDetails>\r\n            </Accordion>\r\n        ))}\r\n    </div>\r\n    </div>\r\n   \r\n  );\r\n}\r\n\r\nexport default CreateResumeAcardion;",["444","445"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\imageUploader\\ImageUploader.js",["446","447"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\PostJobFields.js",["448","449","450","451","452","453"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\App.js",["454"],"import './App.css';\nimport NavBar from './pages/NavBar';\nimport { Switch, Route} from \"react-router-dom\";\nimport { Transition, TransitionGroup } from 'react-transition-group';\nimport { play, exit } from './timelines'\nimport PageNotFound from './components/PageNotFound';\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport JobPost from './pages/JobPost';\nimport JobSearch from './pages/JobSearch';\nimport BuildCV from './pages/BuildCV';\nimport Contacts from './pages/Contacts';\nimport Candidates from './pages/Candidates';\nimport ResumeCreator from \"./pages/ResumeCreator\";\nimport CandidatesContextProvider from './context/CandidatesContext';\nimport EmployerContextProvider from './context/EmployerContext';\nimport JobsContextProvider, { JobsContext } from './context/JobsContext';\nimport CountriesContextProvider from './context/CountriesContext';\n// Importing the Bootstrap CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport KeySkillsContextProvider from './context/KeySkillsContext';\nimport TechnicalSkillsContextProvider from \"./context/TechnicalSkillsContext\";\nfunction App() {\n  return (\n    <>\n    <TechnicalSkillsContextProvider>\n      <KeySkillsContextProvider>\n       \n        <JobsContextProvider>\n          <CountriesContextProvider>\n            <CandidatesContextProvider>\n              <EmployerContextProvider>\n                <NavBar/>\n                  <Route render={({ location }) => {\n                          const { pathname, key } = location;\n\n                          return (\n                            <TransitionGroup component={null}>\n                              <Transition\n                                key={key}\n                                appear={true}\n                                onEnter={(node, appears) => play(pathname, node, appears)}\n                                onExit={(node, appears) => exit(node, appears)}\n                                timeout={{enter: 750, exit: 150}}\n                              >\n                                <Switch location={location}>\n                                  <Route exact path=\"/\" component={Home}/>\n                                  <Route path=\"/jobpost\" component={JobPost} />\n                                  <Route path=\"/jobsearch\" component={JobSearch} />\n                                  <Route path=\"/buildresume\" component={BuildCV} />\n                                  <Route path=\"/contact\" component={Contacts} />\n                                  <Route path=\"/login\" component={Login} />\n                                  <Route path=\"/searchcandidates\" component={Candidates}/>\n                                  <Route path=\"/pagenotfount\" component={PageNotFound} />\n                                  <Route path=\"/resumecreator\" component={ResumeCreator} />\n                                </Switch>\n                              </Transition>\n                            </TransitionGroup>\n                          )\n                    }}/>\n              </EmployerContextProvider>\n                </CandidatesContextProvider>\n          </CountriesContextProvider>\n        </JobsContextProvider>\n       \n      </KeySkillsContextProvider>\n    </TechnicalSkillsContextProvider>\n    \n    </>\n  );\n  \n}\n\nexport default App;\n","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\keySkills\\KeySkillsSelect.js",["455"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\createContacts\\ContactInformation.js",["456","457","458","459"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\autocomleteInputs\\AutocompleteCountry.js",["460","461","462"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\PostView1.js",["463"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\tab\\TabForResumeAndObjective.js",["464"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\type.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\obektivkaReducer.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\rootReducer.js",[],["465","466"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\templates\\ObektivkaTable.js",["467","468","469","470"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\templates\\ObektivkaTemplate.js",["471","472","473"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\index.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\store.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\pages\\Home.js",["474"],"import React from 'react';\r\nimport Banner from '../components/Banner';\r\nimport Resume from '../components/Resume';\r\n\r\nfunction Home() {\r\n    return (\r\n        <div className=\"home\" id=\"home\">\r\n            <Banner/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\pages\\JobPost.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\pages\\ResumeCreator.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\PageNotFound.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\context\\CountriesContext.js",[],["475","476"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\pages\\NavBar.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\context\\KeySkillsContext.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\timelines\\index.js",["477"],"import { TimelineMax as Timeline, Power1 } from 'gsap';\r\n\r\nconst getDefaultTimeline = (node, delay) => {\r\n  const timeline = new Timeline({ paused: true });\r\n  const content = node.querySelector('.content');\r\n  const contentInner = node.querySelector('.content--inner');\r\n\r\n  timeline\r\n    .from(node, 0.3, { display: 'none', autoAlpha: 0, delay, ease: Power1.easeIn })\r\n    .from(content, 0.15, { autoAlpha: 0, y: 25, ease: Power1.easeInOut })\r\n    .from(contentInner, 0.15, { autoAlpha: 0, delay: 0.15, ease: Power1.easeIn });\r\n\r\n  return timeline;\r\n}\r\n\r\nconst getHomeTimeline = (node, delay) => {\r\n  const timeline = new Timeline({ paused: true });\r\n  const texts = node.querySelectorAll('h1 > div');\r\n\r\n  timeline\r\n    .from(node, 0, { display: 'none', autoAlpha: 0, delay })\r\n    .staggerFrom(texts, 0.375, { autoAlpha: 0, x: -25, ease: Power1.easeOut }, 0.125);\r\n\r\n  return timeline;\r\n}\r\n\r\nexport const play = (pathname, node, appears) => {\r\n  const delay = appears ? 0 : 0.5;\r\n  let timeline\r\n\r\n  if (pathname === '/')\r\n    timeline = getHomeTimeline(node, delay);\r\n  else\r\n    timeline = getDefaultTimeline(node, delay);\r\n\r\n  window. requestAnimationFrame(() => timeline.play())\r\n}\r\n\r\nexport const exit = (node) => {\r\n  const timeline = new Timeline({ paused: true });\r\n\r\n  timeline.to(node, 0.15, { autoAlpha: 0, ease: Power1.easeOut });\r\n  timeline.play();\r\n}\r\n","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\JobSearchBanner.js",["478","479","480","481","482","483","484","485"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\CreateResumeMain.js",["486","487","488"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\contactReducer.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\profileReducer.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\drivingLReducer.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\numbersReducer.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\experienceReducer.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\colorReducer.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\CandidateSearchRight.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\ColorPicker.js",["489"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\templates\\TemplateFour.js",["490","491","492","493"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\achivements\\AchievementForm.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\education\\EducationForm.js",["494","495","496","497","498","499"],"import React, {useState} from 'react';\r\nimport \"../../../styles/EducationForm.css\"\r\nimport { withStyles, makeStyles} from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {saveEducation} from \"../../../stores/actions/educationFormAction\";\r\nimport PropTypes from 'prop-types';\r\nimport NumberFormat from 'react-number-format';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport countries from \"i18n-iso-countries\";\r\nimport uzbek from \"i18n-iso-countries/langs/uz.json\";\r\nimport MyDatePicker from '../../datePicker/MyDatePicker';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nconst ValidationTextField = withStyles({\r\n  root: {\r\n    '& input:invalid + fieldset': {\r\n      borderColor: 'ff1100',\r\n      borderWidth: 2,\r\n    },\r\n  },\r\n})(TextField);\r\n\r\nfunction EducationForm() {\r\n  const [checked, setChecked] = useState(false); \r\n  const classes = useStyles();\r\n  const {control } = useForm();\r\n  const education  = useSelector(state => state.educationReducer.education);\r\n  const dispatch = useDispatch();\r\n  const [educationFields, setEducationFields] = useState([])\r\n  var initialDate = Date.parse(new Date());\r\n  const [startDate, setStartDate] = useState(initialDate);\r\n  const [endDate, setEndDate] = useState(initialDate); \r\n   \r\n const onSubmit = (e) => {\r\n      e.preventDefault();\r\n    dispatch(saveEducation(educationFields))\r\n    setChecked(false)\r\n    setStartDate(initialDate);\r\n    setEndDate(initialDate)\r\n    e.target.reset()\r\n  };\r\n  const handleCheck =()=>{\r\n    setChecked(!checked);\r\n    {checked ? (\r\n      setEducationFields({\r\n      ...educationFields,\r\n      ...{toNow:\"\"}\r\n    })\r\n    ):(\r\n      setEducationFields({\r\n        ...educationFields,\r\n        ...{toNow:\"to Present\", endDate:\"\"}\r\n      })\r\n    )}\r\n    \r\n  }\r\n  console.log(\"ck\", checked);\r\n\r\n  const handleChange1 = (date) => {\r\n    setStartDate(date)\r\n    setEducationFields({\r\n      ...educationFields,\r\n      ...{startDate:date}\r\n    })\r\n  };\r\n    \r\nconst handleChange2 = (date) => {\r\n  setEndDate(date);\r\n  !checked ? (\r\n    setEducationFields({\r\n        ...educationFields,\r\n        ...{endDate:date}\r\n      })\r\n  ):(\r\n    setEducationFields({\r\n      ...educationFields,\r\n      ...{endDate:null}\r\n    })\r\n  )\r\n \r\n  };\r\n \r\n  console.log(\"STARTYEAR>>\", startDate);\r\n  console.log(\"ENDYEAR>>\", endDate);\r\n    const handleChange = (e)=>{\r\n     \r\n      setEducationFields({\r\n        ...educationFields,\r\n        ...{[e.target.name]: e.target.value}\r\n      })\r\n      // const {name, value} = e.target\r\n      // education[name]=value\r\n      console.log(\"education>>>\", educationFields);\r\n    }\r\n    countries.registerLocale(uzbek);\r\n    const uz = countries.getNames(\"uz\", {select: \"official\"})\r\n    console.log(uz);\r\n    return (\r\n      <div>\r\n        {<form className=\"educationForm\" onSubmit={onSubmit}>\r\n            <Controller\r\n               render={({onChange, value}) =>\r\n                   <ValidationTextField\r\n                      className={\"profileInfoFields\"}\r\n                      label=\"Degree\"\r\n                      required\r\n                      placeholder=\"Bachelor's\"\r\n                      multiline\r\n                      onChange={e => handleChange(e)}\r\n                      variant=\"outlined\"\r\n                      id=\"degree\"\r\n                      name=\"degree\"\r\n                    />\r\n                  }\r\n                name=\"degree\"\r\n                control={control}\r\n                rules= {{required: true}}\r\n            /> \r\n            <Controller\r\n                render={({onChange, value}) =>\r\n                   <ValidationTextField\r\n                      className={\"profileInfoFields\"}\r\n                      label=\"Major\"\r\n                      required\r\n                      placeholder=\"Computer Science\"\r\n                      multiline\r\n                      onChange={e => handleChange(e)}\r\n                      variant=\"outlined\"\r\n                      id=\"major\"\r\n                      name=\"major\"\r\n                    />\r\n                  }\r\n                name=\"major\"\r\n                control={control}\r\n                rules= {{required: true}}\r\n            /> \r\n            <Controller\r\n                render={({onChange, value}) =>\r\n                   <ValidationTextField\r\n                      className={\"profileInfoFields\"}\r\n                      label=\"University\"\r\n                      required\r\n                      placeholder=\"Harvard\"\r\n                      multiline\r\n                      variant=\"outlined\"\r\n                      onChange={e => handleChange(e)}\r\n                      id=\"university\"\r\n                      name=\"university\"\r\n                    />\r\n                  }\r\n                name=\"university\"\r\n                control={control}\r\n                rules= {{required: true}}\r\n            /> \r\n            <div className=\"study__years\">\r\n            <MyDatePicker \r\n            startDate={startDate} \r\n            endDate={endDate} \r\n            checked={checked} \r\n            handleChange1={handleChange1} \r\n            handleChange2={handleChange2} \r\n            handleCheck={handleCheck}\r\n            />\r\n            \r\n\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-success btn-block mt-2\">save</button>\r\n        </form>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EducationForm\r\n\r\n\r\n\r\nfunction NumberFormatCustom(props) {\r\n  const { inputRef, onChange, ...other } = props;\r\n\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      minLength=\"4\"\r\n      maxLength=\"4\"\r\n      isNumericString\r\n    />\r\n  );\r\n}\r\n\r\nNumberFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\experience\\ExperienceForm2.js",["500","501","502","503","504","505"],"import React, {useState} from 'react';\r\nimport \"../../../styles/EducationForm.css\"\r\nimport { withStyles, makeStyles} from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {saveExperience} from \"../../../stores/actions/experienceAction\";\r\nimport PropTypes from 'prop-types';\r\nimport NumberFormat from 'react-number-format';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport MyDatePicker from '../../datePicker/MyDatePicker';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nconst ValidationTextField = withStyles({\r\n  root: {\r\n    '& input:invalid + fieldset': {\r\n      borderColor: 'ff1100',\r\n      borderWidth: 2,\r\n    },\r\n  },\r\n})(TextField);\r\n\r\nfunction ExperienceForm() {\r\n  const [projectInputList, setProjectInputList] = useState([{project: \"\"}]);\r\n  const initialState = {\r\n    jobTitle:\"\",\r\n    companyName:\"\",\r\n    address:\"\",\r\n    startDate:Date.parse(new Date()),\r\n    endDate:Date.parse(new Date()),\r\n    toNow:\"\",\r\n    aboutJob:\"\",\r\n    projects:[{project:\"\"}]\r\n  }\r\n  const [expr, setExpr] = useState(\r\n     initialState\r\n  )\r\n  const classes = useStyles();\r\n  const {control } = useForm();\r\n  const experience  = useSelector(state => state.experienceReducer.experience);\r\n  const dispatch = useDispatch();\r\n\r\n  var initialDate = Date.parse(new Date());\r\n  const [startDate, setStartDate] = useState(initialDate);\r\n  const [endDate, setEndDate] = useState(initialDate); \r\n  const [checked, setChecked] = useState(false);\r\n\r\n  const handleCheck =()=>{\r\n    setChecked(!checked);\r\n    {checked ? (\r\n      setExpr({\r\n      ...expr,\r\n      ...{toNow:\"\"}\r\n    })\r\n    ):(\r\n      setExpr({\r\n        ...expr,\r\n        ...{toNow:\"to Present\", endDate:\"\"}\r\n      })\r\n    )}\r\n  }\r\n  console.log(\"exCeck\", checked);\r\n\r\n  const handleChange1 = (date) => {\r\n    setStartDate(date)\r\n    setExpr({\r\n      ...expr,\r\n      ...{startDate:date}\r\n    })\r\n  };\r\n    \r\nconst handleChange2 = (date) => {\r\n  setEndDate(date);\r\n  !checked ? (\r\n    setExpr({\r\n        ...expr,\r\n        ...{endDate:date}\r\n      })\r\n  ):(\r\n    setExpr({\r\n      ...expr,\r\n      ...{endDate:null}\r\n    })\r\n  )\r\n \r\n  };\r\n  const onSubmit = (e) => {\r\n      e.preventDefault();\r\n    dispatch(saveExperience(expr))\r\n    // setValues({ endYear: '',\r\n    // startYear:''})\r\n    setChecked(false)\r\n    setExpr(initialState)\r\n    e.target.reset()\r\n  };\r\n\r\n  // const toggleChecked = (e) => {\r\n  //   setChecked((prev) => !prev);\r\n  //   console.log(e.target.value);\r\n  // };\r\n\r\n  const handleRemoveProject =(e,proI)=>{\r\n      e.preventDefault()\r\n      setExpr((prev) =>{\r\n           let temp= { ...prev, projects:[...prev.projects]}\r\n    temp.projects.splice(proI,1)\r\n    return temp\r\n      })\r\n   \r\n   \r\n  }\r\n\r\n  const handleAddProject =(e)=>{\r\n      e.preventDefault()\r\n      setExpr((prev)=>{\r\n        let temp= { ...prev, projects:[...prev.projects, {project:\"\"}]}\r\n        return temp\r\n      })\r\n  } \r\n\r\n//   const handleProject = (e,proI)=>{\r\n//       const {name, value} = e.target.value\r\n//     setProjectInputList(prevState =>{\r\n//         let projects = [...prevState];\r\n//         projects[i] = {...projects[i], [name]:value}\r\n//         return {projects}\r\n//     })\r\n//   }\r\n  console.log(\"aaa>>>\", expr);\r\n    \r\n    const handleChange =(e) =>{\r\n          setExpr({\r\n            ...expr,\r\n            ...{[e.target.name]: e.target.value}\r\n          }) \r\n    }  \r\n    const handleProjectChange = (e, proI)=>{\r\n    const {name, value} = e.target\r\n      setExpr((prev)=>{\r\n          let temp= { ...prev, projects:[...prev.projects]}\r\n          temp.projects[proI][name]=value\r\n          return temp\r\n      })\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {<form className=\"educationForm\" onSubmit={onSubmit}>\r\n            <Controller\r\n               render={({onChange, value}) =>\r\n                   <ValidationTextField\r\n                      className={\"profileInfoFields\"}\r\n                      label=\"Job title\"\r\n                      required\r\n                      placeholder=\"Web developer\"\r\n                      multiline\r\n                      value={expr.jobTitle}\r\n                      onChange={e => handleChange(e)}\r\n                      variant=\"outlined\"\r\n                      id=\"jobTitle\"\r\n                      name=\"jobTitle\"\r\n                    />\r\n                  }\r\n                name=\"jobTitle\"\r\n                control={control}\r\n                rules= {{required: true}}\r\n            /> \r\n            <Controller\r\n                render={({onChange, value}) =>\r\n                   <ValidationTextField\r\n                      className={\"profileInfoFields\"}\r\n                      label=\"Company name\"\r\n                      required\r\n                      placeholder=\"Amazon\"\r\n                      multiline\r\n                      value={expr.companyName}\r\n                      onChange={e => handleChange(e)}\r\n                      variant=\"outlined\"\r\n                      id=\"companyName\"\r\n                      name=\"companyName\"\r\n                    />\r\n                  }\r\n                name=\"companyName\"\r\n                control={control}\r\n                rules= {{required: true}}\r\n            /> \r\n            <Controller\r\n                render={({onChange, value}) =>\r\n                   <ValidationTextField\r\n                      className={\"profileInfoFields\"}\r\n                      label=\"Address\"\r\n                      required\r\n                      placeholder=\"123, Street, Region...\"\r\n                      multiline\r\n                      value={expr.address}\r\n                      variant=\"outlined\"\r\n                      onChange={e => handleChange(e)}\r\n                      id=\"address\"\r\n                      name=\"address\"\r\n                    />\r\n                  }\r\n                name=\"address\"\r\n                control={control}\r\n                rules= {{required: true}}\r\n            /> \r\n            <div className=\"study__years\">\r\n            <MyDatePicker \r\n             startDate={startDate} \r\n             endDate={endDate} \r\n             checked={checked} \r\n             handleChange1={handleChange1} \r\n             handleChange2={handleChange2} \r\n             handleCheck={handleCheck}\r\n            />\r\n            </div>\r\n            <div className=\"special_box mt-4\">\r\n                <Controller\r\n                    render={({onChange, value}) =>\r\n                       <TextField\r\n                         id=\"aboutMe__text\"\r\n                         label=\"About your job\"\r\n                         multiline\r\n                         className=\"aboutMe__text\"\r\n                         rows={6}\r\n                         name=\"aboutJob\"\r\n                         onChange={e => handleChange(e)}\r\n                         value={expr.aboutJob}\r\n                         placeholder=\"Brief description and responsibility you had in this position.\" \r\n                         defaultValue=\"\"\r\n                         variant=\"outlined\"\r\n                       />\r\n                     }\r\n                   name=\"aboutJob\"\r\n                   control={control}\r\n                   rules= {{required: true}}\r\n                 /> \r\n            </div>\r\n            {expr.projects&& expr.projects.map((pro, proI) =>{\r\n                console.log(\"projectInputList\", projectInputList);\r\n                return(\r\n                    <div className=\"special_box2\">\r\n                        <Controller\r\n                            render={({onChange, value}) =>\r\n                               <TextField\r\n                                 id=\"project__text\"\r\n                                 label={\"Project\"}\r\n                                 multiline\r\n                                 className=\"project__text\"\r\n                                 rows={3}\r\n                                 name={\"project\"}\r\n                                 onChange={(e) => handleProjectChange(e,proI)}\r\n                                 placeholder=\"Project you worked\" \r\n                                //  defaultValue={pro.project}\r\n                                 variant=\"outlined\"\r\n                               />\r\n                             }\r\n                           name={\"project\"}\r\n                           control={control}\r\n                           rules= {{required: true}}\r\n                         /> \r\n                         <div className=\"button__box\">\r\n                             {expr.projects.length !==1 && \r\n                             <Fab size=\"small\" color=\"secondary\" aria-label=\"add\" onClick={(e)=> handleRemoveProject(e, proI) } className={classes.margin}>\r\n                               <DeleteOutlineIcon/>\r\n                             </Fab>\r\n                             }\r\n                             {expr.projects.length - 1 ===proI && \r\n                             <Fab size=\"small\" color=\"primary\" aria-label=\"add\" onClick={e=>handleAddProject(e)} className={classes.margin}>\r\n                               <AddIcon/>\r\n                             </Fab>\r\n                             }\r\n                         </div>\r\n                    </div>\r\n                )\r\n            })}\r\n            \r\n            <button type=\"submit\" className=\"btn btn-success btn-block\">save</button>\r\n        </form>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExperienceForm\r\n\r\n\r\n\r\nfunction NumberFormatCustom(props) {\r\n  const { inputRef, onChange, ...other } = props;\r\n\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      minLength=\"4\"\r\n      maxLength=\"4\"\r\n      isNumericString\r\n    />\r\n  );\r\n}\r\n\r\nNumberFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\technicalSkillsAction.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\educationFormAction.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\achievementsAction.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\obektivkaAction.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\postJobFieldsAction.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\loginAndregister\\TabForRegister.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\loginAndregister\\SignInWithGoogle.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\datePicker\\MyDatePicker.js",["506","507","508"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\templates\\TemplateOne.js",["509","510","511","512","513","514","515","516","517","518","519","520"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\datePicker\\SingleYearPicker.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\personalDevelopment\\PersonalDevelopment.js",["521"],"import React, {useState} from 'react';\r\nimport \"../../../styles/EducationForm.css\"\r\nimport { withStyles, makeStyles} from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {savePersonalDev} from \"../../../stores/actions/personalDevAction\";\r\nimport PropTypes from 'prop-types';\r\nimport NumberFormat from 'react-number-format';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport SingleYearPicker from '../../datePicker/SingleYearPicker';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nconst ValidationTextField = withStyles({\r\n  root: {\r\n    '& input:invalid + fieldset': {\r\n      borderColor: 'ff1100',\r\n      borderWidth: 2,\r\n    },\r\n  },\r\n})(TextField);\r\n\r\nfunction PersonalDevelopment() {\r\n  const [values, setValues] = useState({\r\n    year:'',\r\n  });\r\n  const classes = useStyles();\r\n  const {control } = useForm();\r\n  const personalDevInfo  = useSelector(state => state.personalDevReducer.personalDevInfo);\r\n  const dispatch = useDispatch();\r\n  const [personalD, setPersonalD] =useState({})\r\n  \r\n  var initialDate = Date.parse(new Date());\r\n  const [selectedYear, setSelectedYear] = useState(initialDate)\r\n\r\n  const onSubmit = (e) => {\r\n      e.preventDefault();\r\n    dispatch(savePersonalDev(personalD))\r\n    setPersonalD({})\r\n    e.target.reset()\r\n    setValues(\"\")\r\n  };\r\n\r\n  const handleChange = (e)=>{\r\n    // const {name,value} = e.target\r\n    setPersonalD(prev => ({...prev, ...{\r\n       [e.target.name] : e.target.value\r\n     }}))\r\n    }\r\n    const handleChange1 = (date) => {\r\n      setSelectedYear(date)\r\n      setPersonalD({\r\n        ...personalD,\r\n        ...{selectedYear:date}\r\n      })\r\n    };\r\n\r\n    return (\r\n      <div className=\"technical__skillsContainer\">\r\n        <div className=\"achievement__boxContainer\">\r\n            {personalDevInfo && \r\n            personalDevInfo.map((personal, index)=>(\r\n            <div className=\"achievement__box\" key={index}>\r\n              <div className=\"achievement_boxInfo\">\r\n                  <h5 className=\"tech__skillTitle\">{personal.achievement}</h5>\r\n                  <p className=\"achievement__address\">{personal.organizationName} / {personal.address}</p>\r\n                  <p className=\"achievement__address\">{personal.year}</p>\r\n              </div>\r\n              <div className=\"tech_skillButtons\">\r\n                <Fab size=\"small\" color=\"primary\" aria-label=\"edit\"  className={classes.margin}>\r\n                    <EditIcon className=\"tech__skillEdit\"/>\r\n                </Fab>\r\n                <Fab size=\"small\" color=\"secondary\" aria-label=\"delete\" className={classes.margin}>\r\n                    <DeleteOutlineIcon className=\"tech__skillDelete\"/>\r\n                </Fab>\r\n              </div>\r\n            </div>\r\n              )\r\n            )\r\n          }\r\n        </div>\r\n       \r\n        {<form className=\"educationForm\" onSubmit={onSubmit}>\r\n            <Controller\r\n               render={({onChange, value}) =>\r\n                   <ValidationTextField\r\n                      className={\"profileInfoFields\"}\r\n                      label=\"Theme\"\r\n                      required\r\n                      placeholder=\"Web dev course\"\r\n                      multiline\r\n                      onChange={e => handleChange(e)}\r\n                      variant=\"outlined\"\r\n                      id=\"achievement\"\r\n                      name=\"theme\"\r\n                    />\r\n                  }\r\n                name=\"theme\"\r\n                control={control}\r\n                rules= {{required: true}}\r\n            /> \r\n            <Controller\r\n                render={({onChange, value}) =>\r\n                   <ValidationTextField\r\n                      className={\"profileInfoFields\"}\r\n                      label=\"Organization\"\r\n                      required\r\n                      placeholder=\"Udemy\"\r\n                      multiline\r\n                      onChange={e => handleChange(e)}\r\n                      variant=\"outlined\"\r\n                      id=\"organizationName\"\r\n                      name=\"organizationName\"\r\n                    />\r\n                  }\r\n                name=\"organizationName\"\r\n                control={control}\r\n                rules= {{required: true}}\r\n            /> \r\n            <Controller\r\n                render={({onChange, value}) =>\r\n                   <ValidationTextField\r\n                      className={\"profileInfoFields\"}\r\n                      label=\"Address\"\r\n                      required\r\n                      placeholder=\"213, ...Street, Tashkent, Uzb\"\r\n                      multiline\r\n                      variant=\"outlined\"\r\n                      onChange={e => handleChange(e)}\r\n                      id=\"address\"\r\n                      name=\"address\"\r\n                    />\r\n                  }\r\n                name=\"address\"\r\n                control={control}\r\n                rules= {{required: true}}\r\n            /> \r\n            <div className=\"study__years\">\r\n            <SingleYearPicker takenYear={selectedYear} handleChange1={handleChange1} />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-success btn-block\">save</button>\r\n        </form>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PersonalDevelopment\r\n\r\n\r\n\r\nfunction NumberFormatCustom(props) {\r\n  const { inputRef, onChange, ...other } = props;\r\n\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n          },\r\n        });\r\n      }}\r\n      minLength=\"4\"\r\n      maxLength=\"4\"\r\n      isNumericString\r\n    />\r\n  );\r\n}\r\n\r\nNumberFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\createProfile\\ProfileForm.js",["522","523","524"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\datePicker\\BirthdayPicker.js",["525"],"import React, {useState} from 'react';\r\nimport MomentUtils from \"@date-io/moment\";\r\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport styled from \"styled-components\";\r\nimport \"moment/locale/uz-latn\";\r\nimport \"moment/locale/ru\";\r\nimport { uzUz, ruRu, enUS } from \"@material-ui/core/locale\";\r\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core\";\r\n\r\nconst StyledWrapper = styled(\"div\")``;\r\n\r\nmoment.locale(\"uz-latn\");\r\nmoment.locale(\"ru\");\r\n\r\nconst theme = createMuiTheme(\r\n  {\r\n    typography: {\r\n      fontFamily: \"Raleway\"\r\n    }\r\n  },\r\n  uzUz,\r\n  ruRu,\r\n  enUS\r\n);\r\n\r\nfunction BirthdayPicker(props) {\r\n  var {birthday, handleChange1} = props;\r\n//   const initialDate = Date.parse(new Date());\r\n//   const [birthday, setBirthday] = useState(initialDate)\r\n\r\n//   const handleChange1 =(date)=>{\r\n//       setBirthday(date)\r\n//   }\r\n//   console.log(\"BIRTHDAY>>>\", birthday);\r\n    return (\r\n        <div style={{ width:\"100%\" }}>\r\n        <ThemeProvider\r\n          theme={theme}\r\n        >\r\n          <StyledWrapper style={{width:\"100%\", marginBottom:\"25px\" }}>\r\n            <MuiPickersUtilsProvider\r\n              utils={MomentUtils}\r\n              libInstance={moment}\r\n              locale={\"uz-latn\"}\r\n              name=\"year\"\r\n            >  \r\n            <DatePicker\r\n                disableFuture\r\n                inputVariant=\"outlined\"\r\n                openTo=\"year\"\r\n                format=\"DD/MM/yyyy\"\r\n                label=\"Date of birth\"\r\n                views={[\"year\", \"month\", \"date\"]}\r\n                value={birthday}\r\n                onChange={(moment) => handleChange1(Date.parse(moment.format()))}\r\n            />\r\n            </MuiPickersUtilsProvider>\r\n          </StyledWrapper>\r\n        </ThemeProvider>\r\n        \r\n      </div>\r\n    )\r\n}\r\n\r\nexport default BirthdayPicker\r\n","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\pages\\Candidates.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\pages\\Contacts.js",["526"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\pages\\Login.js",["527"],"import React, {useContext} from 'react';\r\nimport LoginAndRegister from '../components/loginAndregister/LoginAndRegister';\r\n\r\n\r\nfunction Login() {\r\n\r\n    return (\r\n        <div id=\"login\">\r\n           <LoginAndRegister/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\context\\EmployerContext.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\languageSelect.js",["528"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\personalDevReducer.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\keySkillsReducer.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\JobSearchRight.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\tab\\TabForTemplates.js",["529","530","531","532","533"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\colorAction.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\languageFrom\\LanguageForm.js",["534","535","536","537","538","539","540"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\technicalSkills\\NewM.js",["541","542"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\templates\\TemplateTree.js",["543","544","545"],"import React, {useState, createRef} from 'react';\r\nimport ProgressBar from '../components/ProgressBar';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport \"./templateStyles/TemplateThree.css\";\r\nimport moment from \"moment\";\r\nimport Pdf from \"react-to-pdf\";\r\n\r\nfunction TemplateTree() {\r\n    const [progressColors, setProgressColors] = useState([\r\n        {id:777, color: \"#6a1b9a\"},\r\n        {id:888, color: \"#32a852\"},\r\n        {id:999, color: \"#3250a8\"},\r\n        {id:666, color: \"#dbd144\"},\r\n        {id:555, color: \"#c42121\"},\r\n    ])\r\n    const ref = createRef();\r\n    \r\n    const dispatch = useDispatch();\r\n    const profileInfo = useSelector(state => state.profileReducer.profileInfo);\r\n    const contact = useSelector(state => state.contactReducer.contact);\r\n    const educations = useSelector(state => state.educationReducer.educations)\r\n    const experiences = useSelector(state => state.experienceReducer.experiences)\r\n    const keyskillsList = useSelector(state => state.keySkillsReducer.keyskillsList)\r\n    const techSkillsList = useSelector(state => state.technicalSkillsReducer.techSkillsList)\r\n    const achievements = useSelector(state => state.achievementsReducer.achievements)\r\n    const languagesList = useSelector(state => state.languagesReducer.languagesList)\r\n    const drLicences = useSelector(state => state.drivingLReducer.drLicences)\r\n    const personalDevInfo  = useSelector(state => state.personalDevReducer.personalDevInfo);\r\n    const selectedColor = useSelector(state => state.colorReducer.selectedColor)\r\n    return (\r\n        <div className=\"container\">\r\n             <Pdf targetRef={ref} fileName=\"template-four.pdf\" >\r\n                {({toPdf})=> <button onClick={toPdf}>save as pdf</button>}\r\n            </Pdf>\r\n            <div className=\"templateThree__container\" ref={ref}>\r\n                <div className=\"templateThree__header effect1\" style={{backgroundColor:selectedColor.colorHead, color: selectedColor.textColor}}>\r\n                    <div className=\"templateThree__headerProfile\">\r\n                        <p className=\"templateThree__headerName\">\r\n                        {profileInfo.firstName && profileInfo?.firstName+\" \"+ profileInfo?.lastName}\r\n                        </p>\r\n                        <p className=\"templateThree__headerJobTitle\">\r\n                        {profileInfo?.currentJob}\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"templateThree__headerSocials\">\r\n                            {contact.facebook ? (\r\n                                <div className=\"social__contacts\">\r\n                                     <i class=\"fab fa-facebook-square\" style={{color: selectedColor.textColor}}></i>\r\n                                    <p className=\"contact__name\">\r\n                                    {contact.facebook}\r\n                                    </p>          \r\n                                </div>\r\n                            ): \"\"}\r\n                            {contact.instagram ? (\r\n                               <div className=\"social__contacts\">\r\n                                    <i class=\"fab fa-instagram\"  style={{color: selectedColor.textColor}}></i>\r\n                                    <p className=\"contact__name\">\r\n                                        {contact.instagram}\r\n                                    </p>\r\n                                </div> \r\n                            ): \"\"}\r\n                            {contact.telegram ? (\r\n                                <div className=\"social__contacts\">\r\n                                    <i class=\"fab fa-telegram-plane\"  style={{color: selectedColor.textColor}}></i>\r\n                                    <p className=\"contact__name\">\r\n                                        {contact.telegram}\r\n                                    </p>\r\n                                </div>\r\n                            ): \"\"}\r\n                            {contact.linkedIn? (\r\n                                <div className=\"social__contacts\">\r\n                                    <i class=\"fab fa-linkedin\"  style={{color: selectedColor.textColor}}></i>\r\n                                    <p className=\"contact__name\">\r\n                                        {contact.linkedIn}\r\n                                    </p>\r\n                                </div>\r\n                            ): \"\"}\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"templateThree__body \">\r\n                    <div className=\"templateThree__profile\">\r\n                        <div className=\"templateThree__bodyHeadings\">\r\n                            <p className=\"templateThree__bodyHeading\"  style={{color:selectedColor.colorHeadings}}>\r\n                               professional profile\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"tempThree__line\" style={{color:selectedColor.colorLine}}></div>\r\n                        \r\n                        <div className=\"templateThree__bodyContent\">\r\n                            <p>{profileInfo?.aboutMe}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"templateThree__experience\">\r\n                        <div className=\"templateThree__bodyHeadings\">\r\n                            <p className=\"templateThree__bodyHeading\" style={{color:selectedColor.colorHeadings}}>\r\n                                experience\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"tempThree__line\" style={{color:selectedColor.colorLine}}></div>\r\n                        {experiences &&\r\n                                experiences.map((experience, index) =>(\r\n\r\n                                    <div key={index} className=\"template__threeExpJobContainer\">\r\n                                    <div className=\"template__threeExpJobBox\">\r\n                                        <p className=\"template__threeExpJobTitle\">\r\n                                            {experience.jobTitle}\r\n                                        </p>\r\n                                    </div>\r\n                                    <div className=\"template__threeExpJobAddress\">\r\n                                        <p className=\"template__threeExpCompany\">\r\n                                            {experience.companyName}\r\n                                        </p>\r\n                                        <p className=\"template__threeExpDateDash\">\r\n                                            /\r\n                                        </p>\r\n                                        <p className=\"template__threeExpLocation\">\r\n                                        {experience.address}\r\n                                        </p>\r\n                                        <p className=\"template__threeExpDateDash\">\r\n                                            /\r\n                                        </p>\r\n                                        <div className=\"template__threeExpDate\">\r\n                                        <p className=\"template__threeExpStartDate\">\r\n                                            {moment(experience.startDate).utc().year()}\r\n                                        </p>\r\n                                        <p className=\"template__threeExpDateDash\">\r\n                                            -\r\n                                        </p>\r\n                                        <p className=\"template__threeExpEndDate\">\r\n                                        {experience.toNow ===\"\" ? moment(experience.endDate).utc().year() : \"To present\"}\r\n                                        </p>\r\n                                    </div>\r\n                                    </div>\r\n                                    <p className=\"template__threeProfessionalProfContent\">\r\n                                       {experience.aboutJob}\r\n                                    </p>\r\n                                    <p className=\"template__threeProfessionalProfContentResp\">\r\n                                        <ul className=\"template__threeProfessionalLists\">\r\n                                            {experience.projects.map((proj, index)=>(\r\n                                                <li key={index} className=\"template__threeProfessionalList\">\r\n                                                       {proj.project}\r\n                                                 </li> \r\n                                            ))}\r\n                                            \r\n                                           \r\n                                        </ul>\r\n                                    </p>\r\n                                    \r\n                                </div>\r\n\r\n                                ))\r\n                            }\r\n                    </div>\r\n                    <div className=\"templateThree__personalDev\">\r\n                        <div className=\"templateThree__bodyHeadings\">\r\n                            <p className=\"templateThree__bodyHeading\" style={{color:selectedColor.colorHeadings}}>\r\n                                personal development\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"tempThree__line\" style={{color:selectedColor.colorLine}}></div>\r\n                        <div className=\"templateThree__bodyContent\">\r\n                        {personalDevInfo && personalDevInfo.map((personal, index)=>(\r\n                            \r\n                            <div className=\"template__threeProfDevBox\" key={index}>\r\n                                <p className=\"template__threeExpJobTitle\">\r\n                                    {personal.theme}\r\n                                </p>\r\n                                <div>\r\n                                <div className=\"template__threeProfDevAddress\">\r\n                                    <p className=\"template__threeExpCompany\">\r\n                                    {personal.organizationName}\r\n                                    </p>\r\n                                    <p className=\"template__threeExpDateDash\">\r\n                                        /\r\n                                    </p>\r\n                                    <p className=\"template__threeExpLocation\">\r\n                                    {personal.address}\r\n                                    </p>   \r\n                                </div>\r\n                                <div className=\"template__threeExpDate\">\r\n                                    <p className=\"template__threeExpStartDate\">\r\n                                    {moment(personal.selectedYear).utc().year()}\r\n                                    </p>\r\n                                </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                        )\r\n                       }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"templateThree__right\" style={{backgroundColor:selectedColor.colorSide, color: selectedColor.textColor}}>\r\n                    <div className=\"templateThree__avatar\">\r\n                       <img src=\"../../assets/images/templateImages/mini.jpg\" alt=\"\"/>\r\n                    </div>\r\n                    <div className=\"templateThree__righHeadingContainer\">\r\n                            <div className=\"templateThree__fieldsHeader\" style={{backgroundColor:selectedColor.colorHead, color: selectedColor.textColor}}>\r\n                                <p className=\"templateThree__rightHeadings\">contact</p> \r\n                            </div>\r\n                            <p className=\"dateOFBirth\" style={{textAlign:\"center\"}}>{moment(profileInfo.birthday).utc().format(\"DD / MM / YYYY\")}</p>\r\n                    </div>\r\n                    <div className=\"templateThree__righHeadingContainer\">\r\n                            <div className=\"templateThree__fieldsHeader\" style={{backgroundColor:selectedColor.colorHead, color: selectedColor.textColor}}>\r\n                                <p className=\"templateThree__rightHeadings\">contact</p> \r\n                            </div>\r\n                            {contact.address ? (\r\n                                <div className=\"templateThree__rightContact\">\r\n                                    <i class=\"fas fa-home\"  style={{color: selectedColor.textColor}}></i>\r\n                                    <p className=\"contact__titles\">\r\n                                        {contact.address}\r\n                                    </p>\r\n                                </div>\r\n                            ):\"\"}\r\n                            {contact.email ? (\r\n                                <div className=\"templateThree__rightContact\">\r\n                                   <i class=\"far fa-envelope\"  style={{color: selectedColor.textColor}}></i>\r\n                                    <p className=\"contact__titles\">\r\n                                        {contact.email}\r\n                                    </p>\r\n                                </div>\r\n                            ):\"\"}\r\n                            {contact.phone ? (\r\n                                <div className=\"templateThree__rightContact\">\r\n                                    <i class=\"fas fa-phone-square-alt\"  style={{color: selectedColor.textColor}}></i>\r\n                                    <p className=\"contact__titles\">\r\n                                        {contact.phone}\r\n                                    </p>\r\n                                </div>\r\n                            ):\"\"}\r\n                    </div>\r\n                    <div className=\"templateThree__righHeadingContainer\">\r\n                        <div className=\"templateThree__fieldsHeader\" style={{backgroundColor:selectedColor.colorHead, color: selectedColor.textColor}}>\r\n                            <p className=\"templateThree__rightHeadings\">education</p> \r\n                        </div>\r\n                            {educations &&\r\n                                educations.map((education, index) =>(\r\n                                <div className=\"temp__threeUniversity\" key={index}>\r\n                                    <div className=\"temp__threeUniDegreeNMajor\">\r\n                                        <p className=\"temp__threeUniversityDegree\">\r\n                                           {education.degree}\r\n                                        </p>\r\n                                       \r\n                                        <p className=\"temp__threeUniversityMajor\">\r\n                                            {education.major}\r\n                                        </p>\r\n                                    </div>\r\n                                    <p className=\"temp__threeUniversityName\">\r\n                                        {education.university}\r\n                                    </p>\r\n                                    <div className=\"temp__threeEductationYears\">\r\n                                        <p className=\"temp__threeStartYear\">\r\n                                            {moment(education.startDate).utc().year()}\r\n                                        </p>\r\n                                        <p className=\"temp__threeDash\">\r\n                                            -\r\n                                        </p>\r\n                                        <p className=\"temp__threeEndYear\">\r\n                                        {education.endDate ? moment(education.endDate).utc().year() : \"To present\"}\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                                ))\r\n                            }\r\n                    </div>\r\n                    <div className=\"templateThree__righHeadingContainer\">\r\n                        <div className=\"templateThree__fieldsHeader\" style={{backgroundColor:selectedColor.colorHead, color: selectedColor.textColor}}>\r\n                            <p className=\"templateThree__rightHeadings\">key skills</p>     \r\n                        </div>\r\n                        {keyskillsList &&\r\n                                keyskillsList.map((keyskills, index)=>(\r\n                                <p className=\"temp__threeSkill\" key={index}>\r\n                                   {keyskills.title}\r\n                                </p>\r\n                                ))\r\n                            }\r\n                    </div>\r\n                    <div className=\"templateThree__righHeadingContainer\">\r\n                        <div className=\"templateThree__fieldsHeader\" style={{backgroundColor:selectedColor.colorHead, color: selectedColor.textColor}}>\r\n                           <p className=\"templateThree__rightHeadings\">technical skills</p>       \r\n                        </div>\r\n                        {techSkillsList &&\r\n                                techSkillsList.map((techSkill, index) =>(\r\n                                <div className=\"temp__threeTechSkill\" key={index}>\r\n                                    <p className=\"temp__threeTechSkillTitle\">\r\n                                        {techSkill.tech_skill}\r\n                                    </p>\r\n                                    {/* {progressColors &&\r\n                                        progressColors.map(color =>( */}\r\n                                            <ProgressBar bgcolor ={selectedColor.colorHead} completed={techSkill.tech_skill_rank}/>\r\n                                        {/* ))\r\n                                    } */}\r\n                                   \r\n                                </div>\r\n                                ))\r\n                            }\r\n                    </div>\r\n                    <div className=\"templateThree__righHeadingContainer\">\r\n                        <div className=\"templateThree__fieldsHeader\" style={{backgroundColor:selectedColor.colorHead, color: selectedColor.textColor}}>\r\n                           <p className=\"templateThree__rightHeadings\">achievement</p> \r\n                        </div>\r\n                        { achievements && achievements.map((achievement, index) =>(\r\n                                <div className=\"temp__threeAwards\">\r\n                                    <p className=\"temp__threeAwardTitle\">\r\n                                        {achievement.achievement}\r\n                                    </p>\r\n                                    <p className=\"template__threeAward\">{achievement.organizationName} / {achievement.address} </p>\r\n                                    <p className=\"template__threeAward\">{ moment(achievement.selectedYear).utc().year()}</p>\r\n                                </div>\r\n                            ))}\r\n                    </div>\r\n                    <div className=\"templateThree__righHeadingContainer\">\r\n                        <div className=\"templateThree__fieldsHeader\" style={{backgroundColor:selectedColor.colorHead, color: selectedColor.textColor}}>\r\n                           <p className=\"templateThree__rightHeadings\">languages</p> \r\n                        </div>\r\n                        {languagesList &&\r\n                                languagesList.map((language, index)=>(\r\n                                    <div className=\"temp__threeLanguage\">\r\n                                        <p className=\"temp__threeLangTitle col-sm-5 px-0\">\r\n                                            {language.name}\r\n                                        </p>\r\n                                        <p className=\"temp__threeLaguageStick col-sm-2 px-1\">\r\n                                            |\r\n                                        </p>\r\n                                        <p className=\"temp__threeLangLevel col-sm-5 px-0\">\r\n                                            {language.level}\r\n                                        </p>\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                    </div>\r\n                    <div className=\"templateThree__righHeadingContainer\">\r\n                        <div className=\"templateThree__fieldsHeader\" style={{backgroundColor:selectedColor.colorHead, color: selectedColor.textColor}}>\r\n                           <p className=\"templateThree__rightHeadings\">driving licence</p> \r\n                        </div> \r\n                        {drLicences &&\r\n                                drLicences.map((drL, index)=>(\r\n                                    <div className=\"temp_fourDriving\" key={index}>\r\n                                    <p className=\"temp_fourDrivingTitle col-sm-5 px-0\">\r\n                                       CLASS\r\n                                   </p>\r\n                                   <p className=\"temp_fourDrivingStick col-sm-2 px-1\">\r\n                                       |\r\n                                   </p>\r\n                                   <p className=\"temp_fourDrivingLevel col-sm-5 px-0\">\r\n                                       {drL.title}\r\n                                   </p>\r\n                               </div>\r\n                                ))\r\n                            }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TemplateTree\r\n","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\keySkillsAction.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\profileInfoAction.js",["546"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\experienceAction.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\drivingLAction.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\templates\\TemplateTwo.js",["547","548","549","550","551","552","553","554","555","556"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\obektivka\\obektivkaProfile\\ObektivkaProfile.js",["557","558","559","560","561","562","563","564"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\obektivka\\obektivaAccardion\\ObektivaAccardion.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\obektivka\\obektivkaBirthDateAndPlace\\ObektivkaBirthDateAndPlace.js",["565","566","567","568","569","570","571","572","573"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\datePicker\\DateYearMonthPicker.js",["574"],"import React, {useState} from 'react';\r\nimport MomentUtils from \"@date-io/moment\";\r\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport styled from \"styled-components\";\r\nimport \"moment/locale/uz-latn\";\r\nimport \"moment/locale/ru\";\r\nimport { uzUz, ruRu, enUS } from \"@material-ui/core/locale\";\r\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core\";\r\n\r\nconst StyledWrapper = styled(\"div\")``;\r\n\r\nmoment.locale(\"uz-latn\");\r\nmoment.locale(\"ru\");\r\n\r\nconst theme = createMuiTheme(\r\n  {\r\n    typography: {\r\n      fontFamily: \"Raleway\"\r\n    }\r\n  },\r\n  uzUz,\r\n  ruRu,\r\n  enUS\r\n);\r\n\r\nfunction DateYearMonthPicker(props) {\r\n  var {selectedDate, handleChange1} = props;\r\n//   const initialDate = Date.parse(new Date());\r\n//   const [birthday, setBirthday] = useState(initialDate)\r\n\r\n//   const handleChange1 =(date)=>{\r\n//       setBirthday(date)\r\n//   }\r\n//   console.log(\"BIRTHDAY>>>\", birthday);\r\n    return (\r\n        <div style={{ width:\"100%\" }}>\r\n        <ThemeProvider\r\n          theme={theme}\r\n        >\r\n          <StyledWrapper style={{width:\"100%\", marginBottom:\"25px\" }}>\r\n            <MuiPickersUtilsProvider\r\n              utils={MomentUtils}\r\n              libInstance={moment}\r\n              locale={\"uz-latn\"}\r\n              name=\"year\"\r\n            >  \r\n            <DatePicker\r\n                disableFuture\r\n                inputVariant=\"outlined\"\r\n                openTo=\"year\"\r\n                format=\"DD/MM/yyyy\"\r\n                label=\"Select date\"\r\n                views={[\"year\", \"month\", \"date\"]}\r\n                value={selectedDate}\r\n                onChange={(moment) => handleChange1(Date.parse(moment.format()))}\r\n            />\r\n            </MuiPickersUtilsProvider>\r\n          </StyledWrapper>\r\n        </ThemeProvider>\r\n        \r\n      </div>\r\n    )\r\n}\r\n\r\nexport default DateYearMonthPicker\r\n","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\obektivkaProfileReducer.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\obektivkaBirthReducer.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\obektivkaAcademicReducer.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\obektivkaStateAwardReducer.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\obektivkaMPReducer.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\obektivkaExperienceReducer.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\obektivkaLanguageReducer.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\obektivka\\obektivkaLanguage\\ObektivkaLanguages.js",["575","576","577","578","579","580","581","582","583","584","585","586","587","588","589","590"],"import React, {useState, useRef, useEffect} from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport { withStyles, makeStyles} from '@material-ui/core/styles';\r\nimport Select from '@material-ui/core/Select';\r\nimport { TextValidator, ValidatorForm } from \"react-material-ui-form-validator\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport \"../../../styles/LanguageForm.css\";\r\nimport { getLanguagEN, getLanguagRU, getLanguagUZ, saveLanguage } from '../../../stores/actions/languagesAction';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport Button from '@material-ui/core/Button';\r\nimport { saveObektivkaLanguages } from '../../../stores/actions/obektivkaLanguageAction';\r\nimport \"date-fns\";\r\nfunction ObektivkaLanguages() {\r\n    \r\n    const formRef = useRef();\r\n    const { t, i18n } = useTranslation();\r\n    const languages = useSelector(state => state.obektivkaLanguageReducer.languages)\r\n    const languageUZ = useSelector(state => state.languagesReducer.languageUZ)\r\n    const languageRU = useSelector(state => state.languagesReducer.languageRU)\r\n    const languageEN = useSelector(state => state.languagesReducer.languageEN)\r\n    const dispatch = useDispatch();\r\n    const {control } = useForm();\r\n    const [selectedLanguage, setSelectedLanguage] = useState(null);\r\n    const [language, setLanguage] = useState();\r\n    console.log(\"LANGSGGSGSG\", languages);\r\n    useEffect(() => {\r\n        dispatch(getLanguagUZ())\r\n        \r\n    }, [])\r\n    useEffect(() => {\r\n        dispatch(getLanguagRU())\r\n    }, [])\r\n    useEffect(() => {\r\n        dispatch(getLanguagEN())\r\n    }, [])\r\n    \r\n    console.log(\"selected Language>>>\", selectedLanguage);\r\n    console.log(\"EN\", languageEN);\r\n    \r\n    const handleChange = (e) =>{\r\n        console.log(\"onchangeLang>>>\", e.target.value);\r\n        const {name,value} = e.target\r\n         language.id=selectedLanguage.id\r\n        language.name = selectedLanguage.name\r\n          setLanguage(language)\r\n          \r\n    }\r\n    console.log(\"LANGUAGE\", language);\r\n    const onSubmit = (e) =>{\r\n        e.preventDefault()\r\n        dispatch(saveObektivkaLanguages(selectedLanguage))\r\n        e.target.reset()\r\n        setSelectedLanguage(null)\r\n        setLanguage({})\r\n    }\r\n\r\n    return (\r\n        <div className=\"obektivka__container\">\r\n            <ValidatorForm\r\n                ref={formRef}\r\n                className=\"obektivka__form\" id=\"obektivka_form1\" onSubmit={onSubmit}\r\n                onError={(errors) => console.log(errors)}\r\n                noValidate\r\n            >     \r\n               \r\n                <div className=\"obektivka__inputs\">\r\n                <Controller\r\n                        render = {({onChange, value}) =>\r\n                            <Autocomplete\r\n                                valiant=\"outlined\"\r\n                                options={i18n.language===\"uz\" ? languageUZ : i18n.language===\"ru\" ? languageRU : languageEN}\r\n                                className=\"language__autocomlete\"\r\n                                getOptionLabel={(option) => option.name}\r\n                                width=\"100%\"\r\n                                id={\"language\"}\r\n                                required\r\n                                name={\"language\"}\r\n                                value={selectedLanguage}\r\n                                onChange={((e, newValue)=>{\r\n                                    setSelectedLanguage(newValue)\r\n                                })\r\n                                }\r\n                                renderInput={(params) => (\r\n                                <TextField {...params} label={t(\"autocomplete_language\")} variant=\"outlined\" margin=\"normal\" />\r\n                                )}\r\n                            />\r\n                        }\r\n                    name=\"language\"\r\n                    control={control}\r\n                    rules= {{required: true}}\r\n                    />  \r\n                    </div>\r\n                <Button variant=\"contained\" style={{backgroundColor:\"green\"}} type=\"submit\">Save</Button>\r\n            </ValidatorForm>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ObektivkaLanguages\r\n","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\obektivkaLanguageAction.js",["591","592","593","594","595","596"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\obektivka\\obektivkaMP\\ObektivkaMP.js",["597","598","599","600","601"],"import React, {useState, useRef} from 'react'\r\nimport { withStyles, makeStyles} from '@material-ui/core/styles';\r\nimport { TextValidator, ValidatorForm } from \"react-material-ui-form-validator\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { saveObektivkaMP } from '../../../stores/actions/obektivkaMPAction';\r\nimport \"date-fns\";\r\nimport Button from '@material-ui/core/Button';\r\nimport MyDatePicker from '../../datePicker/MyDatePicker';\r\nimport  \"../../../styles/ObektivkaFields.css\"\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\n\r\n  const ValidationTextField = withStyles({\r\n    root: {\r\n      '& input:valid + fieldset': {\r\n        borderColor: '#00ba5a',\r\n        borderWidth: 2,\r\n      },\r\n      '& input:invalid + fieldset': {\r\n        borderColor: 'ff1100',\r\n        borderWidth: 2,\r\n      },\r\n      '& input:valid:focus + fieldset': {\r\n        borderLeftWidth: 6,\r\n        padding: '8px !important', // override inline-style\r\n      },\r\n    },\r\n  })(TextValidator);\r\n\r\nfunction ObektivkaMP() {\r\n    const {control } = useForm();\r\n    const { t } = useTranslation();\r\n    const dispatch = useDispatch();\r\n    const formRef = useRef();\r\n    const state_awards = useSelector(state => state.obektivkaStateAwardReducer.state_awards)\r\n    const [obektivka, setObektivka] = useState()\r\n    \r\n  var initialDate = Date.parse(new Date());\r\n  const [mpStart, setMpStart] = useState(initialDate);\r\n  const [mpEnd, setMpEnd] = useState(initialDate); \r\n  const [checked, setChecked] = useState(false)\r\n  const [isChecked, setIsChecked] = useState(false)\r\n  const [disabled, setDisabled] = useState(false)\r\n  \r\n    const handleCheck1 =()=>{\r\n      setIsChecked(!isChecked);\r\n      setDisabled(!disabled)\r\n      {isChecked ? (\r\n        setObektivka({\r\n        ...obektivka,\r\n        ...{isMp:false}\r\n      })\r\n      ):(\r\n        setObektivka({\r\n          ...obektivka,\r\n          ...{isMp:true, mpEnd:\"\", mpStart:\"\"}\r\n        })\r\n      )}\r\n    }\r\n      const handleCheck2 =()=>{\r\n        setChecked(!checked);\r\n          {checked ? (\r\n            setObektivka({\r\n            ...obektivka,\r\n            ...{toNow:\"\"}\r\n          })\r\n          ):(\r\n            setObektivka({\r\n              ...obektivka,\r\n              ...{toNow:\"to Present\", mpEnd:\"\"}\r\n            })\r\n          )}\r\n          \r\n        }\r\n    \r\n    \r\n      const handleChange1 = (date) => {\r\n        setMpStart(date)\r\n        setObektivka({\r\n          ...obektivka,\r\n          ...{mpStart:date}\r\n        })\r\n      };\r\n        \r\n    const handleChange2 = (date) => {\r\n      setMpEnd(date);\r\n      !checked ? (\r\n        setObektivka({\r\n            ...obektivka,\r\n            ...{mpEnd:date}\r\n          })\r\n      ):(\r\n        setObektivka({\r\n          ...obektivka,\r\n          ...{mpEnd:null}\r\n        })\r\n      )\r\n     \r\n      };\r\n \r\n    const handleInputChange = (event) =>{\r\n      setObektivka({\r\n        ...obektivka,\r\n        ...{[event.target.name]: event.target.value}\r\n      })\r\n    }\r\n    \r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveObektivkaMP(obektivka))\r\n        // e.target.reset();\r\n    }\r\n\r\n    return (\r\n        <div className=\"obektivka__container\">\r\n            <ValidatorForm\r\n                ref={formRef}\r\n                className=\"obektivka__form\" id=\"obektivka_form1\" onSubmit={onSubmit}\r\n                onError={(errors) => console.log(errors)}\r\n                noValidate\r\n            >     \r\n               \r\n                <div className=\"obektivka__inputs\">\r\n                    <ValidationTextField\r\n                        style={{marginBottom:\"30px\"}}\r\n                        className={\"profileInfoF\"}\r\n                        label=\"MP Position\"\r\n                        required\r\n                        placeholder=\"Mehnat shuxrati\"\r\n                        multiline\r\n                        disabled={disabled}\r\n                        defaultValue={obektivka?.mpPosition}\r\n                        value={obektivka?.mpPosition}\r\n                        onChange={e => handleInputChange(e)}\r\n                        variant=\"outlined\"\r\n                        id=\"mpPosition\"\r\n                        name=\"mpPosition\"\r\n                        validators={!isChecked ? [\"required\"] : []}\r\n                        errorMessages={!isChecked ? [\"Award name is required\"]:[]}\r\n                    />\r\n                    <Controller\r\n                        render={({onChange, value}) =>\r\n                        <FormGroup>\r\n                        <FormControlLabel\r\n                            control={<Switch checked={isChecked} color=\"primary\" \r\n                            name=\"isMpMembership\" \r\n                            onChange={(e)=>handleCheck1(!isChecked)} \r\n                            value={isChecked}\r\n                            />}\r\n                            label=\"A'zo emas\"\r\n                    />\r\n                   </FormGroup>\r\n                   }\r\n                   name=\"isMpMembership\"\r\n                   control={control}\r\n            /> \r\n                   <MyDatePicker \r\n                        startDate={mpStart} \r\n                        endDate={mpEnd} \r\n                        checked={checked} \r\n                        handleChange1={handleChange1} \r\n                        handleChange2={handleChange2} \r\n                        handleCheck={handleCheck2}\r\n                        disabled={disabled}\r\n                        />\r\n                </div>  \r\n                <Button variant=\"contained\" style={{backgroundColor:\"green\"}} type=\"submit\">Save</Button>\r\n            </ValidatorForm>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ObektivkaMP\r\n","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\obektivka\\obektivkaExperience\\ObektivkaExperience.js",["602","603","604","605"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\obektivkaBirthAction.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\obektivka\\obektivkaAcademic\\ObektivkaAcademic.js",["606","607","608","609","610","611","612","613","614"],"import React, {useState, useRef} from 'react'\r\nimport { withStyles, makeStyles} from '@material-ui/core/styles';\r\nimport { TextValidator, ValidatorForm } from \"react-material-ui-form-validator\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { saveObektivkaAcademic } from '../../../stores/actions/obektivkaAcademicAction';\r\nimport \"date-fns\";\r\nimport Button from '@material-ui/core/Button';\r\nimport DateYearMonthPicker from '../../datePicker/DateYearMonthPicker';\r\nimport  \"../../../styles/ObektivkaFields.css\"\r\nimport SingleYearPicker from '../../datePicker/SingleYearPicker';\r\n\r\n  const ValidationTextField = withStyles({\r\n    root: {\r\n      '& input:valid + fieldset': {\r\n        borderColor: '#00ba5a',\r\n        borderWidth: 2,\r\n      },\r\n      '& input:invalid + fieldset': {\r\n        borderColor: 'ff1100',\r\n        borderWidth: 2,\r\n      },\r\n      '& input:valid:focus + fieldset': {\r\n        borderLeftWidth: 6,\r\n        padding: '8px !important', // override inline-style\r\n      },\r\n    },\r\n  })(TextValidator);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\nfunction ObektivkaAcademic() {\r\n    const { register, errors, handleSubmit, control, formState } = useForm();\r\n    const { t } = useTranslation();\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n    const formRef = useRef();\r\n    const obektivkaAcademic = useSelector(state => state.obektivkaProfileReducer.obektivkaAcademic)\r\n    const [obektivka, setObektivka] = useState()\r\n    const [isChecked, setIsChecked] = useState(false);\r\n    const initialDate = Date.parse(new Date());\r\n    const [selectedDate, setSelectedDate] = useState(initialDate)\r\n\r\n    const handleChange1 =(date)=>{\r\n        setSelectedDate(date)\r\n    }\r\n  \r\n    const handleChecked = (event) => {\r\n      setIsChecked(event.target.checked);\r\n    };\r\n    console.log(\"checked\", isChecked);\r\n    \r\n    const handleInputChange = (event) =>{\r\n      setObektivka({\r\n        ...obektivka,\r\n        ...{[event.target.name]: event.target.value, \r\n            graduated_when:selectedDate,\r\n          graduation_shift: isChecked}\r\n      })\r\n    }\r\n    \r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveObektivkaAcademic(obektivka))\r\n        // e.target.reset();\r\n    }\r\n\r\n    return (\r\n        <div className=\"obektivka__container\">\r\n            <ValidatorForm\r\n                ref={formRef}\r\n                className=\"obektivka__form\" id=\"obektivka_form1\" onSubmit={onSubmit}\r\n                onError={(errors) => console.log(errors)}\r\n                noValidate\r\n            >     \r\n               \r\n                <div className=\"obektivka__inputs\">\r\n                    <ValidationTextField\r\n                        style={{marginBottom:\"30px\"}}\r\n                        className={\"profileInfoF\"}\r\n                        label=\"Education degree\"\r\n                        required\r\n                        placeholder=\"Bachelor's\"\r\n                        multiline\r\n                        defaultValue={obektivka?.degree}\r\n                        value={obektivka?.degree}\r\n                        onChange={e => handleInputChange(e)}\r\n                        variant=\"outlined\"\r\n                        id=\"degree\"\r\n                        name=\"degree\"\r\n                        validators={[\"required\"]}\r\n                        errorMessages={[\"Degree is required\"]}\r\n                    /> \r\n                    <SingleYearPicker handleChange1={handleChange1} takenYear={selectedDate}/>\r\n                    <ValidationTextField\r\n                        style={{marginBottom:\"30px\"}}\r\n                        className={\"profileInfoF\"}\r\n                        label=\"Institution\"\r\n                        // required\r\n                        placeholder=\"Harvard\"\r\n                        multiline\r\n                        // defaultValue={obektivka?.currentCompany}\r\n                        value={obektivka?.graduated_where}\r\n                        onChange={e => handleInputChange(e)}\r\n                        variant=\"outlined\"\r\n                        id=\"graduated_where\"\r\n                        name=\"graduated_where\"\r\n                        validators={[\"required\"]} \r\n                        errorMessages={[\"Institution name is required\"]}\r\n                    />\r\n                     <FormControlLabel\r\n                          control={\r\n                            <Checkbox\r\n                              checked={isChecked}\r\n                              onChange={handleChecked}\r\n                              name=\"graduation_shift\"\r\n                              color=\"primary\"\r\n                              value={isChecked}\r\n                            />\r\n                          }\r\n                          label={isChecked === true ? \"Sirtqi\" : \"Kunduzgi\"}\r\n                        />\r\n                    <ValidationTextField\r\n                        style={{marginBottom:\"30px\"}}\r\n                        className={\"profileInfoF\"}\r\n                        label=\"Speciality by diploma\"\r\n                        required\r\n                        placeholder=\"Economist\"\r\n                        multiline\r\n                        // defaultValue={obektivka?.currentPosition}\r\n                        value={obektivka?.diploma_speciality}\r\n                        onChange={handleInputChange}\r\n                        variant=\"outlined\"\r\n                        id=\"diploma_speciality\"\r\n                        name=\"diploma_speciality\"\r\n                        validators={[\"required\"]} \r\n                        errorMessages={[\"Speciality is required\"]}\r\n                    />\r\n                    <ValidationTextField\r\n                        style={{marginBottom:\"30px\"}}\r\n                        className={\"profileInfoF\"}\r\n                        label=\"Academic degree\"\r\n                        required\r\n                        placeholder=\"Ph.D. in Economics\"\r\n                        multiline\r\n                        // defaultValue={obektivka?.currentPosition}\r\n                        value={obektivka?.academic_degree}\r\n                        onChange={handleInputChange}\r\n                        variant=\"outlined\"\r\n                        id=\"academic_degree\"\r\n                        name=\"academic_degree\"\r\n                        validators={[\"required\"]} \r\n                        errorMessages={[\"Academic degree is required\"]}\r\n                    />\r\n                    <ValidationTextField\r\n                        style={{marginBottom:\"30px\"}}\r\n                        className={\"profileInfoF\"}\r\n                        label=\"Academic title\"\r\n                        required\r\n                        placeholder=\"Professor\"\r\n                        multiline\r\n                        // defaultValue={obektivka?.currentPosition}\r\n                        value={obektivka?.academic_title}\r\n                        onChange={handleInputChange}\r\n                        variant=\"outlined\"\r\n                        id=\"academic_title\"\r\n                        name=\"academic_title\"\r\n                        validators={[\"required\"]} \r\n                        errorMessages={[\"Academic title is required\"]}\r\n                    />\r\n                    <ValidationTextField\r\n                        style={{marginBottom:\"30px\"}}\r\n                        className={\"profileInfoF\"}\r\n                        label=\"Academic title\"\r\n                        required\r\n                        placeholder=\"Professor\"\r\n                        multiline\r\n                        // defaultValue={obektivka?.currentPosition}\r\n                        value={obektivka?.military_title}\r\n                        onChange={handleInputChange}\r\n                        variant=\"outlined\"\r\n                        id=\"military_title\"\r\n                        name=\"military_title\"\r\n                        validators={[\"required\"]} \r\n                        errorMessages={[\"Academic title is required\"]}\r\n                    />\r\n                </div>  \r\n                <Button variant=\"contained\" style={{backgroundColor:\"green\"}} type=\"submit\">Save</Button>\r\n            </ValidatorForm>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ObektivkaAcademic\r\n","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\obektivkaStateAwardAction.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\obektivka\\obektivkaStateAwards\\ObektivkaStateAwards.js",["615","616","617"],"import React, {useState, useRef} from 'react'\r\nimport { withStyles, makeStyles} from '@material-ui/core/styles';\r\nimport { TextValidator, ValidatorForm } from \"react-material-ui-form-validator\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { saveObektiveAwards } from '../../../stores/actions/obektivkaStateAwardAction';\r\nimport \"date-fns\";\r\nimport Button from '@material-ui/core/Button';\r\nimport  \"../../../styles/ObektivkaFields.css\"\r\nimport SingleYearPicker from '../../datePicker/SingleYearPicker';\r\n\r\n  const ValidationTextField = withStyles({\r\n    root: {\r\n      '& input:valid + fieldset': {\r\n        borderColor: '#00ba5a',\r\n        borderWidth: 2,\r\n      },\r\n      '& input:invalid + fieldset': {\r\n        borderColor: 'ff1100',\r\n        borderWidth: 2,\r\n      },\r\n      '& input:valid:focus + fieldset': {\r\n        borderLeftWidth: 6,\r\n        padding: '8px !important', // override inline-style\r\n      },\r\n    },\r\n  })(TextValidator);\r\n\r\nfunction ObektivkaStateAwards() {\r\n    const { t } = useTranslation();\r\n    const dispatch = useDispatch();\r\n    const formRef = useRef();\r\n    const state_awards = useSelector(state => state.obektivkaStateAwardReducer.state_awards)\r\n    const [obektivka, setObektivka] = useState([])\r\n    var initialDate = Date.parse(new Date());\r\n    const [selectedYear, setSelectedYear] = useState(initialDate)\r\n\r\n    const handleChange1 =(date)=>{\r\n      setSelectedYear(date)\r\n    }\r\n  \r\n \r\n    const handleInputChange = (event) =>{\r\n      setObektivka({\r\n        ...obektivka,\r\n        ...{[event.target.name]: event.target.value, \r\n            awardYear:selectedYear}\r\n      })\r\n    }\r\n    \r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveObektiveAwards(obektivka))\r\n        // e.target.reset();\r\n    }\r\n\r\n    return (\r\n        <div className=\"obektivka__container\">\r\n            <ValidatorForm\r\n                ref={formRef}\r\n                className=\"obektivka__form\" id=\"obektivka_form1\" onSubmit={onSubmit}\r\n                onError={(errors) => console.log(errors)}\r\n                noValidate\r\n            >     \r\n               \r\n                <div className=\"obektivka__inputs\">\r\n                    <ValidationTextField\r\n                        style={{marginBottom:\"30px\"}}\r\n                        className={\"profileInfoF\"}\r\n                        label=\"State Award\"\r\n                        required\r\n                        placeholder=\"Mehnat shuxrati\"\r\n                        multiline\r\n                        defaultValue={obektivka?.awardName}\r\n                        value={obektivka?.awardName}\r\n                        onChange={e => handleInputChange(e)}\r\n                        variant=\"outlined\"\r\n                        id=\"awardName\"\r\n                        name=\"awardName\"\r\n                        validators={[\"required\"]}\r\n                        errorMessages={[\"Award name is required\"]}\r\n                    /> \r\n                   <SingleYearPicker takenYear={selectedYear} handleChange1={handleChange1} />\r\n                    \r\n                </div>  \r\n                <Button variant=\"contained\" style={{backgroundColor:\"green\"}} type=\"submit\">Save</Button>\r\n            </ValidatorForm>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ObektivkaStateAwards\r\n","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\pages\\JobSearch.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\JobSearchMain.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\postjobReducer.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\technicalSkillsReducer.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\languagesReducer.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\BannerCandidates.js",["618","619","620"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\PostViewCard.js",["621"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\loginAndregister\\SignUp.js",["622","623"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\technicalSkills\\TechSkills2.js",["624","625","626","627","628","629","630"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\languagesAction.js",["631","632","633","634","635","636"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\contactInfoAction.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\JobSearchList.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\obektivkaRelativesReducer.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\obektivkaRelativesAction.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\obektivka\\obektivkaRelatives\\ObektivkaRelatives.js",["637","638","639","640","641","642","643","644"],"import React, {useState, useRef} from 'react';\r\nimport  \"../../../styles/ObektivkaFields.css\"\r\nimport ImageUploader from '../../resumeBuilder/imageUploader/ImageUploader';\r\nimport { withStyles, makeStyles} from '@material-ui/core/styles';\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { saveObektivkaRelatives } from '../../../stores/actions/obektivkaRelativesAction';\r\nimport \"date-fns\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { TextValidator, ValidatorForm } from \"react-material-ui-form-validator\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport SingleYearPicker from '../../datePicker/SingleYearPicker';\r\n\r\n  const ValidationTextField = withStyles({\r\n    root: {\r\n      '& input:valid + fieldset': {\r\n        borderColor: '#00ba5a',\r\n        borderWidth: 2,\r\n      },\r\n      '& input:invalid + fieldset': {\r\n        borderColor: 'ff1100',\r\n        borderWidth: 2,\r\n      },\r\n      '& input:valid:focus + fieldset': {\r\n        borderLeftWidth: 6,\r\n        padding: '8px !important', // override inline-style\r\n      },\r\n    },\r\n  })(TextValidator);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst options = [\r\n    {id:\"father\", name:\"Otasi\"},\r\n    {id:\"mother\", name:\"Onasi\"},\r\n    {id:\"elBrother\", name:\"Akasi\"},\r\n    {id:\"ltBrother\", name:\"Ukasi\"},\r\n    {id:\"elSister\", name:\"Opasi\"},\r\n    {id:\"ltSister\", name:\"Singlisi\"},\r\n    {id:\"son\", name:\"O'g'li\"},\r\n    {id:\"daughter\", name:\"Qizi\"},\r\n    {id:\"father-in-law\", name:\"Qaynotasi\"},\r\n    {id:\"mother-in-law\", name:\"Qaynonasi\"},\r\n]\r\n\r\nfunction ObektivkaRelatives() {\r\n\r\n    const { register, errors, handleSubmit, control, formState } = useForm();\r\n    const { t } = useTranslation();\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n    const formRef = useRef();\r\n    const relatives = useSelector(state => state.obektivkaRelativesReducer.relatives)\r\n    const [obektivka, setObektivka] = useState()\r\n    const [isChecked, setIsChecked] = useState(false);\r\n    const [isChecked2, setIsChecked2] = useState(false);\r\n    const [checked, setChecked] = useState(false);\r\n    const initialDate = Date.parse(new Date());\r\n    const [selectedDate, setSelectedDate] = useState(initialDate)\r\n    const [dethDate, setDethDate] = useState(initialDate)\r\n    const [selectedRelative, setSelectedRelative] = useState()\r\n  // setObektivka(obektiv)\r\n    const handleChange1 =(date)=>{\r\n        setSelectedDate(date)\r\n    }\r\n    const handleChange2 =(date)=>{\r\n        if(checked){\r\n            setDethDate(date)\r\n        }else{\r\n            setDethDate(\"\")\r\n        }\r\n        \r\n    }\r\n  \r\n    const handleChecked1 = (event) => {\r\n      setIsChecked(event.target.checked); //isretierd\r\n    };\r\n    const handleChecked5 = (event) => {\r\n      setChecked(event.target.checked); //isDead\r\n    };\r\n    const handleChecked3 = (event) => {\r\n      setIsChecked2(event.target.checked); //isJuiii\r\n    };\r\n    \r\n   console.log(\"cheked\", checked);\r\n    console.log(\"isCheked1\", isChecked);\r\n    console.log(\"isCheked2\", isChecked2);\r\n    const handleInputChange = (event) =>{\r\n        // let relativeName = selectedRelative.name\r\n     \r\n        setObektivka({\r\n          ...obektivka,\r\n          ...{[event.target.name]: event.target.value, \r\n            birthDate:selectedDate, relative: selectedRelative,\r\n          isDead: checked, isRetired: isChecked, isJuvenile:isChecked2, dethDate:dethDate}\r\n        })\r\n        // const {name, value} = event.target\r\n        //   obektiv[name]= value\r\n          \r\n      }\r\n      \r\n      const onSubmit = (e) => {\r\n          e.preventDefault()\r\n          dispatch(saveObektivkaRelatives(obektivka))\r\n          // e.target.reset();\r\n      }\r\n\r\n    return (\r\n        <div className=\"obektivka__container\">\r\n            <ValidatorForm\r\n                ref={formRef}\r\n                className=\"obektivka__form\" id=\"obektivka_form1\" onSubmit={onSubmit}\r\n                onError={(errors) => console.log(errors)}\r\n                noValidate\r\n            >     \r\n                <div className=\"obektivka__inputs\">\r\n                    <ValidationTextField\r\n                        style={{marginBottom:\"30px\"}}\r\n                        className={\"profileInfoF\"}\r\n                        label=\"Full name\"\r\n                        required\r\n                        placeholder=\"Sanjar Juraev\"\r\n                        multiline\r\n                        defaultValue={obektivka?.fullName}\r\n                        value={obektivka?.fullName}\r\n                        onChange={e => handleInputChange(e)}\r\n                        variant=\"outlined\"\r\n                        id=\"fullName\"\r\n                        name=\"fullName\"\r\n                        validators={[\"required\"]}\r\n                        errorMessages={[\"Full name is required\"]}\r\n                    />\r\n                    <Controller\r\n                        render = {({onChange, value}) =>\r\n                            <Autocomplete\r\n                                valiant=\"outlined\"\r\n                                options={options}\r\n                                className=\"language__autocomlete\"\r\n                                getOptionLabel={(option) => option.name}\r\n                                width=\"100%\"\r\n                                id={\"relative\"}\r\n                                required\r\n                                name={\"relative\"}\r\n                                value={selectedRelative}\r\n                                onChange={((e, newValue)=>{\r\n                                    setSelectedRelative(newValue)\r\n                                })\r\n                                }\r\n                                renderInput={(params) => (\r\n                                <TextField {...params} label={\"Select relative\"} variant=\"outlined\" margin=\"normal\" />\r\n                                )}\r\n                            />\r\n                        }\r\n                    name=\"relative\"\r\n                    control={control}\r\n                    rules= {{required: true}}\r\n                    />  \r\n                    <SingleYearPicker handleChange1={handleChange1} takenYear={selectedDate}/>\r\n                    <ValidationTextField\r\n                       style={{marginBottom:\"30px\"}}\r\n                       className={\"profileInfoF\"}\r\n                      label=\"Birth region\"\r\n                      required\r\n                      placeholder=\"Namangan\"\r\n                      multiline\r\n                      value={obektivka?.birthRegion}\r\n                        onChange={handleInputChange}\r\n                        variant=\"outlined\"\r\n                        id=\"birthRegion\"\r\n                        name=\"birthRegion\"\r\n                        validators={[\"required\"]} \r\n                        errorMessages={[\"This field is required\"]}\r\n                    />\r\n                    <ValidationTextField\r\n                       style={{marginBottom:\"30px\"}}\r\n                       className={\"profileInfoF\"}\r\n                      label=\"Birth city or district\"\r\n                      required\r\n                      placeholder=\"Mingbuloq\"\r\n                      multiline\r\n                      value={obektivka?.birthCityOrDistrict}\r\n                        onChange={handleInputChange}\r\n                        variant=\"outlined\"\r\n                        id=\"birthCityOrDistrict\"\r\n                        name=\"birthCityOrDistrict\"\r\n                        validators={[\"required\"]} \r\n                        errorMessages={[\"This field is required\"]}\r\n                    />\r\n                    <Controller\r\n                        render = {({onChange, value}) =>\r\n                          <FormControlLabel\r\n                          control={\r\n                            <Checkbox\r\n                              checked={isChecked2}\r\n                              onChange={handleChecked3}\r\n                              name=\"isJuvenile\"\r\n                              color=\"primary\"\r\n                              value={isChecked2}\r\n                            />\r\n                          }\r\n                          label=\"Voyaga yetmagan\"\r\n                        />\r\n                      }\r\n                      name=\"isJuvenile\"\r\n                      control={control}\r\n                      rules= {{required: true}}\r\n                      />  \r\n                        \r\n                        {\r\n                          isChecked2===false ? (\r\n                            <>\r\n                            <Controller\r\n                        render = {({onChange, value}) =>\r\n                              <FormControlLabel\r\n                          control={\r\n                            <Checkbox\r\n                              checked={isChecked}\r\n                              onChange={handleChecked1}\r\n                              name=\"isRetired\"\r\n                              color=\"primary\"\r\n                              value={isChecked}\r\n                            />\r\n                          }\r\n                          label=\"Nafaqada\"\r\n                        />\r\n                      }\r\n                      name=\"isRetired\"\r\n                      control={control}\r\n                      rules= {{required: true}}\r\n                      />\r\n\r\n                    <ValidationTextField\r\n                        style={{marginBottom:\"30px\"}}\r\n                        className={\"profileInfoF\"}\r\n                        label=\"Company\"\r\n                        required\r\n                        placeholder=\"Amazon\"\r\n                        multiline\r\n                        defaultValue={obektivka?.currentCompany}\r\n                        value={obektivka?.currentCompany}\r\n                        onChange={e => handleInputChange(e)}\r\n                        variant=\"outlined\"\r\n                        id=\"currentCompany\"\r\n                        name=\"currentCompany\"\r\n                        validators={isChecked2===false ?[\"required\"]:[]} \r\n                        errorMessages={isChecked2===false ?[\"Company name is required\"] : []}\r\n                    />\r\n                    <ValidationTextField\r\n                        style={{marginBottom:\"30px\"}}\r\n                        className={\"profileInfoF\"}\r\n                        label=\"Position\"\r\n                        required\r\n                        placeholder=\"Front-end Developer\"\r\n                        multiline\r\n                        defaultValue={obektivka?.currentPosition}\r\n                        value={obektivka?.currentPosition}\r\n                        onChange={handleInputChange}\r\n                        variant=\"outlined\"\r\n                        id=\"currentPosition\"\r\n                        name=\"currentPosition\"\r\n                        validators={isChecked2===false ?[\"required\"]:[]} \r\n                        errorMessages={isChecked2===false ?[\"Company name is required\"] : []}\r\n                    />\r\n                    \r\n                            </>\r\n                          ):\"\"\r\n                        }        \r\n                         <Controller\r\n                        render = {({onChange, value}) =>\r\n                    <FormControlLabel\r\n                          control={\r\n                            <Checkbox\r\n                              checked={checked}\r\n                              onChange={handleChecked5}\r\n                              name=\"isDead\"\r\n                              color=\"primary\"\r\n                              value={checked}\r\n                            />\r\n                          }\r\n                          label=\"Vafot etgan\"\r\n                        />\r\n                      }\r\n                      name=\"dead\"\r\n                      control={control}\r\n                      rules= {{required: true}}\r\n                      />\r\n                        {checked ===true?(\r\n                            <SingleYearPicker handleChange1={handleChange2} takenYear={dethDate}/>\r\n                        ):\"\"}\r\n                      {checked ===false ? (\r\n                          <>\r\n                          <ValidationTextField\r\n                          style={{marginBottom:\"30px\"}}\r\n                          className={\"profileInfoF\"}\r\n                         label=\"Region\"\r\n                       //   required\r\n                       display={checked===true ? \"none\" : \"block\"}\r\n                         placeholder=\"Namangan\"\r\n                         multiline\r\n                         value={obektivka?.region}\r\n                           onChange={handleInputChange}\r\n                           variant=\"outlined\"\r\n                           id=\"region\"\r\n                           name=\"region\"\r\n                           disabled={checked===true ? true : false}\r\n                           validators={checked===false ?[\"required\"] : []} \r\n                           errorMessages={checked===false ?[\"This field is required\"]:[]}\r\n                       />\r\n                       <ValidationTextField\r\n                          style={{marginBottom:\"30px\"}}\r\n                          className={\"profileInfoF\"}\r\n                         label=\"City or District\"\r\n                       //   required\r\n                       display={checked===true ? \"none\" : \"block\"}\r\n                         placeholder=\"Mingbuloq\"\r\n                         multiline\r\n                         value={obektivka?.cityOrDistrict}\r\n                           onChange={handleInputChange}\r\n                           variant=\"outlined\"\r\n                           id=\"cityOrDistrict\"\r\n                           name=\"cityOrDistrict\"\r\n                           disabled={checked===true ? true : false}\r\n                           validators={checked===false ?[\"required\"] : []} \r\n                           errorMessages={checked===false ?[\"This field is required\"]:[]}\r\n                       />\r\n                       <ValidationTextField\r\n                          style={{marginBottom:\"30px\"}}\r\n                          className={\"profileInfoF\"}\r\n                         label=\"Street and house\"\r\n                         display={checked===true ? \"none\" : \"block\"}\r\n                       //   required\r\n                         placeholder=\"123 Main Street\"\r\n                         multiline\r\n                         value={obektivka?.streetAndHouse}\r\n                           onChange={handleInputChange}\r\n                           variant=\"outlined\"\r\n                           id=\"streetAndHouse\"\r\n                           name=\"streetAndHouse\"\r\n                           disabled={checked===true ? true : false}\r\n                           validators={checked===false ?[\"required\"] : []} \r\n                           errorMessages={checked===false ?[\"This field is required\"]:[]}\r\n                       />\r\n                       </>\r\n                      ):\"\"}  \r\n                    \r\n                </div>  \r\n                <Button variant=\"contained\" style={{backgroundColor:\"green\"}} type=\"submit\">Save</Button>\r\n            </ValidatorForm>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ObektivkaRelatives\r\n","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\searchFormAction.js",["645","646"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\obektivka\\obektivkaImageUploader\\ObektivkaImageUploader.js",["647","648"],"import React, {useState} from 'react';\r\nimport \"antd/dist/antd.css\";\r\nimport { Upload, message } from \"antd\";\r\nimport ImgCrop from \"antd-img-crop\";\r\nimport { LoadingOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\n\r\nfunction getBase64(img, callback) {\r\n    const reader = new FileReader();\r\n    reader.addEventListener(\"load\", () => callback(reader.result));\r\n    reader.readAsDataURL(img);\r\n  }\r\n  \r\n  // function beforeUpload(file) {\r\n  //   const isJPG = file.type === \"image/jpeg\";\r\n  //   const isPNG =  file.type === \"image/png\";\r\n  //   if (!isJPG && !isPNG) {\r\n  //     message.error(\"You can only upload JPG/PNG file!\");\r\n  //   }\r\n  //   // const isLt1M = file.size / 1024 <2;\r\n  //   // if (!isLt1M) {\r\n  //   //   message.error(\"Image must smaller than 1MB!\");\r\n  //   // }\r\n  //   return (isJPG || isPNG);\r\n  // }\r\n \r\nfunction ObektivkaImageUploader() {\r\n    const [loading, setLoading] = useState(false);\r\n    const [ imageUrl, setImageUrl] = useState(\"\");\r\n    const [attachmentId, setAttachmentId] = useState(\"\")\r\n\r\n    const PATH_PREFIX = \"http://localhost:\"\r\nconst beforeUpload =(file) =>  {\r\n    \r\n    if (file.type !== \"image/png\" && file.type !== \"image/jpeg\") {\r\n        message.error(\"You can only upload JPG or PNG file!\")\r\n    }else{\r\n     return file.type === \"image/png\" || file.type === \"image/jpeg\";\r\n    }\r\n};\r\n\r\nconsole.log(\"image url\", imageUrl);\r\n    const handleChange = (info) => {\r\n        if (info.file.status === \"uploading\") {\r\n          setLoading(!loading);\r\n        }\r\n        if (info.file.status === \"done\") {\r\n          // Get this url from response in real world.\r\n          getBase64(info.file.originFileObj, (imageUrl) =>{\r\n           setImageUrl(imageUrl)\r\n           setLoading(!loading)}\r\n          );\r\n        }\r\n      };\r\n\r\n      const onPreview = async (file) => {\r\n        let src = file.url;\r\n        if (!src) {\r\n          src = await new Promise((resolve) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file.originFileObj);\r\n            reader.onload = () => resolve(reader.result);\r\n          });\r\n        }\r\n        const image = new Image();\r\n        image.src = src;\r\n        const imgWindow = window.open(src);\r\n        imgWindow.document.write(image.outerHTML);\r\n      };\r\n\r\n      const uploadButton = (\r\n        <div >\r\n          {loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n          <div style={{ marginTop: 8 }}>Upload</div>\r\n        </div>\r\n      );\r\n     const customRequest = (options) => {\r\n        const data = new FormData();\r\n        data.append(\"attachment\", options.file);\r\n        axios({\r\n            url: PATH_PREFIX + \"/api/file/save\",\r\n            method: \"post\",\r\n            data: data,\r\n            headers: {\r\n                \"Content-Type\":\r\n                    \"multipart/form-data; boundary=----WebKitFormBoundaryqTqJIxvkWFYqvP5s\",\r\n                \"X-Requested-With\": \"XMLHttpRequest\",\r\n            },\r\n        }).then((response) => {\r\n           setAttachmentId( response.data.id,\r\n            );\r\n        });\r\n    };\r\n\r\n    return (\r\n        <ImgCrop grid aspect={3/4}>\r\n        <Upload\r\n        style={{width:\"100px\", height:\"133px\"}}\r\n          name=\"avatar\"\r\n          listType=\"picture-card\"\r\n          className=\"avatar-uploader\"\r\n          showUploadList={false}\r\n          action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n          beforeUpload={beforeUpload}\r\n          onChange={handleChange}\r\n          onPreview={onPreview}\r\n        >\r\n          {imageUrl ? (\r\n            <img src={imageUrl} alt=\"avatar\" style={{ width: \"100%\" }} />\r\n          ) : (\r\n            uploadButton\r\n          )}\r\n        </Upload>\r\n      </ImgCrop>\r\n    )\r\n}\r\n\r\nexport default ObektivkaImageUploader\r\n",{"ruleId":"649","severity":1,"message":"650","line":13,"column":8,"nodeType":"651","messageId":"652","endLine":13,"endColumn":19},{"ruleId":"649","severity":1,"message":"653","line":14,"column":8,"nodeType":"651","messageId":"652","endLine":14,"endColumn":23},{"ruleId":"654","replacedBy":"655"},{"ruleId":"656","replacedBy":"657"},{"ruleId":"649","severity":1,"message":"658","line":30,"column":12,"nodeType":"651","messageId":"652","endLine":30,"endColumn":24},{"ruleId":"649","severity":1,"message":"659","line":77,"column":12,"nodeType":"651","messageId":"652","endLine":77,"endColumn":25},{"ruleId":"649","severity":1,"message":"660","line":84,"column":23,"nodeType":"651","messageId":"652","endLine":84,"endColumn":29},{"ruleId":"649","severity":1,"message":"661","line":84,"column":31,"nodeType":"651","messageId":"652","endLine":84,"endColumn":43},{"ruleId":"649","severity":1,"message":"662","line":84,"column":54,"nodeType":"651","messageId":"652","endLine":84,"endColumn":63},{"ruleId":"649","severity":1,"message":"663","line":85,"column":13,"nodeType":"651","messageId":"652","endLine":85,"endColumn":14},{"ruleId":"649","severity":1,"message":"664","line":88,"column":10,"nodeType":"651","messageId":"652","endLine":88,"endColumn":19},{"ruleId":"665","severity":1,"message":"666","line":190,"column":37,"nodeType":"667","endLine":190,"endColumn":50},{"ruleId":"649","severity":1,"message":"668","line":17,"column":31,"nodeType":"651","messageId":"652","endLine":17,"endColumn":42},{"ruleId":"649","severity":1,"message":"669","line":83,"column":7,"nodeType":"651","messageId":"652","endLine":83,"endColumn":14},{"ruleId":"649","severity":1,"message":"670","line":5,"column":22,"nodeType":"651","messageId":"652","endLine":5,"endColumn":32},{"ruleId":"649","severity":1,"message":"671","line":13,"column":8,"nodeType":"651","messageId":"652","endLine":13,"endColumn":14},{"ruleId":"649","severity":1,"message":"662","line":23,"column":54,"nodeType":"651","messageId":"652","endLine":23,"endColumn":63},{"ruleId":"649","severity":1,"message":"672","line":42,"column":11,"nodeType":"651","messageId":"652","endLine":42,"endColumn":18},{"ruleId":"649","severity":1,"message":"673","line":10,"column":10,"nodeType":"651","messageId":"652","endLine":10,"endColumn":15},{"ruleId":"649","severity":1,"message":"674","line":25,"column":17,"nodeType":"651","messageId":"652","endLine":25,"endColumn":25},{"ruleId":"675","severity":1,"message":"676","line":57,"column":6,"nodeType":"677","endLine":57,"endColumn":15,"suggestions":"678"},{"ruleId":"649","severity":1,"message":"679","line":5,"column":9,"nodeType":"651","messageId":"652","endLine":5,"endColumn":20},{"ruleId":"649","severity":1,"message":"680","line":11,"column":8,"nodeType":"651","messageId":"652","endLine":11,"endColumn":24},{"ruleId":"654","replacedBy":"681"},{"ruleId":"656","replacedBy":"682"},{"ruleId":"649","severity":1,"message":"679","line":11,"column":9,"nodeType":"651","messageId":"652","endLine":11,"endColumn":20},{"ruleId":"649","severity":1,"message":"663","line":27,"column":13,"nodeType":"651","messageId":"652","endLine":27,"endColumn":14},{"ruleId":"683","severity":1,"message":"684","line":58,"column":93,"nodeType":"685","messageId":"686","endLine":58,"endColumn":94},{"ruleId":"683","severity":1,"message":"684","line":62,"column":93,"nodeType":"685","messageId":"686","endLine":62,"endColumn":94},{"ruleId":"649","severity":1,"message":"679","line":3,"column":9,"nodeType":"651","messageId":"652","endLine":3,"endColumn":20},{"ruleId":"649","severity":1,"message":"663","line":12,"column":13,"nodeType":"651","messageId":"652","endLine":12,"endColumn":14},{"ruleId":"649","severity":1,"message":"687","line":16,"column":11,"nodeType":"651","messageId":"652","endLine":16,"endColumn":27},{"ruleId":"649","severity":1,"message":"688","line":3,"column":8,"nodeType":"651","messageId":"652","endLine":3,"endColumn":14},{"ruleId":"654","replacedBy":"689"},{"ruleId":"656","replacedBy":"690"},{"ruleId":"691","severity":1,"message":"692","line":36,"column":3,"nodeType":"693","messageId":"694","endLine":36,"endColumn":32,"fix":"695"},{"ruleId":"649","severity":1,"message":"696","line":9,"column":8,"nodeType":"651","messageId":"652","endLine":9,"endColumn":27},{"ruleId":"649","severity":1,"message":"697","line":12,"column":9,"nodeType":"651","messageId":"652","endLine":12,"endColumn":25},{"ruleId":"649","severity":1,"message":"698","line":20,"column":22,"nodeType":"651","messageId":"652","endLine":20,"endColumn":33},{"ruleId":"649","severity":1,"message":"699","line":76,"column":13,"nodeType":"651","messageId":"652","endLine":76,"endColumn":21},{"ruleId":"649","severity":1,"message":"660","line":76,"column":23,"nodeType":"651","messageId":"652","endLine":76,"endColumn":29},{"ruleId":"649","severity":1,"message":"661","line":76,"column":31,"nodeType":"651","messageId":"652","endLine":76,"endColumn":43},{"ruleId":"649","severity":1,"message":"662","line":76,"column":54,"nodeType":"651","messageId":"652","endLine":76,"endColumn":63},{"ruleId":"649","severity":1,"message":"700","line":81,"column":11,"nodeType":"651","messageId":"652","endLine":81,"endColumn":18},{"ruleId":"649","severity":1,"message":"701","line":3,"column":8,"nodeType":"651","messageId":"652","endLine":3,"endColumn":28},{"ruleId":"649","severity":1,"message":"702","line":4,"column":8,"nodeType":"651","messageId":"652","endLine":4,"endColumn":19},{"ruleId":"649","severity":1,"message":"703","line":5,"column":8,"nodeType":"651","messageId":"652","endLine":5,"endColumn":19},{"ruleId":"649","severity":1,"message":"704","line":1,"column":16,"nodeType":"651","messageId":"652","endLine":1,"endColumn":24},{"ruleId":"649","severity":1,"message":"705","line":12,"column":8,"nodeType":"651","messageId":"652","endLine":12,"endColumn":22},{"ruleId":"649","severity":1,"message":"706","line":12,"column":24,"nodeType":"651","messageId":"652","endLine":12,"endColumn":41},{"ruleId":"649","severity":1,"message":"707","line":21,"column":7,"nodeType":"651","messageId":"652","endLine":21,"endColumn":15},{"ruleId":"649","severity":1,"message":"708","line":34,"column":7,"nodeType":"651","messageId":"652","endLine":34,"endColumn":14},{"ruleId":"649","severity":1,"message":"709","line":10,"column":8,"nodeType":"651","messageId":"652","endLine":10,"endColumn":14},{"ruleId":"649","severity":1,"message":"710","line":11,"column":8,"nodeType":"651","messageId":"652","endLine":11,"endColumn":17},{"ruleId":"649","severity":1,"message":"711","line":12,"column":8,"nodeType":"651","messageId":"652","endLine":12,"endColumn":24},{"ruleId":"649","severity":1,"message":"712","line":36,"column":9,"nodeType":"651","messageId":"652","endLine":36,"endColumn":16},{"ruleId":"649","severity":1,"message":"713","line":38,"column":9,"nodeType":"651","messageId":"652","endLine":38,"endColumn":18},{"ruleId":"714","severity":1,"message":"715","line":55,"column":5,"nodeType":"716","messageId":"717","endLine":65,"endColumn":7},{"ruleId":"649","severity":1,"message":"709","line":10,"column":8,"nodeType":"651","messageId":"652","endLine":10,"endColumn":14},{"ruleId":"649","severity":1,"message":"710","line":11,"column":8,"nodeType":"651","messageId":"652","endLine":11,"endColumn":17},{"ruleId":"649","severity":1,"message":"711","line":12,"column":8,"nodeType":"651","messageId":"652","endLine":12,"endColumn":24},{"ruleId":"649","severity":1,"message":"718","line":39,"column":28,"nodeType":"651","messageId":"652","endLine":39,"endColumn":47},{"ruleId":"649","severity":1,"message":"719","line":55,"column":9,"nodeType":"651","messageId":"652","endLine":55,"endColumn":19},{"ruleId":"714","severity":1,"message":"715","line":65,"column":5,"nodeType":"716","messageId":"717","endLine":75,"endColumn":7},{"ruleId":"649","severity":1,"message":"704","line":1,"column":16,"nodeType":"651","messageId":"652","endLine":1,"endColumn":24},{"ruleId":"649","severity":1,"message":"720","line":14,"column":10,"nodeType":"651","messageId":"652","endLine":14,"endColumn":20},{"ruleId":"649","severity":1,"message":"712","line":41,"column":9,"nodeType":"651","messageId":"652","endLine":41,"endColumn":16},{"ruleId":"649","severity":1,"message":"721","line":5,"column":8,"nodeType":"651","messageId":"652","endLine":5,"endColumn":11},{"ruleId":"649","severity":1,"message":"722","line":13,"column":10,"nodeType":"651","messageId":"652","endLine":13,"endColumn":18},{"ruleId":"649","severity":1,"message":"723","line":13,"column":20,"nodeType":"651","messageId":"652","endLine":13,"endColumn":24},{"ruleId":"649","severity":1,"message":"724","line":13,"column":26,"nodeType":"651","messageId":"652","endLine":13,"endColumn":30},{"ruleId":"649","severity":1,"message":"725","line":13,"column":32,"nodeType":"651","messageId":"652","endLine":13,"endColumn":36},{"ruleId":"649","severity":1,"message":"726","line":13,"column":38,"nodeType":"651","messageId":"652","endLine":13,"endColumn":48},{"ruleId":"649","severity":1,"message":"712","line":24,"column":11,"nodeType":"651","messageId":"652","endLine":24,"endColumn":18},{"ruleId":"649","severity":1,"message":"705","line":25,"column":8,"nodeType":"651","messageId":"652","endLine":25,"endColumn":22},{"ruleId":"649","severity":1,"message":"706","line":25,"column":24,"nodeType":"651","messageId":"652","endLine":25,"endColumn":41},{"ruleId":"649","severity":1,"message":"727","line":32,"column":7,"nodeType":"651","messageId":"652","endLine":32,"endColumn":10},{"ruleId":"649","severity":1,"message":"707","line":34,"column":7,"nodeType":"651","messageId":"652","endLine":34,"endColumn":15},{"ruleId":"728","severity":1,"message":"729","line":309,"column":49,"nodeType":"730","endLine":309,"endColumn":98},{"ruleId":"649","severity":1,"message":"731","line":33,"column":10,"nodeType":"651","messageId":"652","endLine":33,"endColumn":16},{"ruleId":"649","severity":1,"message":"661","line":43,"column":10,"nodeType":"651","messageId":"652","endLine":43,"endColumn":22},{"ruleId":"649","severity":1,"message":"732","line":57,"column":10,"nodeType":"651","messageId":"652","endLine":57,"endColumn":18},{"ruleId":"649","severity":1,"message":"733","line":57,"column":20,"nodeType":"651","messageId":"652","endLine":57,"endColumn":31},{"ruleId":"649","severity":1,"message":"704","line":1,"column":16,"nodeType":"651","messageId":"652","endLine":1,"endColumn":24},{"ruleId":"649","severity":1,"message":"734","line":2,"column":8,"nodeType":"651","messageId":"652","endLine":2,"endColumn":19},{"ruleId":"649","severity":1,"message":"735","line":1,"column":16,"nodeType":"651","messageId":"652","endLine":1,"endColumn":26},{"ruleId":"649","severity":1,"message":"663","line":20,"column":11,"nodeType":"651","messageId":"652","endLine":20,"endColumn":12},{"ruleId":"736","severity":1,"message":"737","line":76,"column":22,"nodeType":"730","endLine":76,"endColumn":114},{"ruleId":"736","severity":1,"message":"737","line":77,"column":22,"nodeType":"730","endLine":77,"endColumn":114},{"ruleId":"736","severity":1,"message":"737","line":78,"column":22,"nodeType":"730","endLine":78,"endColumn":116},{"ruleId":"736","severity":1,"message":"737","line":79,"column":22,"nodeType":"730","endLine":79,"endColumn":115},{"ruleId":"736","severity":1,"message":"737","line":80,"column":22,"nodeType":"730","endLine":80,"endColumn":115},{"ruleId":"649","severity":1,"message":"720","line":8,"column":10,"nodeType":"651","messageId":"652","endLine":8,"endColumn":20},{"ruleId":"649","severity":1,"message":"738","line":38,"column":8,"nodeType":"651","messageId":"652","endLine":38,"endColumn":21},{"ruleId":"675","severity":1,"message":"739","line":49,"column":4,"nodeType":"677","endLine":49,"endColumn":6,"suggestions":"740"},{"ruleId":"675","severity":1,"message":"739","line":52,"column":4,"nodeType":"677","endLine":52,"endColumn":6,"suggestions":"741"},{"ruleId":"675","severity":1,"message":"739","line":55,"column":4,"nodeType":"677","endLine":55,"endColumn":6,"suggestions":"742"},{"ruleId":"649","severity":1,"message":"743","line":62,"column":12,"nodeType":"651","messageId":"652","endLine":62,"endColumn":16},{"ruleId":"744","severity":1,"message":"745","line":136,"column":87,"nodeType":"746","messageId":"747","endLine":136,"endColumn":88},{"ruleId":"649","severity":1,"message":"748","line":42,"column":18,"nodeType":"651","messageId":"652","endLine":42,"endColumn":23},{"ruleId":"649","severity":1,"message":"743","line":88,"column":14,"nodeType":"651","messageId":"652","endLine":88,"endColumn":18},{"ruleId":"649","severity":1,"message":"705","line":9,"column":12,"nodeType":"651","messageId":"652","endLine":9,"endColumn":26},{"ruleId":"649","severity":1,"message":"706","line":9,"column":28,"nodeType":"651","messageId":"652","endLine":9,"endColumn":45},{"ruleId":"649","severity":1,"message":"707","line":18,"column":11,"nodeType":"651","messageId":"652","endLine":18,"endColumn":19},{"ruleId":"649","severity":1,"message":"749","line":1,"column":52,"nodeType":"651","messageId":"652","endLine":1,"endColumn":62},{"ruleId":"649","severity":1,"message":"750","line":3,"column":8,"nodeType":"651","messageId":"652","endLine":3,"endColumn":16},{"ruleId":"649","severity":1,"message":"751","line":4,"column":8,"nodeType":"651","messageId":"652","endLine":4,"endColumn":23},{"ruleId":"649","severity":1,"message":"752","line":5,"column":8,"nodeType":"651","messageId":"652","endLine":5,"endColumn":16},{"ruleId":"649","severity":1,"message":"753","line":6,"column":8,"nodeType":"651","messageId":"652","endLine":6,"endColumn":20},{"ruleId":"649","severity":1,"message":"754","line":7,"column":8,"nodeType":"651","messageId":"652","endLine":7,"endColumn":20},{"ruleId":"649","severity":1,"message":"755","line":8,"column":8,"nodeType":"651","messageId":"652","endLine":8,"endColumn":20},{"ruleId":"649","severity":1,"message":"756","line":9,"column":8,"nodeType":"651","messageId":"652","endLine":9,"endColumn":21},{"ruleId":"649","severity":1,"message":"705","line":15,"column":8,"nodeType":"651","messageId":"652","endLine":15,"endColumn":22},{"ruleId":"649","severity":1,"message":"706","line":15,"column":24,"nodeType":"651","messageId":"652","endLine":15,"endColumn":41},{"ruleId":"649","severity":1,"message":"707","line":24,"column":7,"nodeType":"651","messageId":"652","endLine":24,"endColumn":15},{"ruleId":"649","severity":1,"message":"699","line":72,"column":11,"nodeType":"651","messageId":"652","endLine":72,"endColumn":19},{"ruleId":"649","severity":1,"message":"660","line":72,"column":21,"nodeType":"651","messageId":"652","endLine":72,"endColumn":27},{"ruleId":"649","severity":1,"message":"661","line":72,"column":29,"nodeType":"651","messageId":"652","endLine":72,"endColumn":41},{"ruleId":"649","severity":1,"message":"757","line":72,"column":43,"nodeType":"651","messageId":"652","endLine":72,"endColumn":50},{"ruleId":"649","severity":1,"message":"662","line":72,"column":52,"nodeType":"651","messageId":"652","endLine":72,"endColumn":61},{"ruleId":"649","severity":1,"message":"663","line":73,"column":13,"nodeType":"651","messageId":"652","endLine":73,"endColumn":14},{"ruleId":"649","severity":1,"message":"712","line":75,"column":11,"nodeType":"651","messageId":"652","endLine":75,"endColumn":18},{"ruleId":"649","severity":1,"message":"758","line":77,"column":11,"nodeType":"651","messageId":"652","endLine":77,"endColumn":27},{"ruleId":"649","severity":1,"message":"759","line":2,"column":8,"nodeType":"651","messageId":"652","endLine":2,"endColumn":21},{"ruleId":"649","severity":1,"message":"699","line":41,"column":13,"nodeType":"651","messageId":"652","endLine":41,"endColumn":21},{"ruleId":"649","severity":1,"message":"660","line":41,"column":23,"nodeType":"651","messageId":"652","endLine":41,"endColumn":29},{"ruleId":"649","severity":1,"message":"661","line":41,"column":31,"nodeType":"651","messageId":"652","endLine":41,"endColumn":43},{"ruleId":"649","severity":1,"message":"757","line":41,"column":45,"nodeType":"651","messageId":"652","endLine":41,"endColumn":52},{"ruleId":"649","severity":1,"message":"662","line":41,"column":54,"nodeType":"651","messageId":"652","endLine":41,"endColumn":63},{"ruleId":"649","severity":1,"message":"663","line":42,"column":13,"nodeType":"651","messageId":"652","endLine":42,"endColumn":14},{"ruleId":"649","severity":1,"message":"712","line":44,"column":11,"nodeType":"651","messageId":"652","endLine":44,"endColumn":18},{"ruleId":"649","severity":1,"message":"760","line":46,"column":11,"nodeType":"651","messageId":"652","endLine":46,"endColumn":25},{"ruleId":"649","severity":1,"message":"704","line":1,"column":16,"nodeType":"651","messageId":"652","endLine":1,"endColumn":24},{"ruleId":"649","severity":1,"message":"761","line":6,"column":8,"nodeType":"651","messageId":"652","endLine":6,"endColumn":19},{"ruleId":"649","severity":1,"message":"762","line":7,"column":8,"nodeType":"651","messageId":"652","endLine":7,"endColumn":18},{"ruleId":"649","severity":1,"message":"720","line":8,"column":10,"nodeType":"651","messageId":"652","endLine":8,"endColumn":20},{"ruleId":"649","severity":1,"message":"670","line":8,"column":22,"nodeType":"651","messageId":"652","endLine":8,"endColumn":32},{"ruleId":"649","severity":1,"message":"763","line":9,"column":8,"nodeType":"651","messageId":"652","endLine":9,"endColumn":14},{"ruleId":"649","severity":1,"message":"764","line":10,"column":10,"nodeType":"651","messageId":"652","endLine":10,"endColumn":23},{"ruleId":"649","severity":1,"message":"765","line":13,"column":52,"nodeType":"651","messageId":"652","endLine":13,"endColumn":64},{"ruleId":"649","severity":1,"message":"766","line":14,"column":8,"nodeType":"651","messageId":"652","endLine":14,"endColumn":11},{"ruleId":"649","severity":1,"message":"767","line":15,"column":8,"nodeType":"651","messageId":"652","endLine":15,"endColumn":16},{"ruleId":"649","severity":1,"message":"768","line":16,"column":8,"nodeType":"651","messageId":"652","endLine":16,"endColumn":25},{"ruleId":"675","severity":1,"message":"739","line":36,"column":8,"nodeType":"677","endLine":36,"endColumn":10,"suggestions":"769"},{"ruleId":"675","severity":1,"message":"739","line":39,"column":8,"nodeType":"677","endLine":39,"endColumn":10,"suggestions":"770"},{"ruleId":"675","severity":1,"message":"739","line":42,"column":8,"nodeType":"677","endLine":42,"endColumn":10,"suggestions":"771"},{"ruleId":"649","severity":1,"message":"772","line":47,"column":11,"nodeType":"651","messageId":"652","endLine":47,"endColumn":23},{"ruleId":"649","severity":1,"message":"743","line":49,"column":16,"nodeType":"651","messageId":"652","endLine":49,"endColumn":20},{"ruleId":"649","severity":1,"message":"773","line":49,"column":21,"nodeType":"651","messageId":"652","endLine":49,"endColumn":26},{"ruleId":"649","severity":1,"message":"774","line":26,"column":19,"nodeType":"651","messageId":"652","endLine":26,"endColumn":25},{"ruleId":"775","severity":1,"message":"776","line":30,"column":17,"nodeType":"716","messageId":"777","endLine":32,"endColumn":2},{"ruleId":"649","severity":1,"message":"774","line":47,"column":19,"nodeType":"651","messageId":"652","endLine":47,"endColumn":25},{"ruleId":"775","severity":1,"message":"776","line":50,"column":17,"nodeType":"716","messageId":"777","endLine":52,"endColumn":2},{"ruleId":"649","severity":1,"message":"774","line":67,"column":19,"nodeType":"651","messageId":"652","endLine":67,"endColumn":25},{"ruleId":"775","severity":1,"message":"776","line":70,"column":17,"nodeType":"716","messageId":"777","endLine":72,"endColumn":2},{"ruleId":"649","severity":1,"message":"670","line":2,"column":22,"nodeType":"651","messageId":"652","endLine":2,"endColumn":32},{"ruleId":"649","severity":1,"message":"663","line":36,"column":13,"nodeType":"651","messageId":"652","endLine":36,"endColumn":14},{"ruleId":"649","severity":1,"message":"778","line":39,"column":11,"nodeType":"651","messageId":"652","endLine":39,"endColumn":23},{"ruleId":"714","severity":1,"message":"715","line":52,"column":7,"nodeType":"716","messageId":"717","endLine":62,"endColumn":9},{"ruleId":"714","severity":1,"message":"715","line":66,"column":11,"nodeType":"716","messageId":"717","endLine":76,"endColumn":13},{"ruleId":"649","severity":1,"message":"670","line":2,"column":22,"nodeType":"651","messageId":"652","endLine":2,"endColumn":32},{"ruleId":"649","severity":1,"message":"663","line":30,"column":13,"nodeType":"651","messageId":"652","endLine":30,"endColumn":14},{"ruleId":"649","severity":1,"message":"719","line":33,"column":11,"nodeType":"651","messageId":"652","endLine":33,"endColumn":21},{"ruleId":"714","severity":1,"message":"715","line":42,"column":9,"nodeType":"716","messageId":"717","endLine":52,"endColumn":11},{"ruleId":"649","severity":1,"message":"779","line":12,"column":8,"nodeType":"651","messageId":"652","endLine":12,"endColumn":27},{"ruleId":"649","severity":1,"message":"699","line":43,"column":13,"nodeType":"651","messageId":"652","endLine":43,"endColumn":21},{"ruleId":"649","severity":1,"message":"660","line":43,"column":23,"nodeType":"651","messageId":"652","endLine":43,"endColumn":29},{"ruleId":"649","severity":1,"message":"661","line":43,"column":31,"nodeType":"651","messageId":"652","endLine":43,"endColumn":43},{"ruleId":"649","severity":1,"message":"757","line":43,"column":45,"nodeType":"651","messageId":"652","endLine":43,"endColumn":52},{"ruleId":"649","severity":1,"message":"662","line":43,"column":54,"nodeType":"651","messageId":"652","endLine":43,"endColumn":63},{"ruleId":"649","severity":1,"message":"663","line":44,"column":13,"nodeType":"651","messageId":"652","endLine":44,"endColumn":14},{"ruleId":"649","severity":1,"message":"712","line":46,"column":11,"nodeType":"651","messageId":"652","endLine":46,"endColumn":18},{"ruleId":"649","severity":1,"message":"780","line":48,"column":11,"nodeType":"651","messageId":"652","endLine":48,"endColumn":28},{"ruleId":"649","severity":1,"message":"670","line":2,"column":22,"nodeType":"651","messageId":"652","endLine":2,"endColumn":32},{"ruleId":"649","severity":1,"message":"663","line":30,"column":13,"nodeType":"651","messageId":"652","endLine":30,"endColumn":14},{"ruleId":"649","severity":1,"message":"778","line":33,"column":11,"nodeType":"651","messageId":"652","endLine":33,"endColumn":23},{"ruleId":"649","severity":1,"message":"704","line":1,"column":16,"nodeType":"651","messageId":"652","endLine":1,"endColumn":24},{"ruleId":"649","severity":1,"message":"781","line":1,"column":38,"nodeType":"651","messageId":"652","endLine":1,"endColumn":47},{"ruleId":"649","severity":1,"message":"782","line":8,"column":8,"nodeType":"651","messageId":"652","endLine":8,"endColumn":13},{"ruleId":"649","severity":1,"message":"704","line":1,"column":16,"nodeType":"651","messageId":"652","endLine":1,"endColumn":24},{"ruleId":"728","severity":1,"message":"729","line":54,"column":29,"nodeType":"730","endLine":54,"endColumn":102},{"ruleId":"728","severity":1,"message":"729","line":61,"column":29,"nodeType":"730","endLine":61,"endColumn":102},{"ruleId":"649","severity":1,"message":"783","line":25,"column":9,"nodeType":"651","messageId":"652","endLine":25,"endColumn":28},{"ruleId":"675","severity":1,"message":"739","line":49,"column":6,"nodeType":"677","endLine":49,"endColumn":8,"suggestions":"784"},{"ruleId":"649","severity":1,"message":"785","line":66,"column":11,"nodeType":"651","messageId":"652","endLine":66,"endColumn":32},{"ruleId":"649","severity":1,"message":"786","line":72,"column":11,"nodeType":"651","messageId":"652","endLine":72,"endColumn":29},{"ruleId":"649","severity":1,"message":"772","line":76,"column":13,"nodeType":"651","messageId":"652","endLine":76,"endColumn":25},{"ruleId":"649","severity":1,"message":"743","line":77,"column":14,"nodeType":"651","messageId":"652","endLine":77,"endColumn":18},{"ruleId":"649","severity":1,"message":"773","line":77,"column":19,"nodeType":"651","messageId":"652","endLine":77,"endColumn":24},{"ruleId":"649","severity":1,"message":"774","line":25,"column":19,"nodeType":"651","messageId":"652","endLine":25,"endColumn":25},{"ruleId":"775","severity":1,"message":"776","line":29,"column":17,"nodeType":"716","messageId":"777","endLine":31,"endColumn":2},{"ruleId":"649","severity":1,"message":"774","line":46,"column":19,"nodeType":"651","messageId":"652","endLine":46,"endColumn":25},{"ruleId":"775","severity":1,"message":"776","line":49,"column":17,"nodeType":"716","messageId":"777","endLine":51,"endColumn":2},{"ruleId":"649","severity":1,"message":"774","line":66,"column":19,"nodeType":"651","messageId":"652","endLine":66,"endColumn":25},{"ruleId":"775","severity":1,"message":"776","line":69,"column":17,"nodeType":"716","messageId":"777","endLine":71,"endColumn":2},{"ruleId":"649","severity":1,"message":"759","line":3,"column":8,"nodeType":"651","messageId":"652","endLine":3,"endColumn":21},{"ruleId":"649","severity":1,"message":"699","line":60,"column":13,"nodeType":"651","messageId":"652","endLine":60,"endColumn":21},{"ruleId":"649","severity":1,"message":"660","line":60,"column":23,"nodeType":"651","messageId":"652","endLine":60,"endColumn":29},{"ruleId":"649","severity":1,"message":"661","line":60,"column":31,"nodeType":"651","messageId":"652","endLine":60,"endColumn":43},{"ruleId":"649","severity":1,"message":"662","line":60,"column":54,"nodeType":"651","messageId":"652","endLine":60,"endColumn":63},{"ruleId":"649","severity":1,"message":"663","line":61,"column":13,"nodeType":"651","messageId":"652","endLine":61,"endColumn":14},{"ruleId":"649","severity":1,"message":"712","line":63,"column":11,"nodeType":"651","messageId":"652","endLine":63,"endColumn":18},{"ruleId":"649","severity":1,"message":"787","line":65,"column":11,"nodeType":"651","messageId":"652","endLine":65,"endColumn":20},{"ruleId":"788","severity":2,"message":"789","line":7,"column":15,"nodeType":"651","messageId":"790","endLine":7,"endColumn":34},{"ruleId":"788","severity":2,"message":"791","line":15,"column":15,"nodeType":"651","messageId":"790","endLine":15,"endColumn":31},{"ruleId":"649","severity":1,"message":"658","line":30,"column":12,"nodeType":"651","messageId":"652","endLine":30,"endColumn":24},{"ruleId":"649","severity":1,"message":"659","line":77,"column":12,"nodeType":"651","messageId":"652","endLine":77,"endColumn":25},"no-unused-vars","'TechSkills2' is defined but never used.","Identifier","unusedVar","'TechnicalSkills' is defined but never used.","no-native-reassign",["792"],"no-negated-in-lhs",["793"],"'attachmentId' is assigned a value but never used.","'customRequest' is assigned a value but never used.","'errors' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'formState' is assigned a value but never used.","'t' is assigned a value but never used.","'keySkills' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'JobsContext' is defined but never used.","'jobList' is assigned a value but never used.","'makeStyles' is defined but never used.","'Button' is defined but never used.","'contact' is assigned a value but never used.","'sleep' is defined but never used.","'setCount' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'count'. Either include it or remove the dependency array.","ArrayExpression",["794"],"'useDispatch' is defined but never used.","'ObektivkaProfile' is defined but never used.",["792"],["793"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'languagesReducer' is assigned a value but never used.","'Resume' is defined but never used.",["792"],["793"],"no-whitespace-before-property","Unexpected whitespace before property requestAnimationFrame.","MemberExpression","unexpectedWhitespace",{"range":"795","text":"796"},"'AutocompleteCountry' is defined but never used.","'KeySkillsContext' is defined but never used.","'useSelector' is defined but never used.","'register' is assigned a value but never used.","'history' is assigned a value but never used.","'CreateResumeAcardion' is defined but never used.","'TemplateTwo' is defined but never used.","'ColorPicker' is defined but never used.","'useState' is defined but never used.","'progressColors' is assigned a value but never used.","'setProgressColors' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'options' is assigned a value but never used.","'Switch' is defined but never used.","'FormGroup' is defined but never used.","'FormControlLabel' is defined but never used.","'classes' is assigned a value but never used.","'education' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'setProjectInputList' is assigned a value but never used.","'experience' is assigned a value but never used.","'withStyles' is defined but never used.","'Pdf' is defined but never used.","'Document' is defined but never used.","'Page' is defined but never used.","'Text' is defined but never used.","'View' is defined but never used.","'StyleSheet' is defined but never used.","'ref' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'values' is assigned a value but never used.","'birthDay' is assigned a value but never used.","'setBirthDay' is assigned a value but never used.","'TemplateOne' is defined but never used.","'useContext' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'selectedLevel' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["797"],["798"],["799"],"'name' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'reset' is assigned a value but never used.","'EDIT_CLICK' is defined but never used.","'CallIcon' is defined but never used.","'MailOutlineIcon' is defined but never used.","'RoomIcon' is defined but never used.","'LinkedInIcon' is defined but never used.","'TelegramIcon' is defined but never used.","'FacebookIcon' is defined but never used.","'InstagramIcon' is defined but never used.","'control' is assigned a value but never used.","'obektivkaProfile' is assigned a value but never used.","'ImageUploader' is defined but never used.","'obektivkaBirth' is assigned a value but never used.","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'Select' is defined but never used.","'TextValidator' is defined but never used.","'saveLanguage' is defined but never used.","'Fab' is defined but never used.","'EditIcon' is defined but never used.","'DeleteOutlineIcon' is defined but never used.",["800"],["801"],["802"],"'handleChange' is assigned a value but never used.","'value' is assigned a value but never used.","'errMsg' is assigned a value but never used.","no-unreachable","Unreachable code.","unreachableCode","'state_awards' is assigned a value but never used.","'DateYearMonthPicker' is defined but never used.","'obektivkaAcademic' is assigned a value but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","'ValidationTextField' is assigned a value but never used.",["803"],"'handleRemoveTechSkill' is assigned a value but never used.","'handleAddTechSkill' is assigned a value but never used.","'relatives' is assigned a value but never used.","no-undef","'CREATE_PROFILE_INFO' is not defined.","undef","'GET_PROFILE_INFO' is not defined.","no-global-assign","no-unsafe-negation",{"desc":"804","fix":"805"},[1140,1142],".",{"desc":"806","fix":"807"},{"desc":"806","fix":"808"},{"desc":"806","fix":"809"},{"desc":"806","fix":"810"},{"desc":"806","fix":"811"},{"desc":"806","fix":"812"},{"desc":"806","fix":"813"},"Update the dependencies array to be: [t, i18n, count]",{"range":"814","text":"815"},"Update the dependencies array to be: [dispatch]",{"range":"816","text":"817"},{"range":"818","text":"817"},{"range":"819","text":"817"},{"range":"820","text":"817"},{"range":"821","text":"817"},{"range":"822","text":"817"},{"range":"823","text":"817"},[1726,1735],"[t, i18n, count]",[1776,1778],"[dispatch]",[1833,1835],[1890,1892],[1866,1868],[1935,1937],[2004,2006],[1854,1856]]