[{"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\loginAndregister\\LoginAndRegister.js":"1","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\loginAndregister\\SignUp.js":"2","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\loginAndregister\\TabForRegister.js":"3","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\pages\\Login.js":"4","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\loginAndregister\\SignIn.js":"5","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\loginAndregister\\SignInWithGoogle.js":"6","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\store.js":"7","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\App.js":"8","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\pages\\JobSearch.js":"9","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\pages\\Contacts.js":"10","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\pages\\ResumeCreator.js":"11","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\context\\EmployerContext.js":"12","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\context\\CountriesContext.js":"13","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\timelines\\index.js":"14","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\personalDevReducer.js":"15","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\contactReducer.js":"16","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\languagesReducer.js":"17","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\JobSearchBanner.js":"18","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\CreateResumeMain.js":"19","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\PostJobFields.js":"20","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\type.js":"21","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\autocomleteInputs\\AutocompleteCountry.js":"22","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\resumeAcardion\\CreateResumeAcardion.js":"23","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\PostViewCard.js":"24","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\colorAction.js":"25","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\templates\\TemplateFour.js":"26","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\achivements\\AchievementForm.js":"27","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\keySkills\\KeySkillsSelect.js":"28","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\technicalSkills\\NewM.js":"29","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\keySkillsAction.js":"30","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\personalDevAction.js":"31","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\education\\EducationForm.js":"32","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\createProfile\\ProfileForm.js":"33","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\experienceAction.js":"34","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\contactInfoAction.js":"35","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\i18nextConfig.js":"36","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\pages\\Home.js":"37","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\pages\\Candidates.js":"38","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\PageNotFound.js":"39","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\rootReducer.js":"40","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\JobSearchMain.js":"41","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\templates\\TemplateOne.js":"42","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\colorReducer.js":"43","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\CandidateSearchRight.js":"44","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\JobSearchRight.js":"45","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\ProgressBar.js":"46","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\templates\\TemplateTwo.js":"47","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\personalDevelopment\\PersonalDevelopment.js":"48","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\technicalSkills\\TechnicalSkills.js":"49","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\experience\\ExperienceForm2.js":"50","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\technicalSkillsAction.js":"51","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\PostView.js":"52","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\languagesAction.js":"53","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\drivingLAction.js":"54","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\tab\\TabForTemplates.js":"55"},{"size":525,"mtime":1609186901678,"results":"56","hashOfConfig":"57"},{"size":7117,"mtime":1609611646656,"results":"58","hashOfConfig":"57"},{"size":2292,"mtime":1609596030179,"results":"59","hashOfConfig":"57"},{"size":271,"mtime":1609187299815,"results":"60","hashOfConfig":"57"},{"size":4216,"mtime":1609579165793,"results":"61","hashOfConfig":"57"},{"size":1041,"mtime":1609595069409,"results":"62","hashOfConfig":"57"},{"size":401,"mtime":1607957925720,"results":"63","hashOfConfig":"57"},{"size":3274,"mtime":1609027650173,"results":"64","hashOfConfig":"57"},{"size":366,"mtime":1607540770601,"results":"65","hashOfConfig":"57"},{"size":229,"mtime":1607755015617,"results":"66","hashOfConfig":"57"},{"size":276,"mtime":1609027524797,"results":"67","hashOfConfig":"57"},{"size":817,"mtime":1607740217300,"results":"68","hashOfConfig":"57"},{"size":967,"mtime":1608294171820,"results":"69","hashOfConfig":"57"},{"size":1371,"mtime":1607369521943,"results":"70","hashOfConfig":"57"},{"size":529,"mtime":1608542859164,"results":"71","hashOfConfig":"57"},{"size":440,"mtime":1608007951887,"results":"72","hashOfConfig":"57"},{"size":777,"mtime":1608525249648,"results":"73","hashOfConfig":"57"},{"size":5787,"mtime":1608462938414,"results":"74","hashOfConfig":"57"},{"size":917,"mtime":1608818896904,"results":"75","hashOfConfig":"57"},{"size":20159,"mtime":1608467238372,"results":"76","hashOfConfig":"57"},{"size":3043,"mtime":1609058856606,"results":"77","hashOfConfig":"57"},{"size":2477,"mtime":1608467926329,"results":"78","hashOfConfig":"57"},{"size":3535,"mtime":1608698639723,"results":"79","hashOfConfig":"57"},{"size":3096,"mtime":1607724073740,"results":"80","hashOfConfig":"57"},{"size":324,"mtime":1608654248238,"results":"81","hashOfConfig":"57"},{"size":21605,"mtime":1609028329664,"results":"82","hashOfConfig":"57"},{"size":6604,"mtime":1608638732787,"results":"83","hashOfConfig":"57"},{"size":3420,"mtime":1608544877953,"results":"84","hashOfConfig":"57"},{"size":7655,"mtime":1608734604556,"results":"85","hashOfConfig":"57"},{"size":352,"mtime":1608193898051,"results":"86","hashOfConfig":"57"},{"size":380,"mtime":1608542569054,"results":"87","hashOfConfig":"57"},{"size":7414,"mtime":1608639093340,"results":"88","hashOfConfig":"57"},{"size":7967,"mtime":1608783902313,"results":"89","hashOfConfig":"57"},{"size":368,"mtime":1608095888737,"results":"90","hashOfConfig":"57"},{"size":364,"mtime":1608068229032,"results":"91","hashOfConfig":"57"},{"size":940,"mtime":1607182452297,"results":"92","hashOfConfig":"57"},{"size":265,"mtime":1607570600276,"results":"93","hashOfConfig":"57"},{"size":413,"mtime":1607739925891,"results":"94","hashOfConfig":"57"},{"size":506,"mtime":1607305531654,"results":"95","hashOfConfig":"57"},{"size":1109,"mtime":1608693166943,"results":"96","hashOfConfig":"57"},{"size":582,"mtime":1607739577590,"results":"97","hashOfConfig":"57"},{"size":22752,"mtime":1609616470474,"results":"98","hashOfConfig":"57"},{"size":1231,"mtime":1608987001844,"results":"99","hashOfConfig":"57"},{"size":379,"mtime":1607739982059,"results":"100","hashOfConfig":"57"},{"size":357,"mtime":1607739987594,"results":"101","hashOfConfig":"57"},{"size":954,"mtime":1609028700383,"results":"102","hashOfConfig":"57"},{"size":21566,"mtime":1609612249691,"results":"103","hashOfConfig":"57"},{"size":6465,"mtime":1608795066548,"results":"104","hashOfConfig":"57"},{"size":6697,"mtime":1608316016869,"results":"105","hashOfConfig":"57"},{"size":11736,"mtime":1608637241043,"results":"106","hashOfConfig":"57"},{"size":709,"mtime":1608747338824,"results":"107","hashOfConfig":"57"},{"size":4710,"mtime":1607740713409,"results":"108","hashOfConfig":"57"},{"size":1677,"mtime":1608531794824,"results":"109","hashOfConfig":"57"},{"size":354,"mtime":1608539102283,"results":"110","hashOfConfig":"57"},{"size":2705,"mtime":1609612396097,"results":"111","hashOfConfig":"57"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"kieyu0",{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"121"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"121"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"121"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"215","messages":"216","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\loginAndregister\\LoginAndRegister.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\loginAndregister\\SignUp.js",["227","228"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\loginAndregister\\TabForRegister.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\pages\\Login.js",["229"],"import React, {useContext} from 'react';\r\nimport LoginAndRegister from '../components/loginAndregister/LoginAndRegister';\r\n\r\n\r\nfunction Login() {\r\n\r\n    return (\r\n        <div id=\"login\">\r\n           <LoginAndRegister/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n",["230","231"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\loginAndregister\\SignIn.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\loginAndregister\\SignInWithGoogle.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\store.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\App.js",["232"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\pages\\JobSearch.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\pages\\Contacts.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\pages\\ResumeCreator.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\context\\EmployerContext.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\context\\CountriesContext.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\timelines\\index.js",["233"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\personalDevReducer.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\contactReducer.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\languagesReducer.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\JobSearchBanner.js",["234"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\CreateResumeMain.js",["235"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\PostJobFields.js",["236","237","238","239","240"],"import React, { useState, useContext}  from 'react';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport isEmail from \"validator/lib/isEmail\";\r\nimport \"../styles/PostJobFields.css\";\r\nimport PostView1 from './PostView1';\r\nimport Select from \"react-select\"\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {savePostJob} from \"../stores/actions/postJobFieldsAction\"\r\nimport {TechnicalSkillsContext} from \"../context/TechnicalSkillsContext\";\r\nimport { CountriesContext } from '../context/CountriesContext';\r\nimport AutocompleteCountry from './autocomleteInputs/AutocompleteCountry';\r\n\r\nconst schema = yup.object().shape({\r\n    adRegion: yup.string().required(),\r\n    city: yup.string().required(),\r\n    companyName: yup.string().required(),\r\n    country: yup.string().required(),\r\n    email: yup.string().required(),\r\n    fromSalary: yup.number().positive().integer().required(),\r\n    fullName: yup.string().required(),\r\n    industry: yup.string().required(),\r\n    jobCondition: yup.string().required(),\r\n    jobTitle: yup.string().required(),\r\n    jobType: yup.string().required(),\r\n    region: yup.string().required(),\r\n    salaryType: yup.string().required(),\r\n    workplace: yup.string().required(),\r\n    toSalary: yup.number().positive().integer().required(),\r\n  });\r\n\r\nfunction PostJobFields() {\r\n    const { t } = useTranslation();\r\n    const dispatch = useDispatch();\r\n    const {technicalSkills} = useContext(TechnicalSkillsContext);\r\n    const countries = useContext(CountriesContext)\r\n    console.log(\"counties\", countries);\r\n    const postjob = useSelector(state => state.postjobReducer.postjob)\r\n    const { register, errors, handleSubmit, control, formState } = useForm({resolver: yupResolver(schema)});\r\n    \r\n    const [phone, setPhone] = useState('');\r\n    const [postedData, setPostedData] = useState({});\r\n    const [checked, setChecked] = useState(false);\r\n\r\n    const toggleChecked = () => {\r\n      setChecked((prev) => !prev);\r\n    };\r\n    \r\n    const onSubmit = (data, e) => {\r\n        console.log(\"manaaaa>>>\", data);\r\n        dispatch(savePostJob(data))\r\n        setPostedData(data);\r\n        e.target.reset();\r\n        setPhone(\"\")\r\n    }\r\n    const techSkill = [\r\n        { value: 'react', label: 'REACT' },\r\n        { value: 'html', label: 'HTML' },\r\n        { value: 'css', label: 'CSS' },\r\n        { value: 'javascript', label: 'JAVASCRIPT' },\r\n        { value: 'vue', label: 'VUE' },\r\n        { value: 'redux', label: 'REDUX' },\r\n        { value: 'angular', label: 'ANGULAR' },\r\n        { value: 'english teacher', label: 'English teacher' },\r\n        { value: 'nurse', label: 'Nurse' },\r\n        { value: 'accountant', label: 'Accountant' },\r\n        { value: 'cleaner', label: 'Cleaner' }\r\n        ]\r\n    const languages = [\r\n        {value: 'uzbek', label: \"Uzbek\"},\r\n        {value: 'russian', label: \"Russian\"},\r\n        {value: 'english', label: \"English\"}\r\n    ]\r\n    \r\n    return (\r\n            <div id=\"jobPostFields\">\r\n                <div className=\"jobpost__bg\">\r\n                        <h2 className=\"jobpost__title\">Create your account to post your job</h2>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <form className=\"jobpost__form\" id=\"jobfields\" onSubmit={handleSubmit(onSubmit)}>               \r\n                                <label name=\"companyLabel\"  htmlFor=\"company\">Your company name <span className=\"required\">*</span></label>\r\n                                <input name=\"companyName\" id=\"company\" ref={register({ required: true})} />\r\n                                <p className=\"error__message\">{errors?.companyName?.message}</p>\r\n\r\n                                <label name=\"fullNameLabel\" htmlFor=\"fullname\">Your full name <span className=\"required\">*</span></label>\r\n                                <input type=\"text\" id=\"fullname\" name=\"fullName\" ref={register({ required: true})}/>\r\n                                <p className=\"error__message\">{errors.fullName?.message}</p>\r\n\r\n                                <label name=\"emailLabel\" htmlFor=\"email\">Your Email <span className=\"required\">*</span></label>\r\n                                <input name=\"email\" id=\"email\"\r\n                                        ref={register({\r\n                                            required: true,\r\n                                            validate: (input) => isEmail(input),\r\n                                        })}\r\n                                        placeholder=\"Email\"\r\n                                />\r\n                                <p className=\"error__message\">{errors.email?.message}</p>\r\n\r\n                                <label name=\"phoneLabel\" htmlFor=\"phone\">Your number (optional)</label>\r\n                                <Controller\r\n                                    as={\r\n                                        <PhoneInput\r\n                                    inputProps={{\r\n                                    name: 'phone',\r\n                                    required: true,\r\n                                    autoFocus: true\r\n                                    }}\r\n                                    country={'uz'}\r\n                                    value={phone}\r\n                                    onChange={phone => setPhone({ phone })}\r\n                                /> }\r\n                                name=\"phone\"\r\n                                control={control}\r\n                                rules= {{required: false}}\r\n                                /> \r\n                                {/* <input type=\"tel\" id=\"tel\" name=\"tel\" ref={register({ required: true})}/> */}\r\n                                <label name=\"cityLabel\" htmlFor=\"city\">City <span className=\"required\">*</span></label>\r\n                                <input type=\"text\" id=\"city\" name=\"city\" ref={register({ required: true})}/>\r\n                                <p className=\"error__message\">{errors.city?.message}</p>\r\n\r\n                                <label name=\"regionLabel\" htmlFor=\"region\">Region <span className=\"required\">*</span></label>\r\n                                <input type=\"text\" id=\"region\" name=\"region\" ref={register({ required: true})}/>\r\n                                <p className=\"error__message\">{errors.region?.message}</p>\r\n\r\n                                <label name=\"countryLabel\" htmlFor=\"country\">Country <span className=\"required\">*</span></label>\r\n                                <Controller\r\n                                    as={\r\n                                        <AutocompleteCountry/>\r\n                                    }\r\n                                    name=\"isNightShift\"\r\n                                    control={control}\r\n                                    />\r\n                                {/* <input type=\"text\" id=\"country\" name=\"country\" ref={register({ required: true})}/> */}\r\n                                <p className=\"error__message\">{errors.country?.message}</p>\r\n\r\n                                <label name=\"industryLabel\" htmlFor=\"industry\">Industry <span className=\"required\">*</span></label>\r\n                                <p>Select the industry thst best describes your company.</p>\r\n                                <select name=\"industry\" ref={register({required:true})}>\r\n                                    <option value=\"industry1\">industry1</option>\r\n                                    <option value=\"industry2\">industry2</option>\r\n                                    <option value=\"industry3\">industry3</option>\r\n                                </select>\r\n\r\n                                <label name=\"jobTitleLabel\" htmlFor=\"jobTitle\">Job title <span className=\"required\">*</span></label>\r\n                                <input type=\"text\" id=\"jobTitle\" name=\"jobTitle\" ref={register({ required: true})}/>\r\n                                <p className=\"error__message\">{errors.jobTitle?.message}</p>\r\n\r\n                                <label name=\"question\">Where will employee work? <span className=\"required\">*</span></label>\r\n                                <div className=\"radios\">\r\n                                    <div className=\"radio__btn\">\r\n                                        <input type=\"radio\" id=\"atoffice\" name=\"workplace\" value=\"At Office\" ref={register({ required: true})}/>\r\n                                        <label name=\"atofficeLabel \" htmlFor=\"atoffice\">At Office</label>\r\n                                    </div>\r\n                                    <div className=\"radio__btn\">\r\n                                        <input type=\"radio\" id=\"multiloc\" name=\"workplace\" value=\"Multi-location\" ref={register({ required: true})}/>\r\n                                        <label name=\"multilocLabel\" htmlFor=\"multiloc\">Multi Locations</label>\r\n                                    </div>\r\n                                    <div className=\"radio__btn\">\r\n                                        <input type=\"radio\" id=\"remote-19\" name=\"workplace\" value=\"Remote Due To Covid-19\"/>\r\n                                        <label name=\"remoteDueToLabel\" htmlFor=\"remote-19\" ref={register({ required: true})}>Remote due to Covid-19</label>\r\n                                    </div>\r\n                                    <div className=\"radio__btn\">\r\n                                        <input type=\"radio\" id=\"fulRemote\" name=\"workplace\" value=\"Full Remote\" ref={register({ required: true})}/>\r\n                                        <label name=\"fullRemoteLabel\" htmlFor=\"fulRemote\">Fully remote</label>\r\n\r\n                                    </div>\r\n                                    <div className=\"radio__btn\">\r\n                                        <input type=\"radio\" id=\"ontheroad\" name=\"workplace\" value=\"On The Road\" ref={register({ required: true})}/>\r\n                                        <label name=\"onTheRoadLabel\" htmlFor=\"ontheroad\">On the road</label>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                                <label name=\"adverLocLabel\" htmlFor=\"advertloc\">Where would you like to advertise this job? <span className=\"required\">*</span> </label>\r\n                                <input type=\"text\" id=\"advertloc\" name=\"adRegion\" autoComplete={true}\r\n                                ref={register({ required: true})}\r\n                                />\r\n                                \r\n                                <label>Is this job full time or part time? <span className=\"required\">*</span></label>\r\n                                <div className=\"radios\">\r\n                                    <div className=\"radio__btn\">\r\n                                        <input type=\"radio\" id=\"full\" name=\"jobCondition\" value=\"Full Time\" ref={register({ required: true})}/>\r\n                                    <label name=\"fullTimeLabel\" htmlFor=\"full\">Full time</label>\r\n                                    </div>\r\n                                    <div className=\"radio__btn\">\r\n                                        <input type=\"radio\" id=\"part\" name=\"jobCondition\" value=\"Part Time\" ref={register({ required: true})}/>\r\n                                    <label name=\"partTimeLabel\" htmlFor=\"part\">Part time</label>\r\n                                    </div>\r\n                                    <div className=\"radio__btn\">\r\n                                        <input type=\"radio\" id=\"fullandpart\" name=\"jobCondition\" value=\"Part And Full Time\" ref={register({ required: true})}/>\r\n                                    <label name=\"fullAndPartLabel\" htmlFor=\"fullandpart\">Either full-time or paer-time</label>\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n\r\n                                <label>Are these additional job types that apply? <span className=\"required\">*</span></label>\r\n                                <div className=\"radios\">\r\n                                    <div className=\"radio__btn\">\r\n                                        <input type=\"radio\" id=\"internship\" name=\"jobType\" value=\"internship\" ref={register({ required: true})}/>\r\n                                        <label name=\"internshipLabel\" htmlFor=\"internship\">Internship</label>\r\n                                    </div>\r\n                                    <div className=\"radio__btn\">\r\n                                        <input type=\"radio\" id=\"temporary\" name=\"jobType\" value=\"temporary\" ref={register({ required: true})}/>\r\n                                        <label name=\"tempLabel\" htmlFor=\"temporary\">Temporary</label>\r\n                                    </div>\r\n                                    <div className=\"radio__btn\">\r\n                                        <input type=\"radio\" id=\"contract\" name=\"jobType\" value=\"contract\" ref={register({ required: true})}/>\r\n                                        <label name=\"contractLabel\" htmlFor=\"contract\">Contract</label>\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n                                <label name=\"salaryLabel\" htmlFor=\"salfrom\">Salary</label>\r\n\r\n                                <div className=\"salary_inputs\">\r\n                                <div className=\"row salary_box\">\r\n                                    <div className=\"col-md-4 inp\">\r\n                                        <label name=\"fromLabel\" htmlFor=\"from\">From </label>\r\n                                        <input type=\"number\" id=\"salfrom\" name=\"fromSalary\" ref={register({ required: true})}/>\r\n                                        <p className=\"error__message\">{errors.fromSalary?.message}</p>\r\n                                    </div>\r\n                                    <div className=\"col-md-4 inp\">\r\n                                        <label name=\"toLabel\" htmlFor=\"to\">To </label>\r\n                                        <input type=\"number\" id=\"to\" name=\"toSalary\" ref={register({ required: true})}/>\r\n                                        <p className=\"error__message\">{errors.toSalary?.message}</p>\r\n                                    </div>\r\n                                    <div className=\"col-md-4 inp\">\r\n                                    <div className=\"sal_type\">\r\n                                        <label name=\"typeLabel\" htmlFor=\"salaryType\">Type </label>\r\n                                        <select name=\"salaryType\" id=\"salaryType\" ref={register({ required: true})}>\r\n                                            <option key=\"value\" value=\"0\" disabled>Select an option</option>\r\n                                            <option key=\"value\" value=\"hour\">hour</option>\r\n                                            <option key=\"value\" value=\"day\">day</option>\r\n                                            <option key=\"value\" value=\"month\">month</option>\r\n                                        </select>\r\n                                        <p className=\"error__message\">{errors.salaryType?.message}</p>\r\n                                    </div> \r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"nightShift\">\r\n                                <Controller\r\n                                    as={\r\n                                <FormGroup>\r\n                                <FormControlLabel\r\n                                    control={<Switch checked={checked} color=\"primary\" \r\n                                    defaultValue={checked} ref={register({required:false})} \r\n                                    name=\"isNightShift\" \r\n                                    onChange={toggleChecked} \r\n                                    value={!checked? \"Night job\" : \"Day job\"}\r\n                                    />}\r\n                                    label={checked? \"Nightshift\" : \"Dayshift\"}\r\n                                />\r\n                                </FormGroup>\r\n                                }\r\n                                name=\"isNightShift\"\r\n                                control={control}\r\n                                // rules= {{required:false}} \r\n                         />\r\n                                </div>\r\n                                <div className=\"additional\">\r\n                                    <label name=\"aboutJob\" htmlFor=\"aboutJob\">About job </label>\r\n                                    <textarea name=\"aboutJob\" id=\"aboutJob\" cols=\"30\" rows=\"7\" ref={register({ required: false})}></textarea>\r\n                                    <label name=\"addReqLabel\" htmlFor=\"addRequirement\">Additional requirements(if needed) </label>\r\n                                    <textarea name=\"addRequirement\" id=\"addRequirement\" cols=\"30\" rows=\"7\" ref={register({ required: false})}></textarea>\r\n                                </div>\r\n                                <div>\r\n                                <label className=\"language__title\">Skills</label>\r\n                                 <Controller\r\n                                    as={\r\n                                <Select\r\n                                    defaultValue={[]}\r\n                                    isMulti\r\n                                    name=\"skills\"\r\n                                    options={technicalSkills}\r\n                                    className=\"basic-multi-select\"\r\n                                    classNamePrefix=\"select\"\r\n                                />\r\n                                    }\r\n                                    name=\"skills\"\r\n                                    control={control}\r\n                                    rules= {{required: true}}\r\n                                />\r\n                                <p className=\"error__message\">{errors.skills?.message}</p>\r\n                                <label className=\"language__title\">Languages</label>\r\n                                <Controller\r\n                                    as={\r\n                                <Select\r\n                                    defaultValue={[]}\r\n                                    isMulti\r\n                                    name=\"languages\"\r\n                                    options={languages}\r\n                                    className=\"basic-multi-select\"\r\n                                    classNamePrefix=\"select\"\r\n                                />\r\n                                    }\r\n                                    name=\"languages\"\r\n                                    control={control}\r\n                                    rules= {{required: true}}\r\n                                />\r\n                                <p className=\"error__message\">{errors.languages?.message}</p>      \r\n\r\n                               \r\n                                </div>\r\n                                    \r\n                                </div>\r\n                                <button htmlFor=\"jobfields\" className=\" btn btn-success postJobFieldButton mt-5\" type=\"submit\">Save and Post</button>\r\n                            </form>\r\n                                \r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <PostView1/>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                </div>\r\n                {\r\n                    \r\n                }\r\n        </div>\r\n    )\r\n  \r\n}\r\n\r\nexport default PostJobFields\r\n","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\type.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\autocomleteInputs\\AutocompleteCountry.js",["241","242","243"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\resumeAcardion\\CreateResumeAcardion.js",["244","245"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\PostViewCard.js",["246"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\colorAction.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\templates\\TemplateFour.js",["247","248","249","250"],"import React, {createRef, useState} from 'react';\r\nimport \"./templateStyles/TemplateFour.css\";\r\nimport ProgressBar from '../components/ProgressBar';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Pdf from \"react-to-pdf\";\r\n\r\n\r\n\r\n\r\nfunction TemplateFour() {\r\nconst [progressColors, setProgressColors] = useState([\r\n    {id:777, color: \"#6a1b9a\"},\r\n    {id:888, color: \"#32a852\"},\r\n    {id:999, color: \"#3250a8\"},\r\n    {id:666, color: \"#dbd144\"},\r\n    {id:555, color: \"#c42121\"},\r\n])\r\nconst ref = createRef();\r\n\r\nconst dispatch = useDispatch();\r\nconst profileInfo = useSelector(state => state.profileReducer.profileInfo);\r\nconst contact = useSelector(state => state.contactReducer.contact);\r\nconst educations = useSelector(state => state.educationReducer.educations)\r\nconst experiences = useSelector(state => state.experienceReducer.experiences)\r\nconst keyskillsList = useSelector(state => state.keySkillsReducer.keyskillsList)\r\nconst techSkillsList = useSelector(state => state.technicalSkillsReducer.techSkillsList)\r\nconst achievements = useSelector(state => state.achievementsReducer.achievements)\r\nconst languagesList = useSelector(state => state.languagesReducer.languagesList)\r\nconst drLicences = useSelector(state => state.drivingLReducer.drLicences)\r\nconst personalDevInfo  = useSelector(state => state.personalDevReducer.personalDevInfo);\r\nconst selectedColor = useSelector(state => state.colorReducer.selectedColor)\r\nconsole.log(\"selected color>>>>\", selectedColor);\r\nconst options = {\r\n    orientation: 'portrait',\r\n    unit: 'cm',\r\n    format: [4,2]\r\n};\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <Pdf targetRef={ref} fileName=\"template-four.pdf\"  >\r\n                {({toPdf})=> <button onClick={toPdf}>save as pdf</button>}\r\n            </Pdf>\r\n            <div className=\"templateFour__container\" ref={ref}>\r\n                <div className=\"templateFour__header\" style={{backgroundColor:selectedColor.colorSide, color: selectedColor.textColor}}>\r\n                    <div className=\"templateFour__headerContacts\">\r\n                    {contact.address ? (\r\n                                <div className=\"templateFour__rightContact\">\r\n                                    <i class=\"fas fa-home\"  style={{color: selectedColor.textColor}}></i>\r\n                                    <p className=\"contact__titlesFour\">\r\n                                        {contact.address}\r\n                                    </p>\r\n                                </div>\r\n                            ):\"\"}\r\n                            {contact.email ? (\r\n                                <div className=\"templateFour__rightContact\">\r\n                                   <i class=\"far fa-envelope\"  style={{color: selectedColor.textColor}}></i>\r\n                                    <p className=\"contact__titlesFour\">\r\n                                        {contact.email}\r\n                                    </p>\r\n                                </div>\r\n                            ):\"\"}\r\n                            {contact.phone ? (\r\n                                <div className=\"templateFour__rightContact\">\r\n                                    <i class=\"fas fa-phone-square-alt\"  style={{color: selectedColor.textColor}}></i>\r\n                                    <p className=\"contact__titlesFour\">\r\n                                        {contact.phone}\r\n                                    </p>\r\n                                </div>\r\n                            ):\"\"}\r\n                    </div>\r\n                    <div className=\"templateFour__headerName\">\r\n                        <div className=\"templateFour__headerProfile\">\r\n                            <p className=\"templateFour__headerFullName\">\r\n                            {profileInfo.firstName && profileInfo?.firstName+\" \"+ profileInfo?.lastName}\r\n                            </p>\r\n                            <p className=\"templateFour__headerJobTitle\">\r\n                            {profileInfo?.currentJob}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"templateFour__headerSocials\">\r\n                    {contact.facebook ? (\r\n                                <div className=\"social__contactsFour\">\r\n                                     <p className=\"contact__nameFour\">\r\n                                    {contact.facebook}\r\n                                    </p>  \r\n                                     <i class=\"fab fa-facebook-square\" style={{color: selectedColor.textColor}}></i>\r\n                                           \r\n                                </div>\r\n                            ): \"\"}\r\n                            {contact.instagram ? (\r\n                               <div className=\"social__contactsFour\">\r\n                                   <p className=\"contact__nameFour\">\r\n                                        {contact.instagram}\r\n                                    </p>\r\n                                    <i class=\"fab fa-instagram\"  style={{color: selectedColor.textColor}}></i>\r\n                                    \r\n                                </div> \r\n                            ): \"\"}\r\n                            {contact.telegram ? (\r\n                                <div className=\"social__contactsFour\">\r\n                                    <p className=\"contact__nameFour\">\r\n                                        {contact.telegram}\r\n                                    </p>\r\n                                    <i class=\"fab fa-telegram-plane\"  style={{color: selectedColor.textColor}}></i>\r\n                                    \r\n                                </div>\r\n                            ): \"\"}\r\n                            {contact.linkedIn? (\r\n                                <div className=\"social__contactsFour\">\r\n                                    <p className=\"contact__nameFour\">\r\n                                        {contact.linkedIn}\r\n                                    </p>\r\n                                    <i class=\"fab fa-linkedin\"  style={{color: selectedColor.textColor}}></i>\r\n                                    \r\n                                </div>\r\n                            ): \"\"}\r\n                    </div>\r\n                </div>\r\n                <div className=\"templateFour__image effect1\">\r\n                    <img src=\"../../assets/images/templateImages/mini.jpg\" alt=\"\"/>\r\n                </div>\r\n                <div className=\"templateFour__body\">\r\n                <div className=\"templateFour__bodyleft\" style={{backgroundColor:selectedColor.colorHead, color: selectedColor.textColor}}>\r\n                    <div className=\"templateFour__righHeadingContainer\">\r\n                        <div className=\"templateFour__fieldsHeader\" style={{backgroundColor:selectedColor.colorHead, color: selectedColor.textColor}}>\r\n                            <p className=\"templateFour__lefHeadings\">education</p> \r\n                        </div>\r\n                            {educations &&\r\n                                educations.map((education, index) =>(\r\n                                <div className=\"temp_fourUniversity\" key={index}>\r\n                                    <div className=\"temp_fourUniDegreeNMajor\">\r\n                                        <p className=\"temp_fourUniversityDegree\">\r\n                                           {education.degree}\r\n                                        </p>\r\n                                       \r\n                                        <p className=\"temp_fourUniversityMajor\">\r\n                                            {education.major}\r\n                                        </p>\r\n                                    </div>\r\n                                    <p className=\"temp_fourUniversityName\">\r\n                                        {education.university}\r\n                                    </p>\r\n                                    <div className=\"temp_fourEductationYears\">\r\n                                        <p className=\"temp_fourStartYear\">\r\n                                            {education.startYear}\r\n                                        </p>\r\n                                        <p className=\"temp_fourDash\">\r\n                                            -\r\n                                        </p>\r\n                                        <p className=\"temp_fourEndYear\">\r\n                                            {education.endYear ? education.endYear : \"To present\"}\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                                ))\r\n                            }\r\n                    </div>\r\n                    <div className=\"tempFour__line\" style={{borderColor: selectedColor.colorSide}}></div>\r\n                    <div className=\"templateFour__righHeadingContainer\">\r\n                        <div className=\"templateFour__fieldsHeader\" style={{backgroundColor:selectedColor.colorHead, color: selectedColor.textColor}}>\r\n                            <p className=\"templateFour__lefHeadings\">key skills</p>     \r\n                        </div>\r\n                        {keyskillsList &&\r\n                                keyskillsList.map((keyskills, index)=>(\r\n                                <p className=\"temp_fourSkill\" key={index}>\r\n                                   {keyskills.title}\r\n                                </p>\r\n                                ))\r\n                            }\r\n                    </div>\r\n                    <div className=\"tempFour__line\" style={{borderColor: selectedColor.colorSide}}></div>\r\n                    <div className=\"templateFour__righHeadingContainer\">\r\n                        <div className=\"templateFour__fieldsHeader\" style={{backgroundColor:selectedColor.colorHead, color: selectedColor.textColor}}>\r\n                           <p className=\"templateFour__lefHeadings\">technical skills</p>       \r\n                        </div>\r\n                        {techSkillsList &&\r\n                                techSkillsList.map((techSkill, index) =>(\r\n                                <div className=\"temp_fourTechSkill\" key={index}>\r\n                                    <p className=\"temp_fourTechSkillTitle\">\r\n                                        {techSkill.tech_skill}\r\n                                    </p>\r\n                                    {/* {progressColors &&\r\n                                        progressColors.map(color =>( */}\r\n                                            <ProgressBar bgcolor ={selectedColor.colorSide} completed={techSkill.tech_skill_rank}/>\r\n                                        {/* ))\r\n                                    } */}\r\n                                   \r\n                                </div>\r\n                                ))\r\n                            }\r\n                    </div>\r\n                    <div className=\"tempFour__line\" style={{borderColor: selectedColor.colorSide}}></div>\r\n                    <div className=\"templateFour__righHeadingContainer\">\r\n                        <div className=\"templateFour__fieldsHeader\" style={{backgroundColor:selectedColor.colorHead, color: selectedColor.textColor}}>\r\n                           <p className=\"templateFour__lefHeadings\">achievement</p> \r\n                        </div>\r\n                        { achievements && achievements.map((achievement, index) =>(\r\n                                <div className=\"temp_fourAwards\">\r\n                                    <p className=\"temp_fourAwardTitle\">\r\n                                        {achievement.achievement}\r\n                                    </p>\r\n                                    <p className=\"template__fourAward\">{achievement.organizationName} / {achievement.address} </p>\r\n                                    <p className=\"template__fourAward\">{achievement.startYear}</p>\r\n                                </div>\r\n                            ))}\r\n                    </div>\r\n                    <div className=\"tempFour__line\" style={{borderColor: selectedColor.colorSide}}></div>\r\n                    <div className=\"templateFour__righHeadingContainer\">\r\n                        <div className=\"templateFour__fieldsHeader\" style={{backgroundColor:selectedColor.colorHead, color: selectedColor.textColor}}>\r\n                           <p className=\"templateFour__lefHeadings\">languages</p> \r\n                        </div>\r\n                        {languagesList &&\r\n                                languagesList.map((language, index)=>(\r\n                                    <div className=\"temp_fourLanguage\" key={index}>\r\n                                        <p className=\"temp_fourLangTitle col-sm-5 px-0\">\r\n                                            {language.name}\r\n                                        </p>\r\n                                        <p className=\"temp_fourLaguageStick col-sm-2 px-1\">\r\n                                            |\r\n                                        </p>\r\n                                        <p className=\"temp_fourLangLevel col-sm-5 px-0\">\r\n                                            {language.level}\r\n                                        </p>\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                    </div>\r\n                    <div className=\"tempFour__line\"  style={{borderColor: selectedColor.colorSide}}></div>\r\n                    <div className=\"templateFour__righHeadingContainer\">\r\n                        <div className=\"templateFour__fieldsHeader\" style={{backgroundColor:selectedColor.colorHead, color: selectedColor.textColor}}>\r\n                           <p className=\"templateFour__lefHeadings\">driving licence</p> \r\n                        </div> \r\n                        {drLicences &&\r\n                                drLicences.map((drL, index)=>(\r\n                                    <div className=\"temp_fourDriving\" key={index}>\r\n                                         <p className=\"temp_fourDrivingTitle col-sm-5 px-0\">\r\n                                            CLASS\r\n                                        </p>\r\n                                        <p className=\"temp_fourDrivingStick col-sm-2 px-1\">\r\n                                            |\r\n                                        </p>\r\n                                        <p className=\"temp_fourDrivingLevel col-sm-5 px-0\">\r\n                                            {drL.title}\r\n                                        </p>\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                    </div>\r\n                </div>\r\n                <div className=\"templateFour__bodyRight\">\r\n                    <div className=\"templateFour__profile\">\r\n                        <div className=\"templateFour__bodyHeadings\">\r\n                            <p className=\"templateFour__bodyHeading\"  style={{color:selectedColor.colorHeadings}}>\r\n                               professional profile\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"tempThree__line\" style={{color:selectedColor.colorLine}}></div>\r\n                        \r\n                        <div className=\"templateThree__bodyContent\">\r\n                            <p>{profileInfo?.aboutMe}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"templateFour__experience\">\r\n                        <div className=\"templateFour__bodyHeadings\">\r\n                            <p className=\"templateFour__bodyHeading\" style={{color:selectedColor.colorHeadings}}>\r\n                                experience\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"tempThree__line\" style={{color:selectedColor.colorLine}}></div>\r\n                        {experiences &&\r\n                                experiences.map((experience, index) =>(\r\n\r\n                                    <div key={index} className=\"template__threeExpJobContainer\">\r\n                                    <div className=\"template__threeExpJobBox\">\r\n                                        <p className=\"template__threeExpJobTitle\">\r\n                                            {experience.jobTitle}\r\n                                        </p>\r\n                                    </div>\r\n                                    <div className=\"template__threeExpJobAddress\">\r\n                                        <p className=\"template__threeExpCompany\">\r\n                                            {experience.companyName}\r\n                                        </p>\r\n                                        <p className=\"template__threeExpDateDash\">\r\n                                            /\r\n                                        </p>\r\n                                        <p className=\"template__threeExpLocation\">\r\n                                        {experience.address}\r\n                                        </p>\r\n                                        <p className=\"template__threeExpDateDash\">\r\n                                            /\r\n                                        </p>\r\n                                        <div className=\"template__threeExpDate\">\r\n                                        <p className=\"template__threeExpStartDate\">\r\n                                            {experience.startYear}\r\n                                        </p>\r\n                                        <p className=\"template__threeExpDateDash\">\r\n                                            -\r\n                                        </p>\r\n                                        <p className=\"template__threeExpEndDate\">\r\n                                            {experience.endYear ? experience.endYear: \"To present\"}\r\n                                        </p>\r\n                                    </div>\r\n                                    </div>\r\n                                    <p className=\"template__threeProfessionalProfContent\">\r\n                                       {experience.aboutJob}\r\n                                    </p>\r\n                                    <p className=\"template__threeProfessionalProfContentResp\">\r\n                                        <ul className=\"template__threeProfessionalLists\">\r\n                                            {experience.projects.map((proj, index)=>(\r\n                                                <li key={index} className=\"template__threeProfessionalList\">\r\n                                                       {proj.project}\r\n                                                 </li> \r\n                                            ))}\r\n                                            \r\n                                           \r\n                                        </ul>\r\n                                    </p>\r\n                                    \r\n                                </div>\r\n\r\n                                ))\r\n                            }\r\n                    </div>\r\n                    <div className=\"templateFour__personalDev\">\r\n                        <div className=\"templateFour__bodyHeadings\">\r\n                            <p className=\"templateFour__bodyHeading\" style={{color:selectedColor.colorHeadings}}>\r\n                                personal development\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"tempThree__line\" style={{color:selectedColor.colorLine}}></div>\r\n                        <div className=\"templateFour__bodyContent\">\r\n                        {personalDevInfo && personalDevInfo.map((personal, index)=>(\r\n                            \r\n                            <div className=\"template__threeProfDevBox\" key={index}>\r\n                                <p className=\"template__threeExpJobTitle\">\r\n                                    {personal.theme}\r\n                                </p>\r\n                                <div>\r\n                                <div className=\"template__threeProfDevAddress\">\r\n                                    <p className=\"template__threeExpCompany\">\r\n                                    {personal.organizationName}\r\n                                    </p>\r\n                                    <p className=\"template__threeExpDateDash\">\r\n                                        /\r\n                                    </p>\r\n                                    <p className=\"template__threeExpLocation\">\r\n                                    {personal.address}\r\n                                    </p>   \r\n                                </div>\r\n                                <div className=\"template__threeExpDate\">\r\n                                    <p className=\"template__threeExpStartDate\">\r\n                                    {personal.year}\r\n                                    </p>\r\n                                </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                        )\r\n                       }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </div>                            \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TemplateFour\r\n","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\achivements\\AchievementForm.js",["251"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\keySkills\\KeySkillsSelect.js",["252"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\technicalSkills\\NewM.js",["253","254"],"import React, {useState, useContext} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {TechnicalSkillsContext} from \"../../../context/TechnicalSkillsContext\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport PropTypes from 'prop-types';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport NumberFormat from 'react-number-format';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport { withStyles, makeStyles} from '@material-ui/core/styles';\r\nimport {deleteTechSkill, saveTechSkills, getSelectedTechSkill, editTechSkill} from \"../../../stores/actions/technicalSkillsAction\";\r\nimport  \"../../../styles/TechSkills2.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n  }));\r\n  \r\n  const ValidationTextField = withStyles({\r\n    root: {\r\n      '& input:invalid + fieldset': {\r\n        borderColor: 'ff1100',\r\n        borderWidth: 2,\r\n      },\r\n    },\r\n  })(TextField);\r\n\r\nfunction TechSkills2() {\r\n    const dispatch = useDispatch();\r\n    const techskills = useSelector(state => state.technicalSkillsReducer.techSkillsList)\r\n    const selectedTechSkill = useSelector(state => state.technicalSkillsReducer.selectedTechSkill)\r\n    console.log(\"this is I select\",selectedTechSkill);\r\n\r\n    const {technicalSkills} = useContext(TechnicalSkillsContext);\r\n\r\n  const classes = useStyles();\r\n  const {control,reset } = useForm();\r\n\r\n  const initialState = {\r\n    id:\"\",\r\n    tech_skill:\"\",\r\n    tech_skill_rank:\"\"\r\n  }\r\n    const [techSkill, setTechSkill] = useState(initialState);\r\n    const [selected, setSelected] = useState(\"\");\r\n    const [editClicked, setEditClicked] = useState(false)\r\n\r\nconsole.log(\"TECHSKILL\", techSkill);\r\n\r\n\r\n\r\n    const onSubmit = (e) => {\r\n      e.preventDefault(); \r\n      if(techSkill.id===\"\"){\r\n        dispatch(saveTechSkills({...techSkill, ...{id:Date.now()}}))\r\n      }else{\r\n        dispatch(editTechSkill(techSkill))\r\n      }      \r\n      \r\n     e.target.reset();\r\n     setSelected(\"\")\r\n      setTechSkill(initialState)\r\n    };\r\n  \r\n    const handleRemoveTechSkill =(e, i)=>{\r\n      e.preventDefault()\r\n      dispatch(deleteTechSkill(i))\r\n    }\r\n    const handleEditTechSkill =(e,id)=>{\r\n      e.preventDefault()\r\n      setEditClicked(!editClicked)\r\n      dispatch(getSelectedTechSkill(id))\r\n     let selFromReducer = selectedTechSkill?.tech_skill\r\ntechnicalSkills.map(item =>(\r\n  item.title===selFromReducer? setSelected(item) : \"\"\r\n))\r\n      setTechSkill(selectedTechSkill)\r\n      // setTechSkill({tech_skill: selectedTechSkill.setech_skill, tech_skill_rank: selectedTechSkill.tech_skill_rank}\r\n    // )\r\n    }\r\n\r\n      const handleChange = (e)=>{\r\n      const {name,value} = e.target\r\n      setTechSkill({...techSkill, ...{tech_skill: selected?.title, tech_skill_rank:value}})\r\n      }\r\n      \r\n    return (\r\n        <div className=\"technical__skillsContainer\">\r\n          <div className=\"technical__skillsHeader\">\r\n            {techskills.length!==0 &&\r\n            techskills.map((sk, i) =>(\r\n               <div className=\"tech__skillbox\">\r\n                   <div className=\"tech__skillTitleBox\">\r\n                        <h5 className=\"tech__skillTitle\">{sk.tech_skill +\" \"+ sk.tech_skill_rank} %</h5>\r\n                   </div>\r\n                  <div className=\"tech_skillButtons\">\r\n                    <Fab size=\"small\" color=\"primary\" aria-label=\"edit\" onClick={e=>handleEditTechSkill(e, sk.id)}  className={classes.margin}>\r\n                        <EditIcon className=\"tech__skillEdit\"/>\r\n                    </Fab>\r\n                    <Fab size=\"small\" color=\"secondary\" aria-label=\"delete\" onClick={e=>handleRemoveTechSkill(e, i)} className={classes.margin}>\r\n                        <DeleteOutlineIcon className=\"tech__skillDelete\"/>\r\n                    </Fab>\r\n                  </div>\r\n                  \r\n              </div>\r\n            ))\r\n            }\r\n           \r\n          </div>\r\n            <form className=\"technical__skillsForm\" onSubmit={onSubmit} id=\"tech_skillsForm\" >\r\n                    <div className=\"special_box2\">\r\n                        <Controller\r\n                            render={({onChange, value}) =>\r\n                            <Autocomplete\r\n                                valiant=\"outlined\"\r\n                                options={technicalSkills}\r\n                                className=\"tech__skillsInput\"\r\n                                getOptionLabel={(option) => option.title}\r\n                                id={\"tech_skill\"}\r\n                                required\r\n                                name={\"tech_skill\"}\r\n                                defaultValue={techSkill?.tech_skill}\r\n                                value={selected}\r\n                                onChange={((e, newValue)=>{\r\n                                    setSelected(newValue)\r\n                                })\r\n                                }\r\n                                renderInput={(params) => (\r\n                                <TextField {...params} label=\"Technical Skill\" variant=\"outlined\" margin=\"normal\" />\r\n                                )}\r\n                            />\r\n                            }\r\n                            name={\"tech_skill\"}\r\n                           control={control}\r\n                           rules= {{required: true}}\r\n                           defaultValue={\"\"}\r\n                         /> \r\n                        <Controller\r\n                            render={({onChange, value}) =>\r\n                            <ValidationTextField\r\n                                label=\"Technical skill rank\"\r\n                                className=\"tech__skillsInput\"\r\n                                id=\"tech_rank\"\r\n                                defaultValue={\"\"}\r\n                                onChange={(e=>handleChange(e))}\r\n                                placeholder=\"from 1 to 100\"\r\n                                required\r\n                                value={techSkill?.tech_skill_rank}\r\n                                name=\"tech_skill_rank\"\r\n                                variant=\"outlined\"\r\n                                multiline\r\n                                InputProps={{\r\n                                inputComponent: NumberFormatCustom,\r\n                                }}\r\n                            />\r\n                            }\r\n                            name=\"tech_skill_rank\"\r\n                            control={control}\r\n                            rules= {{required: true}}\r\n                        /> \r\n                    </div>\r\n            <button type=\"submit\" className=\"btn btn-success btn-block mt-3\">save</button>\r\n            </form>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TechSkills2\r\n\r\n\r\n\r\nfunction NumberFormatCustom(props) {\r\n    const { inputRef, onChange, ...other } = props;\r\n  \r\n    return (\r\n      <NumberFormat\r\n        {...other}\r\n        getInputRef={inputRef}\r\n        onValueChange={(values) => {\r\n          onChange({\r\n            target: {\r\n              name: props.name,\r\n              value: values.value,\r\n            },\r\n          });\r\n        }}\r\n        minLength=\"4\"\r\n        maxLength=\"4\"\r\n        isNumericString\r\n      />\r\n    );\r\n  }\r\n  \r\n  NumberFormatCustom.propTypes = {\r\n    inputRef: PropTypes.func.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n  };","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\keySkillsAction.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\personalDevAction.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\education\\EducationForm.js",["255"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\createProfile\\ProfileForm.js",["256"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\experienceAction.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\contactInfoAction.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\i18nextConfig.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\pages\\Home.js",["257"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\pages\\Candidates.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\PageNotFound.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\rootReducer.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\JobSearchMain.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\templates\\TemplateOne.js",["258","259","260","261"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\colorReducer.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\CandidateSearchRight.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\JobSearchRight.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\ProgressBar.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\templates\\TemplateTwo.js",["262","263","264","265","266","267","268","269","270","271"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\personalDevelopment\\PersonalDevelopment.js",["272"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\technicalSkills\\TechnicalSkills.js",["273"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\experience\\ExperienceForm2.js",["274","275"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\technicalSkillsAction.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\PostView.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\languagesAction.js",["276","277","278","279","280","281"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\drivingLAction.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\tab\\TabForTemplates.js",[],{"ruleId":"282","severity":1,"message":"283","line":54,"column":29,"nodeType":"284","endLine":54,"endColumn":102},{"ruleId":"282","severity":1,"message":"283","line":61,"column":29,"nodeType":"284","endLine":61,"endColumn":102},{"ruleId":"285","severity":1,"message":"286","line":1,"column":16,"nodeType":"287","messageId":"288","endLine":1,"endColumn":26},{"ruleId":"289","replacedBy":"290"},{"ruleId":"291","replacedBy":"292"},{"ruleId":"285","severity":1,"message":"293","line":17,"column":31,"nodeType":"287","messageId":"288","endLine":17,"endColumn":42},{"ruleId":"294","severity":1,"message":"295","line":36,"column":3,"nodeType":"296","messageId":"297","endLine":36,"endColumn":32,"fix":"298"},{"ruleId":"285","severity":1,"message":"299","line":15,"column":11,"nodeType":"287","messageId":"288","endLine":15,"endColumn":18},{"ruleId":"285","severity":1,"message":"300","line":4,"column":8,"nodeType":"287","messageId":"288","endLine":4,"endColumn":19},{"ruleId":"285","severity":1,"message":"301","line":40,"column":13,"nodeType":"287","messageId":"288","endLine":40,"endColumn":14},{"ruleId":"285","severity":1,"message":"302","line":45,"column":11,"nodeType":"287","messageId":"288","endLine":45,"endColumn":18},{"ruleId":"285","severity":1,"message":"303","line":46,"column":54,"nodeType":"287","messageId":"288","endLine":46,"endColumn":63},{"ruleId":"285","severity":1,"message":"304","line":49,"column":12,"nodeType":"287","messageId":"288","endLine":49,"endColumn":22},{"ruleId":"285","severity":1,"message":"305","line":63,"column":11,"nodeType":"287","messageId":"288","endLine":63,"endColumn":20},{"ruleId":"285","severity":1,"message":"306","line":10,"column":10,"nodeType":"287","messageId":"288","endLine":10,"endColumn":15},{"ruleId":"285","severity":1,"message":"307","line":25,"column":17,"nodeType":"287","messageId":"288","endLine":25,"endColumn":25},{"ruleId":"308","severity":1,"message":"309","line":58,"column":6,"nodeType":"310","endLine":58,"endColumn":15,"suggestions":"311"},{"ruleId":"285","severity":1,"message":"312","line":13,"column":8,"nodeType":"287","messageId":"288","endLine":13,"endColumn":19},{"ruleId":"285","severity":1,"message":"313","line":14,"column":8,"nodeType":"287","messageId":"288","endLine":14,"endColumn":23},{"ruleId":"285","severity":1,"message":"314","line":1,"column":16,"nodeType":"287","messageId":"288","endLine":1,"endColumn":24},{"ruleId":"285","severity":1,"message":"315","line":11,"column":8,"nodeType":"287","messageId":"288","endLine":11,"endColumn":22},{"ruleId":"285","severity":1,"message":"316","line":11,"column":24,"nodeType":"287","messageId":"288","endLine":11,"endColumn":41},{"ruleId":"285","severity":1,"message":"317","line":20,"column":7,"nodeType":"287","messageId":"288","endLine":20,"endColumn":15},{"ruleId":"285","severity":1,"message":"318","line":33,"column":7,"nodeType":"287","messageId":"288","endLine":33,"endColumn":14},{"ruleId":"285","severity":1,"message":"319","line":35,"column":10,"nodeType":"287","messageId":"288","endLine":35,"endColumn":16},{"ruleId":"285","severity":1,"message":"320","line":83,"column":7,"nodeType":"287","messageId":"288","endLine":83,"endColumn":14},{"ruleId":"285","severity":1,"message":"321","line":42,"column":18,"nodeType":"287","messageId":"288","endLine":42,"endColumn":23},{"ruleId":"285","severity":1,"message":"322","line":88,"column":14,"nodeType":"287","messageId":"288","endLine":88,"endColumn":18},{"ruleId":"285","severity":1,"message":"323","line":40,"column":9,"nodeType":"287","messageId":"288","endLine":40,"endColumn":16},{"ruleId":"285","severity":1,"message":"324","line":32,"column":10,"nodeType":"287","messageId":"288","endLine":32,"endColumn":22},{"ruleId":"285","severity":1,"message":"325","line":3,"column":8,"nodeType":"287","messageId":"288","endLine":3,"endColumn":14},{"ruleId":"285","severity":1,"message":"315","line":11,"column":8,"nodeType":"287","messageId":"288","endLine":11,"endColumn":22},{"ruleId":"285","severity":1,"message":"316","line":11,"column":24,"nodeType":"287","messageId":"288","endLine":11,"endColumn":41},{"ruleId":"285","severity":1,"message":"317","line":20,"column":7,"nodeType":"287","messageId":"288","endLine":20,"endColumn":15},{"ruleId":"285","severity":1,"message":"318","line":33,"column":7,"nodeType":"287","messageId":"288","endLine":33,"endColumn":14},{"ruleId":"285","severity":1,"message":"326","line":3,"column":8,"nodeType":"287","messageId":"288","endLine":3,"endColumn":16},{"ruleId":"285","severity":1,"message":"327","line":4,"column":8,"nodeType":"287","messageId":"288","endLine":4,"endColumn":23},{"ruleId":"285","severity":1,"message":"328","line":5,"column":8,"nodeType":"287","messageId":"288","endLine":5,"endColumn":16},{"ruleId":"285","severity":1,"message":"329","line":6,"column":8,"nodeType":"287","messageId":"288","endLine":6,"endColumn":20},{"ruleId":"285","severity":1,"message":"330","line":7,"column":8,"nodeType":"287","messageId":"288","endLine":7,"endColumn":20},{"ruleId":"285","severity":1,"message":"331","line":8,"column":8,"nodeType":"287","messageId":"288","endLine":8,"endColumn":20},{"ruleId":"285","severity":1,"message":"332","line":9,"column":8,"nodeType":"287","messageId":"288","endLine":9,"endColumn":21},{"ruleId":"285","severity":1,"message":"315","line":15,"column":8,"nodeType":"287","messageId":"288","endLine":15,"endColumn":22},{"ruleId":"285","severity":1,"message":"316","line":15,"column":24,"nodeType":"287","messageId":"288","endLine":15,"endColumn":41},{"ruleId":"285","severity":1,"message":"317","line":24,"column":7,"nodeType":"287","messageId":"288","endLine":24,"endColumn":15},{"ruleId":"285","severity":1,"message":"319","line":32,"column":10,"nodeType":"287","messageId":"288","endLine":32,"endColumn":16},{"ruleId":"285","severity":1,"message":"333","line":34,"column":11,"nodeType":"287","messageId":"288","endLine":34,"endColumn":21},{"ruleId":"285","severity":1,"message":"334","line":44,"column":28,"nodeType":"287","messageId":"288","endLine":44,"endColumn":47},{"ruleId":"285","severity":1,"message":"335","line":59,"column":9,"nodeType":"287","messageId":"288","endLine":59,"endColumn":19},{"ruleId":"285","severity":1,"message":"336","line":24,"column":19,"nodeType":"287","messageId":"288","endLine":24,"endColumn":25},{"ruleId":"337","severity":1,"message":"338","line":28,"column":17,"nodeType":"339","messageId":"340","endLine":30,"endColumn":2},{"ruleId":"285","severity":1,"message":"336","line":44,"column":19,"nodeType":"287","messageId":"288","endLine":44,"endColumn":25},{"ruleId":"337","severity":1,"message":"338","line":47,"column":17,"nodeType":"339","messageId":"340","endLine":49,"endColumn":2},{"ruleId":"285","severity":1,"message":"336","line":63,"column":19,"nodeType":"287","messageId":"288","endLine":63,"endColumn":25},{"ruleId":"337","severity":1,"message":"338","line":66,"column":17,"nodeType":"339","messageId":"340","endLine":68,"endColumn":2},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","no-native-reassign",["341"],"no-negated-in-lhs",["342"],"'JobsContext' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property requestAnimationFrame.","MemberExpression","unexpectedWhitespace",{"range":"343","text":"344"},"'history' is assigned a value but never used.","'TemplateTwo' is defined but never used.","'t' is assigned a value but never used.","'postjob' is assigned a value but never used.","'formState' is assigned a value but never used.","'postedData' is assigned a value but never used.","'techSkill' is assigned a value but never used.","'sleep' is defined but never used.","'setCount' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'count'. Either include it or remove the dependency array.","ArrayExpression",["345"],"'TechSkills2' is defined but never used.","'TechnicalSkills' is defined but never used.","'useState' is defined but never used.","'progressColors' is assigned a value but never used.","'setProgressColors' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'options' is assigned a value but never used.","'values' is assigned a value but never used.","'jobList' is assigned a value but never used.","'reset' is assigned a value but never used.","'name' is assigned a value but never used.","'classes' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'Resume' is defined but never used.","'CallIcon' is defined but never used.","'MailOutlineIcon' is defined but never used.","'RoomIcon' is defined but never used.","'LinkedInIcon' is defined but never used.","'TelegramIcon' is defined but never used.","'FacebookIcon' is defined but never used.","'InstagramIcon' is defined but never used.","'techskills' is assigned a value but never used.","'setProjectInputList' is assigned a value but never used.","'experience' is assigned a value but never used.","'errMsg' is assigned a value but never used.","no-unreachable","Unreachable code.","BlockStatement","unreachableCode","no-global-assign","no-unsafe-negation",[1140,1142],".",{"desc":"346","fix":"347"},"Update the dependencies array to be: [t, i18n, count]",{"range":"348","text":"349"},[1758,1767],"[t, i18n, count]"]