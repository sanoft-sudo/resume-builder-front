[{"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\resumeAcardion\\CreateResumeAcardion.js":"1","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\imageUploader\\ImageUploader.js":"2","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\PostJobFields.js":"3","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\App.js":"4","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\keySkills\\KeySkillsSelect.js":"5","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\createContacts\\ContactInformation.js":"6","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\autocomleteInputs\\AutocompleteCountry.js":"7","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\PostView1.js":"8","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\obektivka\\ObektivkaFields.js":"9","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\tab\\TabForResumeAndObjective.js":"10","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\type.js":"11","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\obektivkaReducer.js":"12","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\rootReducer.js":"13","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\templates\\ObektivkaTable.js":"14","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\templates\\ObektivkaTemplate.js":"15","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\index.js":"16","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\store.js":"17","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\pages\\Home.js":"18","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\pages\\JobPost.js":"19","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\pages\\ResumeCreator.js":"20","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\PageNotFound.js":"21","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\context\\CountriesContext.js":"22","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\pages\\NavBar.js":"23","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\context\\KeySkillsContext.js":"24","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\timelines\\index.js":"25","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\JobSearchBanner.js":"26","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\CreateResumeMain.js":"27","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\contactReducer.js":"28","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\profileReducer.js":"29","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\drivingLReducer.js":"30","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\numbersReducer.js":"31","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\experienceReducer.js":"32","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\colorReducer.js":"33","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\CandidateSearchRight.js":"34","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\ColorPicker.js":"35","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\templates\\TemplateFour.js":"36","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\achivements\\AchievementForm.js":"37","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\education\\EducationForm.js":"38","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\experience\\ExperienceForm2.js":"39","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\technicalSkillsAction.js":"40","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\educationFormAction.js":"41","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\achievementsAction.js":"42","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\obektivkaAction.js":"43","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\postJobFieldsAction.js":"44","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\loginAndregister\\TabForRegister.js":"45","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\loginAndregister\\SignInWithGoogle.js":"46","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\datePicker\\MyDatePicker.js":"47","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\templates\\TemplateOne.js":"48"},{"size":3703,"mtime":1609868041985,"results":"49","hashOfConfig":"50"},{"size":3689,"mtime":1610783378299,"results":"51","hashOfConfig":"50"},{"size":28806,"mtime":1610653163968,"results":"52","hashOfConfig":"50"},{"size":3274,"mtime":1610299284718,"results":"53","hashOfConfig":"50"},{"size":3420,"mtime":1610299295482,"results":"54","hashOfConfig":"50"},{"size":7987,"mtime":1610312270550,"results":"55","hashOfConfig":"50"},{"size":2466,"mtime":1610433254735,"results":"56","hashOfConfig":"50"},{"size":3765,"mtime":1610532007378,"results":"57","hashOfConfig":"50"},{"size":8496,"mtime":1610787245592,"results":"58","hashOfConfig":"50"},{"size":2400,"mtime":1610579678044,"results":"59","hashOfConfig":"50"},{"size":3242,"mtime":1610578875228,"results":"60","hashOfConfig":"50"},{"size":1747,"mtime":1610716359099,"results":"61","hashOfConfig":"50"},{"size":1188,"mtime":1610579506979,"results":"62","hashOfConfig":"50"},{"size":2240,"mtime":1610665815906,"results":"63","hashOfConfig":"50"},{"size":5200,"mtime":1610712505807,"results":"64","hashOfConfig":"50"},{"size":624,"mtime":1607957875915,"results":"65","hashOfConfig":"50"},{"size":401,"mtime":1607957925720,"results":"66","hashOfConfig":"50"},{"size":265,"mtime":1607570600276,"results":"67","hashOfConfig":"50"},{"size":283,"mtime":1607519976555,"results":"68","hashOfConfig":"50"},{"size":276,"mtime":1609027524797,"results":"69","hashOfConfig":"50"},{"size":506,"mtime":1607305531654,"results":"70","hashOfConfig":"50"},{"size":967,"mtime":1608294171820,"results":"71","hashOfConfig":"50"},{"size":3107,"mtime":1607723413984,"results":"72","hashOfConfig":"50"},{"size":806,"mtime":1608282463429,"results":"73","hashOfConfig":"50"},{"size":1371,"mtime":1607369521943,"results":"74","hashOfConfig":"50"},{"size":5787,"mtime":1608462938414,"results":"75","hashOfConfig":"50"},{"size":957,"mtime":1610570065060,"results":"76","hashOfConfig":"50"},{"size":440,"mtime":1608007951887,"results":"77","hashOfConfig":"50"},{"size":901,"mtime":1608783678202,"results":"78","hashOfConfig":"50"},{"size":487,"mtime":1608538641150,"results":"79","hashOfConfig":"50"},{"size":341,"mtime":1608693154463,"results":"80","hashOfConfig":"50"},{"size":535,"mtime":1608573183375,"results":"81","hashOfConfig":"50"},{"size":1231,"mtime":1608987001844,"results":"82","hashOfConfig":"50"},{"size":379,"mtime":1607739982059,"results":"83","hashOfConfig":"50"},{"size":1039,"mtime":1608901275408,"results":"84","hashOfConfig":"50"},{"size":21605,"mtime":1609028329664,"results":"85","hashOfConfig":"50"},{"size":6604,"mtime":1608638732787,"results":"86","hashOfConfig":"50"},{"size":6116,"mtime":1610850345236,"results":"87","hashOfConfig":"50"},{"size":10216,"mtime":1610851163419,"results":"88","hashOfConfig":"50"},{"size":709,"mtime":1608747338824,"results":"89","hashOfConfig":"50"},{"size":407,"mtime":1608067872380,"results":"90","hashOfConfig":"50"},{"size":384,"mtime":1608427100289,"results":"91","hashOfConfig":"50"},{"size":356,"mtime":1610579896667,"results":"92","hashOfConfig":"50"},{"size":386,"mtime":1607999431285,"results":"93","hashOfConfig":"50"},{"size":2292,"mtime":1609596030179,"results":"94","hashOfConfig":"50"},{"size":1041,"mtime":1609595069409,"results":"95","hashOfConfig":"50"},{"size":4469,"mtime":1610848477969,"results":"96","hashOfConfig":"50"},{"size":32392,"mtime":1610849677266,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"101"},"kieyu0",{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"101"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"101"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":1,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198"},"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\resumeAcardion\\CreateResumeAcardion.js",["199","200"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport \"../../../styles/CreateResumeAcardion.css\";\r\nimport ProfileForm from \"../createProfile/ProfileForm\";\r\nimport ContactInformation from \"../createContacts/ContactInformation\"\r\nimport EducationForm from '../education/EducationForm';\r\nimport ExperienceForm2 from '../experience/ExperienceForm2';\r\nimport NewM from \"../technicalSkills/NewM\";\r\nimport TechSkills2 from \"../technicalSkills/TechSkills2\";\r\nimport TechnicalSkills from \"../technicalSkills/TechnicalSkills\";\r\nimport KeySkillsSelect from '../keySkills/KeySkillsSelect';\r\nimport AchievementForm from '../achivements/AchievementForm';\r\nimport LanguageForm from '../languageFrom/LanguageForm';\r\nimport DrivingLicence from '../drivingL/DrivingLicence';\r\nimport PersonalDevelopment from '../personalDevelopment/PersonalDevelopment';\r\nimport ImageUploader from '../imageUploader/ImageUploader';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n}));\r\nconst fields = [\r\n    {id: \"aa\", label: \"Profile image\", icon: <i class=\"fas fa-camera\"></i>,\r\n    data: <ImageUploader/>},\r\n    {id: \"ab\", label: \"Personal information\", icon: <i class=\"fas fa-user\"></i>,\r\n    data: <ProfileForm/>},\r\n    {id: \"cb\", label: \"Contact information\", icon: <i class=\"far fa-address-book\"></i>,\r\n    data: <ContactInformation/>},\r\n    {id: \"db\", label: \"Education\", icon: <i class=\"fas fa-user-graduate\"></i>,\r\n    data: <EducationForm/>},\r\n    {id: \"eb\", label: \"Experience\", icon: <i class=\"fas fa-suitcase\"></i>,\r\n    data: <ExperienceForm2/>},\r\n    {id: \"fb\", label: \"Key Skills\", icon: <i class=\"fas fa-shapes\"></i>,\r\n    data: <KeySkillsSelect/>},\r\n    {id: \"gb\", label: \"Technical Skills\", icon: <i class=\"fas fa-chart-bar\"></i>,\r\n    data: <NewM/>},\r\n    {id: \"hb\", label: \"Achievements\", icon: <i class=\"fas fa-award\"></i>,\r\n    data: <AchievementForm/>},\r\n    {id: \"ib\", label: \"Languages\", icon: <i class=\"fas fa-language\"></i>,\r\n    data: <LanguageForm/>},\r\n    {id: \"Jb\", label: \"Driving licence\", icon: <i class=\"far fa-address-card\"></i>,\r\n    data: <DrivingLicence/>},\r\n    {id: \"kb\", label: \"Personal Development\", icon: <i class=\"fas fa-chart-line\"></i>,\r\n    data: <PersonalDevelopment/>},\r\n   \r\n\r\n]\r\n function CreateResumeAcardion() {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleChange = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"container-fluild\">\r\n       <div className={classes.root}>\r\n        {fields?.map((field, index) =>(\r\n            <Accordion key={index} expanded={expanded === \"panel\"+field.id} onChange={handleChange(\"panel\"+field.id)}>\r\n                <AccordionSummary\r\n                expandIcon={field.icon}\r\n                aria-controls={\"panel\"+field.id +\"bh-content\"}\r\n                id={\"panel\"+field.id+\"bh-header\"}\r\n                >\r\n                <Typography className={classes.heading}>{field.label}</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                  \r\n                   {field.data}\r\n                </AccordionDetails>\r\n            </Accordion>\r\n        ))}\r\n    </div>\r\n    </div>\r\n   \r\n  );\r\n}\r\n\r\nexport default CreateResumeAcardion;",["201","202"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\imageUploader\\ImageUploader.js",["203","204"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\PostJobFields.js",["205","206","207","208","209","210"],"import React, { useState, useContext, useRef}  from 'react';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport \"../styles/PostJobFields.css\";\r\nimport PostView1 from './PostView1';\r\nimport Select from \"react-select\"\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {savePostJob} from \"../stores/actions/postJobFieldsAction\"\r\nimport AutocompleteCountry from './autocomleteInputs/AutocompleteCountry';\r\nimport { withStyles, makeStyles} from '@material-ui/core/styles';\r\nimport { TextValidator, ValidatorForm } from \"react-material-ui-form-validator\";\r\nimport {KeySkillsContext} from \"../context/KeySkillsContext\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select2 from '@material-ui/core/Select';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport PropTypes from 'prop-types';\r\nimport NumberFormat from 'react-number-format';\r\n\r\n  const ValidationTextField = withStyles({\r\n    root: {\r\n      '& input:valid + fieldset': {\r\n        borderColor: '#00ba5a',\r\n        borderWidth: 2,\r\n      },\r\n      '& input:invalid + fieldset': {\r\n        borderColor: 'ff1100',\r\n        borderWidth: 2,\r\n      },\r\n      '& input:valid:focus + fieldset': {\r\n        borderLeftWidth: 6,\r\n        padding: '8px !important', // override inline-style\r\n      },\r\n    },\r\n  })(TextValidator);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\nfunction NumberFormatCustom(props) {\r\n    const { inputRef, onChange, ...other } = props;\r\n  \r\n    return (\r\n      <NumberFormat\r\n        {...other}\r\n        getInputRef={inputRef}\r\n        onValueChange={(values) => {\r\n          onChange({\r\n            target: {\r\n              name: props.name,\r\n              value: values.value,\r\n            },\r\n          });\r\n        }}\r\n        thousandSeparator\r\n        isNumericString\r\n      />\r\n    );\r\n  }\r\n  \r\n  NumberFormatCustom.propTypes = {\r\n    inputRef: PropTypes.func.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n  };\r\n\r\nfunction PostJobFields() {\r\n    const { register, errors, handleSubmit, control, formState } = useForm();\r\n    const { t } = useTranslation();\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n  const {keySkills} = useContext(KeySkillsContext)\r\n    const techskills = useSelector(state => state.technicalSkillsReducer.techSkillsList)\r\n    const formRef = useRef()\r\n    const [ postForm, setPostForm] = useState({})\r\n    const [phone, setPhone] = useState('');\r\n    const [checked, setChecked] = useState(false);\r\n    const [selRegions, setSelRegions] = useState([])\r\n    const [languagesList, setLanguagesList] = useState([])\r\n\r\n    console.log(\"selected regions\", selRegions);\r\n    const toggleChecked = () => {\r\n      setChecked((prev) => !prev);\r\n    };\r\n    const handleInputChange = (event) =>{\r\n        setPostForm({\r\n            ...postForm,\r\n        ...{[event.target.name]: event.target.value}\r\n        })\r\n    }\r\n    console.log(\"post form >>>>\",postForm);\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePostJob(postForm))\r\n        // e.target.reset();\r\n        setPhone(\"\")\r\n    }\r\n    const allRegions = [\r\n        { id: '000001', name: \"Andijan\" },\r\n        { id: '000002', name: \"Bukhoro\" },\r\n        { id: '000003', name: \"Fergana\" },\r\n        { id: '000004', name: \"Gulistan(Sirdaryo)\" },\r\n        { id: '000005', name: \"Jizzakh\" },\r\n        { id: '000006', name: \"Khorezm\" },\r\n        { id: '000007', name: \"Namangan\" },\r\n        { id: '000008', name: \"Navai\" },\r\n        { id: '000009', name: \"Qashqadarya\" },\r\n        { id: '000010', name: \"Qaraqalpakistan\" },\r\n        { id: '000011', name: \"Samarqand\" },\r\n        { id: '000012', name: \"Surkhandarya\" },\r\n        { id: '000013', name: \"Tashkent\" },\r\n        ]\r\n    const languages = [\r\n        {id: 'uz',  name: \"Uzbek\"},\r\n        {id: 'ru',  name: \"Russian\"},\r\n        {id: 'en',  name: \"English\"}\r\n    ]\r\n    \r\n    return (\r\n            <div id=\"jobPostFields\">\r\n                <div className=\"jobpost__bg\">\r\n                        <h2 className=\"jobpost__title\">Create your account to post your job</h2>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6 fromFields\">\r\n                            <ValidatorForm\r\n                                ref={formRef}\r\n                                className=\"jobpost__form\" id=\"jobfields\" onSubmit={onSubmit}\r\n                                onError={(errors) => console.log(errors)}\r\n                                noValidate\r\n                            >              \r\n                                \r\n                                <ValidationTextField\r\n                                    style={{marginBottom:\"30px\"}}\r\n                                    className={\"profileInfoF\"}\r\n                                    label=\"Company\"\r\n                                    required\r\n                                    placeholder=\"Your company name\"\r\n                                    multiline\r\n                                    // defaultValue={fromFields.firstName}\r\n                                    value={postForm.company}\r\n                                    onChange={e => handleInputChange(e)}\r\n                                    variant=\"outlined\"\r\n                                    id=\"company\"\r\n                                    name=\"company\"\r\n                                    validators={[\"required\"]}\r\n                                    errorMessages={[\"Company name is required\"]}\r\n                                />\r\n                                          \r\n                                <ValidationTextField\r\n                                    style={{marginBottom:\"30px\"}}\r\n                                    className={\"profileInfoF\"}\r\n                                    label=\"Full name\"\r\n                                    required\r\n                                    placeholder=\"Sanjar Juraev\"\r\n                                    multiline\r\n                                    // defaultValue={fromFields.firstName}\r\n                                    value={postForm.fullName}\r\n                                    onChange={e => handleInputChange(e)}\r\n                                    variant=\"outlined\"\r\n                                    id=\"fullName\"\r\n                                    name=\"fullName\"\r\n                                    validators={[\"required\"]}\r\n                                    errorMessages={[\"Full name is required\"]}\r\n                                />\r\n                                          \r\n                                <ValidationTextField\r\n                                    style={{marginBottom:\"30px\"}}\r\n                                    className={\"pofileInfoF\"}\r\n                                    label=\"Email\"\r\n                                    required\r\n                                    placeholder=\"123@example.com\"\r\n                                    multiline\r\n                                    variant=\"outlined\"\r\n                                    label=\"Email\"\r\n                                    onChange={e => handleInputChange(e)}\r\n                                    name=\"email\"\r\n                                    type=\"email\"\r\n                                    value={postForm.email}\r\n                                    validators={[\"required\", \"isEmail\"]}\r\n                                    errorMessages={[\"this field is required\", \"email is not valid\"]}\r\n                                    fullWidth\r\n                                />\r\n                                          \r\n                                <Controller\r\n                                    as={\r\n                                        <PhoneInput\r\n                                            inputProps={{\r\n                                            name: 'phone',\r\n                                            required: true,\r\n                                            autoFocus: true\r\n                                            }}\r\n                                            country={'uz'}\r\n                                            value={phone ? postForm.phone=phone:''}\r\n                                            onChange={()=> setPhone(phone)}\r\n                                            ref={register({\r\n                                                required: true\r\n                                            })}\r\n                                        /> }\r\n                                        name=\"phone\"\r\n                                        control={control}\r\n                                        rules= {{required: true}}\r\n                                /> \r\n                                <AutocompleteCountry/>\r\n                                <AutocompleteCountry/>\r\n                                <AutocompleteCountry/>\r\n\r\n                                <ValidationTextField\r\n                                    style={{marginBottom:\"30px\"}}\r\n                                    className={\"pofileInfoF\"}\r\n                                    label=\"Street and house\"\r\n                                    required\r\n                                    placeholder=\"123 Main Street\"\r\n                                    multiline\r\n                                    // defaultValue={fromFields.firstName}\r\n                                    value={postForm.address_street}\r\n                                    onChange={e => handleInputChange(e)}\r\n                                    variant=\"outlined\"\r\n                                    id=\"street\"\r\n                                    name=\"address_street\"\r\n                                    validators={[\"required\"]}\r\n                                    errorMessages={[\"This field is required\"]}\r\n                                />\r\n                                <ValidationTextField\r\n                                    style={{marginBottom:\"30px\"}}         \r\n                                    className={\"profileInfoF\"}\r\n                                    label=\"Job title\"\r\n                                    required\r\n                                    placeholder=\"Front-end developer\"\r\n                                    multiline\r\n                                    // defaultValue={fromFields.firstName}\r\n                                    value={postForm.jobTitle}\r\n                                    onChange={e => handleInputChange(e)}\r\n                                    variant=\"outlined\"\r\n                                    id=\"jobTitle\"\r\n                                    name=\"jobTitle\"\r\n                                    validators={[\"required\"]}\r\n                                    errorMessages={[\"This field is required\"]}\r\n                                />\r\n                                \r\n                                <FormLabel component=\"legend\" style={{fontWeight:700, color:\"#000\"}}>Where will employee work? <span className=\"required\">*</span></FormLabel> \r\n                                        <RadioGroup aria-label=\"position\" className=\"radios\"  name=\"workplace\" onChange={e => handleInputChange(e)} >\r\n                                            <FormControlLabel\r\n                                            name=\"workplace\" \r\n                                            value=\"At Office\"\r\n                                            control={<Radio color=\"primary\" />}\r\n                                            label=\"At office\"\r\n                                            labelPlacement=\"end\"\r\n                                            />\r\n                                            <FormControlLabel\r\n                                            name=\"workplace\" \r\n                                            value=\"Multi Location\"\r\n                                            control={<Radio color=\"primary\" />}\r\n                                            label=\"Multi Location\"\r\n                                            labelPlacement=\"end\"\r\n                                            />\r\n                                            <FormControlLabel\r\n                                            name=\"workplace\" \r\n                                            value=\"Fully Remote\"\r\n                                            control={<Radio color=\"primary\" />}\r\n                                            label=\"Full Remote\"\r\n                                            labelPlacement=\"end\"\r\n                                            />\r\n                                            <FormControlLabel \r\n                                            name=\"workplace\" \r\n                                            value=\"On The Road\" \r\n                                            control={<Radio color=\"primary\" />} \r\n                                            label=\"On The Road\" \r\n                                            />\r\n                                        </RadioGroup>\r\n                                \r\n                                <div className=\"radios\">\r\n                                \r\n                                    <Autocomplete\r\n                                        style={{marginBottom:\"30px\"}}\r\n                                        className=\"keySkills__autocomlete\"\r\n                                        multiple\r\n                                        id=\"tags-outlined\"\r\n                                        options={allRegions}\r\n                                        required\r\n                                        getOptionLabel={(option) => option.name}\r\n                                        getOptionSelected={(option, value) => option.name === value.name }\r\n                                        defaultValue={[]}\r\n                                        filterSelectedOptions\r\n                                        // onChange={(e, value) => handleChange(e, value)}\r\n                                        value={selRegions ? postForm.adRegion=selRegions:\"\"}\r\n                                        onChange={(event, newValue) => {\r\n                                          setSelRegions([\r\n                                            ...newValue,\r\n                                          ]);\r\n                                        }}\r\n                                        renderInput={(params) => (\r\n                                        <TextField\r\n                                            {...params}\r\n                                            variant=\"outlined\"\r\n                                            label=\"Select region to advert\"\r\n                                            placeholder=\"Tashkent...\"\r\n                                            validators={[\"required\"]}\r\n                                            errorMessages={[\"This field is required\"]}\r\n                                      />\r\n                                    )}\r\n                                    />    \r\n                                </div>\r\n                                \r\n                                <FormLabel component=\"legend\" style={{fontWeight:700, color:\"#000\"}}>Is this job full time or part time?<span className=\"required\">*</span></FormLabel> \r\n                                        <RadioGroup aria-label=\"position\" className=\"radios\" onChange={e => handleInputChange(e)} name=\"jobCondition\" >\r\n                                            <FormControlLabel\r\n                                            name=\"jobCondition\" \r\n                                            value=\"Full Time\"\r\n                                            control={<Radio color=\"primary\" />}\r\n                                            label=\"Full Time\"\r\n                                            labelPlacement=\"end\"\r\n                                            />\r\n                                            <FormControlLabel\r\n                                            name=\"jobCondition\" \r\n                                            value=\"Part Time\"\r\n                                            control={<Radio color=\"primary\" />}\r\n                                            label=\"Part Time\"\r\n                                            labelPlacement=\"end\"\r\n                                            />\r\n                                            <FormControlLabel\r\n                                            name=\"jobCondition\" \r\n                                            value=\"Part And Full Time\"\r\n                                            control={<Radio color=\"primary\" />}\r\n                                            label=\"Either full-time or part-time\"\r\n                                            labelPlacement=\"end\"\r\n                                            />\r\n                                            \r\n                                        </RadioGroup>\r\n                                \r\n                                <FormLabel component=\"legend\" style={{fontWeight:700, color:\"#000\"}}>Are these additional job types that apply?<span className=\"required\">*</span></FormLabel> \r\n                                        <RadioGroup aria-label=\"position\" className=\"radios\" onChange={e => handleInputChange(e)} name=\"jobType\" >\r\n                                            <FormControlLabel\r\n                                            name=\"jobType\" \r\n                                            value=\"internship\"\r\n                                            control={<Radio color=\"primary\" />}\r\n                                            label=\"Internship\"\r\n                                            labelPlacement=\"end\"\r\n                                            />\r\n                                            <FormControlLabel\r\n                                            name=\"jobType\" \r\n                                            value=\"temporary\"\r\n                                            control={<Radio color=\"primary\" />}\r\n                                            label=\"Temporary\"\r\n                                            labelPlacement=\"end\"\r\n                                            />\r\n                                            <FormControlLabel\r\n                                            name=\"jobType\" \r\n                                            value=\"contract\"\r\n                                            control={<Radio color=\"primary\" />}\r\n                                            label=\"Contract\"\r\n                                            labelPlacement=\"end\"\r\n                                            />\r\n                                            \r\n                                        </RadioGroup>\r\n                               \r\n                                <label name=\"salaryLabel\" htmlFor=\"salfrom\">Salary</label>\r\n\r\n                                <div className=\"salary_inputs\">\r\n                                <div className=\"row salary_box\">\r\n                                    <div className=\"col-md-4 inp\">\r\n                                  \r\n                                        <ValidationTextField\r\n                                            className={\"pofileInfoF\"}\r\n                                            // required\r\n                                            placeholder=\"10\"\r\n                                            multiline\r\n                                            variant=\"outlined\"\r\n                                            label=\"Salary from\"\r\n                                            onChange={e => handleInputChange(e)}\r\n                                            name=\"fromSalary\"\r\n                                            // type=\"number\"\r\n                                            value={postForm.fromSalary}\r\n                                            InputProps={{\r\n                                                inputComponent: NumberFormatCustom,\r\n                                              }}\r\n                                            validators={['minNumber:0', 'maxNumber:10000000000', 'required']}\r\n                                            errorMessages={[\"this field is required\"]}\r\n                                            fullWidth\r\n                                        />\r\n                                           \r\n                                    </div>\r\n                                    <div className=\"col-md-4 inp\">\r\n                                 \r\n                                        <ValidationTextField\r\n                                            className={\"pofileInfoF\"}\r\n                                            // required\r\n                                            placeholder=\"15\"\r\n                                            multiline\r\n                                            variant=\"outlined\"\r\n                                            label=\"Salary to\"\r\n                                            onChange={e => handleInputChange(e)}\r\n                                            name=\"toSalary\"\r\n                                            // type=\"number\"\r\n                                            value={postForm.toSalary}\r\n                                            InputProps={{\r\n                                                inputComponent: NumberFormatCustom,\r\n                                              }}\r\n                                            validators={['minNumber:1', 'maxNumber:10000000000', 'required']}\r\n                                            errorMessages={[\"this field is required\"]}\r\n                                            fullWidth\r\n                                        />\r\n                                          \r\n                                    </div>\r\n                                    <div className=\"col-md-4 inp\">\r\n                                        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                                            <InputLabel id=\"demo-simple-select-outlined-label\">Salary type</InputLabel>\r\n                                            <Select2\r\n                                            labelId=\"demo-simple-select-outlined-label\"\r\n                                            id=\"demo-simple-select-outlined\"\r\n                                            value={postForm.salaryType}\r\n                                            name=\"salaryType\"\r\n                                            onChange={e => handleInputChange(e)}\r\n                                            label=\"Salary type\"\r\n                                            >\r\n                                                <MenuItem value=\"per_hour\">per hour</MenuItem>\r\n                                                <MenuItem value=\"per_day\">per day</MenuItem>\r\n                                                <MenuItem value=\"per_month\">per month</MenuItem>\r\n                                                <MenuItem value=\"per_year\">per year</MenuItem>\r\n                                            </Select2>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"nightShift\">\r\n                                    <FormGroup>\r\n                                        <FormControlLabel\r\n                                            control={<Switch checked={checked} color=\"primary\" \r\n                                            defaultValue={checked} \r\n                                            name=\"isNightShift\" \r\n                                            onChange={toggleChecked} \r\n                                            value={!checked? postForm.jobShift=\"Day job\" : postForm.jobShift=\"Night job\"}\r\n                                            />}\r\n                                            label={checked? \"Nightshift\" : \"Dayshift\"}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </div>\r\n                                <div className=\"additional\">\r\n                                    <label name=\"aboutJob\" htmlFor=\"aboutJob\">About job </label>\r\n                                    <textarea name=\"aboutJob\" id=\"aboutJob\" cols=\"30\" rows=\"7\" onChange={e => handleInputChange(e)}></textarea>\r\n                                    <label name=\"addReqLabel\" htmlFor=\"addRequirement\">Additional requirements(if needed) </label>\r\n                                    <textarea name=\"addRequirement\" id=\"addRequirement\" cols=\"30\" rows=\"7\"onChange={e => handleInputChange(e)} ></textarea>\r\n                                </div>\r\n                                <div>\r\n                                <label className=\"language__title\">Skills</label>\r\n                               \r\n                                <Select\r\n                                    defaultValue={[]}\r\n                                    isMulti\r\n                                    name=\"skills\"\r\n                                    options={techskills}\r\n                                    className=\"basic-multi-select\"\r\n                                    classNamePrefix=\"select\"\r\n                                    // onChange={e => handleInputChange(e)}\r\n                                />\r\n                               \r\n                                <label className=\"language__title\">Languages</label>\r\n                                \r\n                                <Autocomplete\r\n                                        style={{marginBottom:\"30px\"}}\r\n                                        className=\"keySkills__autocomlete\"\r\n                                        multiple\r\n                                        id=\"tags-outlined\"\r\n                                        options={languages}\r\n                                        required\r\n                                        getOptionLabel={(option) => option.name}\r\n                                        getOptionSelected={(option, value) => option.name === value.name }\r\n                                        defaultValue={[]}\r\n                                        filterSelectedOptions\r\n                                        value={languagesList ? postForm.languages=languagesList:\"\"}\r\n                                        onChange={(event, newValue) => {\r\n                                          setLanguagesList([\r\n                                            ...newValue,\r\n                                          ]);\r\n                                        }}\r\n                                        renderInput={(params) => (\r\n                                        <TextField\r\n                                            {...params}\r\n                                            variant=\"outlined\"\r\n                                            label=\"Select language\"\r\n                                            placeholder=\"Uzbek\"\r\n                                            validators={[\"required\"]}\r\n                                            errorMessages={[\"This field is required\"]}\r\n                                      />\r\n                                    )}\r\n                                    />    \r\n                                   \r\n                                </div>\r\n                                    \r\n                                </div>\r\n                                <button htmlFor=\"jobfields\" className=\" btn btn-success postJobFieldButton mt-5\" type=\"submit\">Save and Post</button>\r\n                            </ValidatorForm>\r\n                                \r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <PostView1/>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                </div>\r\n                {\r\n                    \r\n                }\r\n        </div>\r\n    )\r\n  \r\n}\r\n\r\nexport default PostJobFields\r\n","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\App.js",["211"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\keySkills\\KeySkillsSelect.js",["212"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\createContacts\\ContactInformation.js",["213","214","215","216"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\autocomleteInputs\\AutocompleteCountry.js",["217","218","219"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\PostView1.js",["220"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\obektivka\\ObektivkaFields.js",["221","222","223","224","225","226","227","228","229","230"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\tab\\TabForResumeAndObjective.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\type.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\obektivkaReducer.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\rootReducer.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\templates\\ObektivkaTable.js",["231","232"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\n\r\n\r\nexport default function ObektivkaTable() {\r\n    const { t } = useTranslation();\r\n    const obektiv = useSelector(state => state.obektivkaReducer.obektiv)\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Qarindoshligi</TableCell>\r\n            <TableCell align=\"center\">Familiyasi, ismi va otasining ismi</TableCell>\r\n            <TableCell align=\"center\">Tug'ilgan yili va joyi</TableCell>\r\n            <TableCell align=\"center\">Ishjoyi va lavozimi</TableCell>\r\n            <TableCell align=\"center\">Turar joyi</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {obektiv.relationship && obektiv.relationship.map((rel) => (\r\n            <TableRow key={rel.name}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {rel.relative}\r\n              </TableCell>\r\n              <TableCell align=\"center\">{rel.relativeName}</TableCell>\r\n              <TableCell align=\"center\">{rel.relBirthDate} yil, {rel.relBirthPlaceState}, {rel.relBirthPlaceCity}, {rel.relBirthPlaceDistrict}</TableCell>\r\n              <TableCell align=\"center\">{rel.isRetierd===true?\"Nafaqada\":\"\"} {rel.relJobPlace}, {rel.relJob}</TableCell>\r\n              <TableCell align=\"center\">{rel.relResidenceRegion}, {rel.relResidenceCity}, {rel.relResidenceDistrict}, {rel.relResidenceStreet}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\templates\\ObektivkaTemplate.js",["233","234"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\index.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\store.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\pages\\Home.js",["235"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\pages\\JobPost.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\pages\\ResumeCreator.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\PageNotFound.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\context\\CountriesContext.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\pages\\NavBar.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\context\\KeySkillsContext.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\timelines\\index.js",["236"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\JobSearchBanner.js",["237"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\CreateResumeMain.js",["238","239","240"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\contactReducer.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\profileReducer.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\drivingLReducer.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\numbersReducer.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\experienceReducer.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\colorReducer.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\CandidateSearchRight.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\ColorPicker.js",["241"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\templates\\TemplateFour.js",["242","243","244","245"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\achivements\\AchievementForm.js",["246"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\education\\EducationForm.js",["247","248","249","250","251"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\experience\\ExperienceForm2.js",["252","253","254","255","256","257"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\technicalSkillsAction.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\educationFormAction.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\achievementsAction.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\obektivkaAction.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\postJobFieldsAction.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\loginAndregister\\TabForRegister.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\loginAndregister\\SignInWithGoogle.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\datePicker\\MyDatePicker.js",["258","259","260","261","262"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\templates\\TemplateOne.js",["263","264","265","266","267","268","269","270","271","272","273","274"],"import React, {createRef, useState} from 'react';\r\nimport \"./templateStyles/TemplateOne.css\";\r\nimport ProgressBar from '../components/ProgressBar';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Pdf from \"react-to-pdf\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Timeline from '@material-ui/lab/Timeline';\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\r\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\nimport TimelineDot from '@material-ui/lab/TimelineDot';\r\nimport { Document, Page, Text, View, StyleSheet } from '@react-pdf/renderer';\r\nimport moment from \"moment\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    secondaryTail: {\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n  }));\r\n\r\n\r\n\r\nfunction TemplateOne() {\r\n    const classes = useStyles();\r\nconst [progressColors, setProgressColors] = useState([\r\n    {id:777, color: \"#6a1b9a\"},\r\n    {id:888, color: \"#32a852\"},\r\n    {id:999, color: \"#3250a8\"},\r\n    {id:666, color: \"#dbd144\"},\r\n    {id:555, color: \"#c42121\"},\r\n])\r\nconst ref = createRef();\r\n\r\nconst dispatch = useDispatch();\r\nconst profileInfo = useSelector(state => state.profileReducer.profileInfo);\r\nconst contact = useSelector(state => state.contactReducer.contact);\r\nconst educations = useSelector(state => state.educationReducer.educations)\r\nconst experiences = useSelector(state => state.experienceReducer.experiences)\r\nconst keyskillsList = useSelector(state => state.keySkillsReducer.keyskillsList)\r\nconst techSkillsList = useSelector(state => state.technicalSkillsReducer.techSkillsList)\r\nconst achievements = useSelector(state => state.achievementsReducer.achievements)\r\nconst languagesList = useSelector(state => state.languagesReducer.languagesList)\r\nconst drLicences = useSelector(state => state.drivingLReducer.drLicences)\r\nconst personalDevInfo  = useSelector(state => state.personalDevReducer.personalDevInfo);\r\nconst selectedColor = useSelector(state => state.colorReducer.selectedColor)\r\nconsole.log(\"Language+flag>>>>\", languagesList);\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"templateFirst__container\">\r\n                <div className=\"templateFirst__header\" style={{backgroundColor:selectedColor.colorSide, color: selectedColor.textColor}}>\r\n                    <div className=\"templateFirst__headerContacts\">\r\n                    {contact.address ? (\r\n                                <div className=\"templateFirst__rightContact\">\r\n                                    <i class=\"fas fa-home\"  style={{color: selectedColor.textColor}}></i>\r\n                                    <p className=\"contact__titlesFour\">\r\n                                        {contact.address}\r\n                                    </p>\r\n                                </div>\r\n                            ):\"\"}\r\n                            {contact.email ? (\r\n                                <div className=\"templateFirst__rightContact\">\r\n                                   <i class=\"far fa-envelope\"  style={{color: selectedColor.textColor}}></i>\r\n                                    <p className=\"contact__titlesFour\">\r\n                                        {contact.email}\r\n                                    </p>\r\n                                </div>\r\n                            ):\"\"}\r\n                            {contact.phone ? (\r\n                                <div className=\"templateFirst__rightContact\">\r\n                                    <i class=\"fas fa-phone-square-alt\"  style={{color: selectedColor.textColor}}></i>\r\n                                    <p className=\"contact__titlesFour\">\r\n                                        {contact.phone}\r\n                                    </p>\r\n                                </div>\r\n                            ):\"\"}\r\n                    </div>\r\n                    <div className=\"templateFirst__headerName\">\r\n                        <div className=\"templateFirst__headerProfile\">\r\n                            <p className=\"templateFirst__headerFullName\">\r\n                            {profileInfo.firstName && profileInfo?.firstName+\" \"+ profileInfo?.lastName}\r\n                            </p>\r\n                            {/* <p className=\"templateFirst__headerJobTitle\">\r\n                            {profileInfo?.currentJob}\r\n                            </p> */}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"templateFirst__headerSocials\">\r\n                    {contact.facebook ? (\r\n                                <div className=\"social__contactsFour\">\r\n                                     <p className=\"contact__nameFour\">\r\n                                    {contact.facebook}\r\n                                    </p>  \r\n                                     <i class=\"fab fa-facebook-square\" style={{color: selectedColor.textColor}}></i>\r\n                                           \r\n                                </div>\r\n                            ): \"\"}\r\n                            {contact.instagram ? (\r\n                               <div className=\"social__contactsFour\">\r\n                                   <p className=\"contact__nameFour\">\r\n                                        {contact.instagram}\r\n                                    </p>\r\n                                    <i class=\"fab fa-instagram\"  style={{color: selectedColor.textColor}}></i>\r\n                                    \r\n                                </div> \r\n                            ): \"\"}\r\n                            {contact.telegram ? (\r\n                                <div className=\"social__contactsFour\">\r\n                                    <p className=\"contact__nameFour\">\r\n                                        {contact.telegram}\r\n                                    </p>\r\n                                    <i class=\"fab fa-telegram-plane\"  style={{color: selectedColor.textColor}}></i>\r\n                                    \r\n                                </div>\r\n                            ): \"\"}\r\n                            {contact.linkedIn? (\r\n                                <div className=\"social__contactsFour\">\r\n                                    <p className=\"contact__nameFour\">\r\n                                        {contact.linkedIn}\r\n                                    </p>\r\n                                    <i class=\"fab fa-linkedin\"  style={{color: selectedColor.textColor}}></i>\r\n                                    \r\n                                </div>\r\n                            ): \"\"}\r\n                    </div>\r\n                </div>\r\n                <div className=\"templateFirst__image effect1\">\r\n                    <img src=\"../../assets/images/templateImages/mini.jpg\" alt=\"\"/>\r\n                </div>\r\n                <div className=\"templateFirst__body\">\r\n                <div className=\"templateFirst__bodyleft\"  style={{borderColor:selectedColor.colorSide}}>\r\n                    <div className=\"templateFirst__righHeadingContainer\">\r\n                        <div className=\"templateFirst__fieldsHeader\" style={{color: selectedColor.colorSide}}>\r\n                            <div className=\"icon__box\" style={{color: selectedColor.colorSide}}>\r\n                               <i class=\"fas fa-user-graduate\"  style={{color: selectedColor.colorSide}}></i> \r\n                            </div>\r\n                            <p className=\"templateFirst__lefHeadings\">education</p> \r\n                        </div>\r\n                        <Timeline className=\"my__timeline\">\r\n                        {educations &&\r\n                                educations.map((education, index) =>(\r\n                                <div className=\"temp_oneOneUniversity\" key={index}>\r\n                                    <TimelineItem>\r\n                                        <TimelineSeparator>\r\n                                            <TimelineDot className=\"body__leftTimeLIneDot\" style={{backgroundColor:\"#ffffff\", borderColor:selectedColor.colorSide, color: selectedColor.colorSide}}>\r\n                                                <i class=\"fas fa-book-reader timeline__icons\"  style={{color: selectedColor.colorSide}}></i>\r\n                                            </TimelineDot>\r\n                                            <TimelineConnector style={{backgroundColor: selectedColor.colorSide}}/>\r\n                                        </TimelineSeparator>\r\n                                        <TimelineContent>\r\n                                                <div className=\"temp_fourUniDegreeNMajor\">\r\n                                                    <p className=\"temp_fourUniversityDegree\" style={{color: selectedColor.colorSide}}>\r\n                                                    {education.degree}\r\n                                                    </p>\r\n                                                    <p className=\"temp_fourUniversityMajor\">\r\n                                                    {education.major}\r\n                                                    </p>\r\n                                                </div>\r\n                                                \r\n                                                <p className=\"temp_fourUniversityName\">\r\n                                                    {education.university}\r\n                                                </p>\r\n                                                <div className=\"temp_fourEductationYears\">\r\n                                                    <p className=\"temp_fourStartYear\">\r\n                                                        {moment(education.startDate).utc().year()}\r\n                                                    </p>\r\n                                                    <p className=\"temp_fourDash\">\r\n                                                         -\r\n                                                    </p>\r\n                                                    <p className=\"temp_fourEndYear\">\r\n                                                        {education.endDate ? moment(education.endDate).utc().year() : \"To present\"}\r\n                                                    </p>\r\n                                                </div>\r\n                                        </TimelineContent>\r\n                                    </TimelineItem>\r\n                                    \r\n                                </div>\r\n                                ))\r\n                            }\r\n                            \r\n                        </Timeline>\r\n                           \r\n                    </div>\r\n                    <div className=\"tempFour__line\" style={{borderColor: selectedColor.colorSide}}></div>\r\n                    <div className=\"templateFirst__righHeadingContainer\">\r\n                        <div className=\"templateFirst__fieldsHeader\" style={{color: selectedColor.colorSide}}>\r\n                        <div className=\"icon__box\" style={{color: selectedColor.colorSide}}>\r\n                               <i class=\"fas fa-key\"  style={{color: selectedColor.colorSide}}></i> \r\n                            </div>\r\n                            <p className=\"templateFirst__lefHeadings\">key skills</p>     \r\n                        </div>\r\n                        <Timeline className=\"my__timeline\">\r\n                        {keyskillsList &&\r\n                                keyskillsList.map((keyskills, index)=>(\r\n                                    <div className=\"temp_oneOneUniversity\" key={index}>\r\n                                    <TimelineItem>\r\n                                        <TimelineSeparator>\r\n                                            <TimelineDot className=\"body__leftTimeLIneDot\" style={{backgroundColor:\"#ffffff\", borderColor:selectedColor.colorSide, color: selectedColor.colorSide}}>\r\n                                                <i class=\"fas fa-bookmark timeline__icons\"  style={{color: selectedColor.colorSide}}></i>\r\n                                            </TimelineDot>\r\n                                            <TimelineConnector style={{backgroundColor: selectedColor.colorSide}}/>\r\n                                        </TimelineSeparator>\r\n                                        <TimelineContent>\r\n                                            <p className=\"temp_fourSkill\" key={index}>\r\n                                                {keyskills.title}\r\n                                            </p>\r\n                                        </TimelineContent>\r\n                                    </TimelineItem>\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                        </Timeline>\r\n                    </div>\r\n                    <div className=\"tempFour__line\" style={{borderColor: selectedColor.colorSide}}></div>\r\n                    <div className=\"templateFirst__righHeadingContainer\">\r\n                        <div className=\"templateFirst__fieldsHeader\"  style={{color: selectedColor.colorSide}}>\r\n                        <div className=\"icon__box\" style={{color: selectedColor.colorSide}}>\r\n                               <i class=\"fas fa-tachometer-alt\"  style={{color: selectedColor.colorSide}}></i> \r\n                            </div>\r\n                           <p className=\"templateFirst__lefHeadings\">technical skills</p>       \r\n                        </div>\r\n                        <Timeline className=\"my__timeline\">\r\n                             {techSkillsList &&\r\n                                techSkillsList.map((techSkill, index) =>(\r\n                                <div className=\"temp_oneOneUniversity\" key={index}>\r\n                                    <TimelineItem>\r\n                                        <TimelineSeparator>\r\n                                            <TimelineDot className=\"body__leftTimeLIneDot\" style={{backgroundColor:\"#ffffff\", borderColor:selectedColor.colorSide, color: selectedColor.colorSide}}>\r\n                                                <i class=\"fas fa-lightbulb timeline__icons\"  style={{color: selectedColor.colorSide}}></i>\r\n                                            </TimelineDot>\r\n                                            <TimelineConnector style={{backgroundColor: selectedColor.colorSide}}/>\r\n                                        </TimelineSeparator>\r\n                                        <TimelineContent>\r\n                                            <p className=\"temp_fourTechSkillTitle\">\r\n                                                {techSkill.tech_skill}\r\n                                            </p>\r\n                                            <ProgressBar bgcolor ={selectedColor.colorSide} textColor={selectedColor.textColor} completed={techSkill.tech_skill_rank}/>\r\n                                        </TimelineContent>\r\n                                    </TimelineItem>\r\n                                </div>\r\n                                ))\r\n                            }\r\n                        </Timeline>\r\n                       \r\n                    </div>\r\n                    <div className=\"tempFour__line\" style={{borderColor: selectedColor.colorSide}}></div>\r\n                    <div className=\"templateFirst__righHeadingContainer\">\r\n                        <div className=\"templateFirst__fieldsHeader\"  style={{color: selectedColor.colorSide}}>\r\n                        <div className=\"icon__box\" style={{color: selectedColor.colorSide}}>\r\n                               <i class=\"fas fa-award\"  style={{color: selectedColor.colorSide}}></i> \r\n                            </div>\r\n                           <p className=\"templateFirst__lefHeadings\">achievement</p> \r\n                        </div>\r\n                        <Timeline className=\"my__timeline\">\r\n                            { achievements && achievements.map((achievement, index) =>(\r\n                                <div className=\"temp_oneOneUniversity\">\r\n                                    <TimelineItem>\r\n                                        <TimelineSeparator>\r\n                                            <TimelineDot className=\"body__leftTimeLIneDot\" style={{backgroundColor:\"#ffffff\", borderColor:selectedColor.colorSide, color: selectedColor.colorSide}}>\r\n                                                <i class=\"fas fa-trophy timeline__icons\"  style={{color: selectedColor.colorSide}}></i>\r\n                                            </TimelineDot>\r\n                                            <TimelineConnector style={{backgroundColor: selectedColor.colorSide}}/>\r\n                                        </TimelineSeparator>\r\n                                        <TimelineContent>\r\n                                            <p className=\"temp_fourAwardTitle\">\r\n                                                {achievement.achievement}\r\n                                            </p>\r\n                                            <p className=\"template__fourAward\">{achievement.organizationName} / {achievement.address} </p>\r\n                                            <p className=\"template__fourAward\">{achievement.startYear}</p>\r\n                                        </TimelineContent>\r\n                                    </TimelineItem>\r\n                                    \r\n                                </div>\r\n                            ))}\r\n                        </Timeline>\r\n                        \r\n                    </div>\r\n                    <div className=\"tempFour__line\" style={{borderColor: selectedColor.colorSide}}></div>\r\n                    <div className=\"templateFirst__righHeadingContainer\">\r\n                        <div className=\"templateFirst__fieldsHeader\" style={{color: selectedColor.colorSide}}>\r\n                        <div className=\"icon__box\" style={{color: selectedColor.colorSide}}>\r\n                               <i class=\"fas fa-language\"  style={{color: selectedColor.colorSide}}></i> \r\n                            </div>\r\n                           <p className=\"templateFirst__lefHeadings\">languages</p> \r\n                        </div>\r\n                        <Timeline className=\"my__timeline\">\r\n                             {languagesList &&\r\n                                languagesList.map((language, index)=>(\r\n                                    <div className=\"temp_oneOneUniversity\">\r\n                                        <TimelineItem>\r\n                                        <TimelineSeparator>\r\n                                            <TimelineDot className=\"body__leftTimeLIneDot\" style={{backgroundColor:\"#ffffff\", borderColor:selectedColor.colorSide, color: selectedColor.colorSide}}>\r\n                                                <img className=\"flag__size\" src={language.flag}/>\r\n                                            </TimelineDot>\r\n                                            <TimelineConnector style={{backgroundColor: selectedColor.colorSide}}/>\r\n                                        </TimelineSeparator>\r\n                                        <TimelineContent>\r\n                                            <div className=\"temp_oneoneLanguage\" key={index}>\r\n                                                <p className=\"temp_fourLangTitle col-sm-5 px-0\">\r\n                                                    {language.name}\r\n                                                </p>\r\n                                                <p className=\"temp_fourLangLevel col-sm-5 px-0\">\r\n                                                    {language.level}\r\n                                                </p>\r\n                                            </div>\r\n                                        </TimelineContent>\r\n                                    </TimelineItem>\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                        </Timeline>\r\n                    </div>\r\n                    <div className=\"tempFour__line\"  style={{borderColor: selectedColor.colorSide}}></div>\r\n                    <div className=\"templateFirst__righHeadingContainer\">\r\n                        <div className=\"templateFirst__fieldsHeader\"  style={{color: selectedColor.colorSide}}>\r\n                        <div className=\"icon__box\" style={{color: selectedColor.colorSide}}>\r\n                               <i class=\"fas fa-car\"  style={{color: selectedColor.colorSide}}></i> \r\n                            </div>\r\n                           <p className=\"templateFirst__lefHeadings\">driving licence</p> \r\n                        </div> \r\n                        <Timeline className=\"my__timeline\">\r\n                        {drLicences &&\r\n                                drLicences.map((drL, index)=>(\r\n                                    <div className=\"temp_oneOneUniversity\" key={index}>\r\n                                        <TimelineItem>\r\n                                        <TimelineSeparator>\r\n                                            <TimelineDot className=\"body__leftTimeLIneDot\" style={{backgroundColor:\"#ffffff\", borderColor:selectedColor.colorSide, color: selectedColor.colorSide}}>\r\n                                                <i class=\"fas fa-id-card timeline__icons\"  style={{color: selectedColor.colorSide}}></i>\r\n                                            </TimelineDot>\r\n                                            <TimelineConnector style={{backgroundColor: selectedColor.colorSide}}/>\r\n                                        </TimelineSeparator>\r\n                                        <TimelineContent>\r\n                                            <p className=\"temp_fourDrivingLevel col-sm-5 px-0\">\r\n                                                {drL.title}\r\n                                            </p>\r\n                                        </TimelineContent>\r\n                                    </TimelineItem>\r\n                                         \r\n                                    </div>\r\n                                ))\r\n                            }\r\n                            </Timeline>\r\n                    </div>\r\n                </div>\r\n                <div className=\"templateFirst__bodyRight\">\r\n                    <div className=\"templateFirst__profile\">\r\n                        <div className=\"templateFirst__bodyHeadings\">\r\n                        <div className=\"icon__box\" style={{color: selectedColor.colorSide}}>\r\n                               <i class=\"fas fa-user-tie\"  style={{color: selectedColor.colorSide}}></i> \r\n                            </div>\r\n                            <div className=\"body__headingTitle\">\r\n                                <p className=\"templateFirst__bodyHeading\" style={{color:selectedColor.colorHeadings}}>\r\n                                    professional profile\r\n                                </p>\r\n                                <div className=\"tempThree__line\" style={{color:selectedColor.colorLine}}></div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        \r\n                        <div className=\"templateThree__bodyContent\">\r\n                            <p>{profileInfo?.aboutMe}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"templateFirst__experience\">\r\n                        <div className=\"templateFirst__bodyHeadings\">\r\n                        <div className=\"icon__box\" style={{color: selectedColor.colorSide}}>\r\n                               <i class=\"fas fa-suitcase\"  style={{color: selectedColor.colorSide}}></i> \r\n                            </div>\r\n                            <div className=\"body__headingTitle\">\r\n                                <p className=\"templateFirst__bodyHeading\" style={{color:selectedColor.colorHeadings}}>\r\n                                    experience\r\n                                </p>\r\n                                <div className=\"tempThree__line\" style={{color:selectedColor.colorLine}}></div>\r\n                            </div>\r\n                        </div>\r\n                        <Timeline>\r\n                             {experiences &&\r\n                                experiences.map((experience, index) =>(\r\n                                    <TimelineItem>\r\n                                         <TimelineSeparator>\r\n                                            <TimelineDot className=\"body__leftTimeLIneDot\" style={{backgroundColor:\"#ffffff\", borderColor:selectedColor.colorSide, color: selectedColor.colorSide}}>\r\n                                                <i class=\"fas fa-book-reader timeline__icons\"  style={{color: selectedColor.colorSide}}></i>\r\n                                            </TimelineDot>\r\n                                            <TimelineConnector style={{backgroundColor: selectedColor.colorSide}}/>\r\n                                        </TimelineSeparator>\r\n                                         <TimelineContent>\r\n                                    <div key={index} className=\"template__threeExpJobContainer\">\r\n                                        <div className=\"template__threeExpJobBox\">\r\n                                            <p className=\"template__threeExpJobTitle\">\r\n                                                {experience.jobTitle}\r\n                                            </p>\r\n                                        </div>\r\n                                        <div className=\"template__threeExpJobAddress\">\r\n                                            <p className=\"template__threeExpCompany\">\r\n                                                {experience.companyName}\r\n                                            </p>\r\n                                            <p className=\"template__threeExpDateDash\">\r\n                                                /\r\n                                            </p>\r\n                                            <p className=\"template__threeExpLocation\">\r\n                                            {experience.address}\r\n                                            </p>\r\n                                            <p className=\"template__threeExpDateDash\">\r\n                                                /\r\n                                            </p>\r\n                                            <div className=\"template__threeExpDate\">\r\n                                            <p className=\"template__threeExpStartDate\">\r\n                                                {experience.startYear}\r\n                                            </p>\r\n                                            <p className=\"template__threeExpDateDash\">\r\n                                                -\r\n                                            </p>\r\n                                            <p className=\"template__threeExpEndDate\">\r\n                                                {experience.endYear ? experience.endYear: \"To present\"}\r\n                                            </p>\r\n                                        </div>\r\n                                        </div>\r\n                                        <p className=\"template__threeProfessionalProfContent\">\r\n                                        {experience.aboutJob}\r\n                                        </p>\r\n                                        <p className=\"template__threeProfessionalProfContentResp\">\r\n                                            <ul className=\"template__threeProfessionalLists\">\r\n                                                {experience.projects.map((proj, index)=>(\r\n                                                    <li key={index} className=\"template__threeProfessionalList\">\r\n                                                        {proj.project}\r\n                                                    </li> \r\n                                                ))}\r\n                                                \r\n                                            \r\n                                            </ul>\r\n                                        </p>\r\n                                        \r\n                                    </div>\r\n                                    </TimelineContent>\r\n                                    </TimelineItem>\r\n                                   \r\n\r\n                                    \r\n\r\n                                ))\r\n                            }\r\n                        </Timeline>\r\n                       \r\n                    </div>\r\n                    <div className=\"templateFirst__personalDev\">\r\n                        <div className=\"templateFirst__bodyHeadings\">\r\n                            <div className=\"icon__box\" style={{color: selectedColor.colorSide}}>\r\n                               <i class=\"fas fa-user-cog\"  style={{color: selectedColor.colorSide}}></i> \r\n                            </div>\r\n                            <div className=\"body__headingTitle\">\r\n                                <p className=\"templateFirst__bodyHeading\" style={{color:selectedColor.colorHeadings}}>\r\n                                    personal development\r\n                                </p>\r\n                                <div className=\"tempThree__line\" style={{color:selectedColor.colorLine}}></div>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        \r\n                        <div className=\"templateFirst__bodyContent\">\r\n                        <Timeline>\r\n                        {personalDevInfo && personalDevInfo.map((personal, index)=>(\r\n                             <TimelineItem>\r\n                             <TimelineSeparator>\r\n                                <TimelineDot className=\"body__leftTimeLIneDot\" style={{backgroundColor:\"#ffffff\", borderColor:selectedColor.colorSide, color: selectedColor.colorSide}}>\r\n                                    <i class=\"fas fa-book-reader timeline__icons\"  style={{color: selectedColor.colorSide}}></i>\r\n                                </TimelineDot>\r\n                                <TimelineConnector style={{backgroundColor: selectedColor.colorSide}}/>\r\n                            </TimelineSeparator>\r\n                             <TimelineContent>\r\n                            <div className=\"template__threeProfDevBox\" key={index}>\r\n                                <p className=\"template__threeExpJobTitle\">\r\n                                    {personal.theme}\r\n                                </p>\r\n                                <div>\r\n                                <div className=\"template__threeProfDevAddress\">\r\n                                    <p className=\"template__threeExpCompany\">\r\n                                    {personal.organizationName}\r\n                                    </p>\r\n                                    <p className=\"template__threeExpDateDash\">\r\n                                        /\r\n                                    </p>\r\n                                    <p className=\"template__threeExpLocation\">\r\n                                    {personal.address}\r\n                                    </p>   \r\n                                </div>\r\n                                <div className=\"template__threeExpDate\">\r\n                                    <p className=\"template__threeExpStartDate\">\r\n                                    {personal.year}\r\n                                    </p>\r\n                                </div>\r\n                                </div>\r\n                            </div>\r\n                            </TimelineContent>\r\n                            </TimelineItem>\r\n                        )\r\n                        )\r\n                       }\r\n                       </Timeline>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </div>                            \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TemplateOne\r\n",{"ruleId":"275","severity":1,"message":"276","line":13,"column":8,"nodeType":"277","messageId":"278","endLine":13,"endColumn":19},{"ruleId":"275","severity":1,"message":"279","line":14,"column":8,"nodeType":"277","messageId":"278","endLine":14,"endColumn":23},{"ruleId":"280","replacedBy":"281"},{"ruleId":"282","replacedBy":"283"},{"ruleId":"275","severity":1,"message":"284","line":30,"column":12,"nodeType":"277","messageId":"278","endLine":30,"endColumn":24},{"ruleId":"275","severity":1,"message":"285","line":77,"column":12,"nodeType":"277","messageId":"278","endLine":77,"endColumn":25},{"ruleId":"275","severity":1,"message":"286","line":84,"column":23,"nodeType":"277","messageId":"278","endLine":84,"endColumn":29},{"ruleId":"275","severity":1,"message":"287","line":84,"column":31,"nodeType":"277","messageId":"278","endLine":84,"endColumn":43},{"ruleId":"275","severity":1,"message":"288","line":84,"column":54,"nodeType":"277","messageId":"278","endLine":84,"endColumn":63},{"ruleId":"275","severity":1,"message":"289","line":85,"column":13,"nodeType":"277","messageId":"278","endLine":85,"endColumn":14},{"ruleId":"275","severity":1,"message":"290","line":88,"column":10,"nodeType":"277","messageId":"278","endLine":88,"endColumn":19},{"ruleId":"291","severity":1,"message":"292","line":190,"column":37,"nodeType":"293","endLine":190,"endColumn":50},{"ruleId":"275","severity":1,"message":"294","line":17,"column":31,"nodeType":"277","messageId":"278","endLine":17,"endColumn":42},{"ruleId":"275","severity":1,"message":"295","line":83,"column":7,"nodeType":"277","messageId":"278","endLine":83,"endColumn":14},{"ruleId":"275","severity":1,"message":"296","line":5,"column":22,"nodeType":"277","messageId":"278","endLine":5,"endColumn":32},{"ruleId":"275","severity":1,"message":"297","line":13,"column":8,"nodeType":"277","messageId":"278","endLine":13,"endColumn":14},{"ruleId":"275","severity":1,"message":"288","line":23,"column":54,"nodeType":"277","messageId":"278","endLine":23,"endColumn":63},{"ruleId":"275","severity":1,"message":"298","line":42,"column":11,"nodeType":"277","messageId":"278","endLine":42,"endColumn":18},{"ruleId":"275","severity":1,"message":"299","line":10,"column":10,"nodeType":"277","messageId":"278","endLine":10,"endColumn":15},{"ruleId":"275","severity":1,"message":"300","line":25,"column":17,"nodeType":"277","messageId":"278","endLine":25,"endColumn":25},{"ruleId":"301","severity":1,"message":"302","line":57,"column":6,"nodeType":"303","endLine":57,"endColumn":15,"suggestions":"304"},{"ruleId":"275","severity":1,"message":"305","line":5,"column":9,"nodeType":"277","messageId":"278","endLine":5,"endColumn":20},{"ruleId":"275","severity":1,"message":"306","line":1,"column":26,"nodeType":"277","messageId":"278","endLine":1,"endColumn":36},{"ruleId":"275","severity":1,"message":"307","line":76,"column":11,"nodeType":"277","messageId":"278","endLine":76,"endColumn":19},{"ruleId":"275","severity":1,"message":"286","line":76,"column":21,"nodeType":"277","messageId":"278","endLine":76,"endColumn":27},{"ruleId":"275","severity":1,"message":"287","line":76,"column":29,"nodeType":"277","messageId":"278","endLine":76,"endColumn":41},{"ruleId":"275","severity":1,"message":"288","line":76,"column":52,"nodeType":"277","messageId":"278","endLine":76,"endColumn":61},{"ruleId":"275","severity":1,"message":"289","line":77,"column":13,"nodeType":"277","messageId":"278","endLine":77,"endColumn":14},{"ruleId":"275","severity":1,"message":"308","line":79,"column":11,"nodeType":"277","messageId":"278","endLine":79,"endColumn":18},{"ruleId":"275","severity":1,"message":"309","line":82,"column":12,"nodeType":"277","messageId":"278","endLine":82,"endColumn":21},{"ruleId":"275","severity":1,"message":"310","line":82,"column":23,"nodeType":"277","messageId":"278","endLine":82,"endColumn":35},{"ruleId":"275","severity":1,"message":"311","line":89,"column":11,"nodeType":"277","messageId":"278","endLine":89,"endColumn":23},{"ruleId":"275","severity":1,"message":"305","line":11,"column":9,"nodeType":"277","messageId":"278","endLine":11,"endColumn":20},{"ruleId":"275","severity":1,"message":"289","line":22,"column":13,"nodeType":"277","messageId":"278","endLine":22,"endColumn":14},{"ruleId":"275","severity":1,"message":"305","line":3,"column":9,"nodeType":"277","messageId":"278","endLine":3,"endColumn":20},{"ruleId":"275","severity":1,"message":"289","line":7,"column":13,"nodeType":"277","messageId":"278","endLine":7,"endColumn":14},{"ruleId":"275","severity":1,"message":"312","line":3,"column":8,"nodeType":"277","messageId":"278","endLine":3,"endColumn":14},{"ruleId":"313","severity":1,"message":"314","line":36,"column":3,"nodeType":"315","messageId":"316","endLine":36,"endColumn":32,"fix":"317"},{"ruleId":"275","severity":1,"message":"318","line":15,"column":11,"nodeType":"277","messageId":"278","endLine":15,"endColumn":18},{"ruleId":"275","severity":1,"message":"319","line":3,"column":8,"nodeType":"277","messageId":"278","endLine":3,"endColumn":28},{"ruleId":"275","severity":1,"message":"320","line":4,"column":8,"nodeType":"277","messageId":"278","endLine":4,"endColumn":19},{"ruleId":"275","severity":1,"message":"321","line":5,"column":8,"nodeType":"277","messageId":"278","endLine":5,"endColumn":19},{"ruleId":"275","severity":1,"message":"322","line":1,"column":16,"nodeType":"277","messageId":"278","endLine":1,"endColumn":24},{"ruleId":"275","severity":1,"message":"323","line":11,"column":8,"nodeType":"277","messageId":"278","endLine":11,"endColumn":22},{"ruleId":"275","severity":1,"message":"324","line":11,"column":24,"nodeType":"277","messageId":"278","endLine":11,"endColumn":41},{"ruleId":"275","severity":1,"message":"325","line":20,"column":7,"nodeType":"277","messageId":"278","endLine":20,"endColumn":15},{"ruleId":"275","severity":1,"message":"326","line":33,"column":7,"nodeType":"277","messageId":"278","endLine":33,"endColumn":14},{"ruleId":"275","severity":1,"message":"327","line":35,"column":10,"nodeType":"277","messageId":"278","endLine":35,"endColumn":16},{"ruleId":"275","severity":1,"message":"328","line":10,"column":8,"nodeType":"277","messageId":"278","endLine":10,"endColumn":14},{"ruleId":"275","severity":1,"message":"329","line":11,"column":8,"nodeType":"277","messageId":"278","endLine":11,"endColumn":17},{"ruleId":"275","severity":1,"message":"330","line":12,"column":8,"nodeType":"277","messageId":"278","endLine":12,"endColumn":24},{"ruleId":"275","severity":1,"message":"308","line":36,"column":9,"nodeType":"277","messageId":"278","endLine":36,"endColumn":16},{"ruleId":"275","severity":1,"message":"331","line":38,"column":9,"nodeType":"277","messageId":"278","endLine":38,"endColumn":18},{"ruleId":"275","severity":1,"message":"328","line":10,"column":8,"nodeType":"277","messageId":"278","endLine":10,"endColumn":14},{"ruleId":"275","severity":1,"message":"329","line":11,"column":8,"nodeType":"277","messageId":"278","endLine":11,"endColumn":17},{"ruleId":"275","severity":1,"message":"330","line":12,"column":8,"nodeType":"277","messageId":"278","endLine":12,"endColumn":24},{"ruleId":"275","severity":1,"message":"332","line":39,"column":28,"nodeType":"277","messageId":"278","endLine":39,"endColumn":47},{"ruleId":"275","severity":1,"message":"333","line":55,"column":9,"nodeType":"277","messageId":"278","endLine":55,"endColumn":19},{"ruleId":"275","severity":1,"message":"334","line":104,"column":9,"nodeType":"277","messageId":"278","endLine":104,"endColumn":22},{"ruleId":"275","severity":1,"message":"322","line":1,"column":16,"nodeType":"277","messageId":"278","endLine":1,"endColumn":24},{"ruleId":"275","severity":1,"message":"335","line":14,"column":10,"nodeType":"277","messageId":"278","endLine":14,"endColumn":20},{"ruleId":"275","severity":1,"message":"308","line":41,"column":9,"nodeType":"277","messageId":"278","endLine":41,"endColumn":16},{"ruleId":"275","severity":1,"message":"336","line":62,"column":7,"nodeType":"277","messageId":"278","endLine":62,"endColumn":19},{"ruleId":"337","severity":2,"message":"338","line":63,"column":3,"nodeType":"277","messageId":"339","endLine":63,"endColumn":13},{"ruleId":"275","severity":1,"message":"340","line":5,"column":8,"nodeType":"277","messageId":"278","endLine":5,"endColumn":11},{"ruleId":"275","severity":1,"message":"341","line":13,"column":10,"nodeType":"277","messageId":"278","endLine":13,"endColumn":18},{"ruleId":"275","severity":1,"message":"342","line":13,"column":20,"nodeType":"277","messageId":"278","endLine":13,"endColumn":24},{"ruleId":"275","severity":1,"message":"343","line":13,"column":26,"nodeType":"277","messageId":"278","endLine":13,"endColumn":30},{"ruleId":"275","severity":1,"message":"344","line":13,"column":32,"nodeType":"277","messageId":"278","endLine":13,"endColumn":36},{"ruleId":"275","severity":1,"message":"345","line":13,"column":38,"nodeType":"277","messageId":"278","endLine":13,"endColumn":48},{"ruleId":"275","severity":1,"message":"308","line":24,"column":11,"nodeType":"277","messageId":"278","endLine":24,"endColumn":18},{"ruleId":"275","severity":1,"message":"323","line":25,"column":8,"nodeType":"277","messageId":"278","endLine":25,"endColumn":22},{"ruleId":"275","severity":1,"message":"324","line":25,"column":24,"nodeType":"277","messageId":"278","endLine":25,"endColumn":41},{"ruleId":"275","severity":1,"message":"346","line":32,"column":7,"nodeType":"277","messageId":"278","endLine":32,"endColumn":10},{"ruleId":"275","severity":1,"message":"325","line":34,"column":7,"nodeType":"277","messageId":"278","endLine":34,"endColumn":15},{"ruleId":"347","severity":1,"message":"348","line":294,"column":49,"nodeType":"349","endLine":294,"endColumn":98},"no-unused-vars","'TechSkills2' is defined but never used.","Identifier","unusedVar","'TechnicalSkills' is defined but never used.","no-native-reassign",["350"],"no-negated-in-lhs",["351"],"'attachmentId' is assigned a value but never used.","'customRequest' is assigned a value but never used.","'errors' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'formState' is assigned a value but never used.","'t' is assigned a value but never used.","'keySkills' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'JobsContext' is defined but never used.","'jobList' is assigned a value but never used.","'makeStyles' is defined but never used.","'Button' is defined but never used.","'contact' is assigned a value but never used.","'sleep' is defined but never used.","'setCount' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'count'. Either include it or remove the dependency array.","ArrayExpression",["352"],"'useDispatch' is defined but never used.","'useContext' is defined but never used.","'register' is assigned a value but never used.","'classes' is assigned a value but never used.","'obektivka' is assigned a value but never used.","'setObektivka' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'Resume' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property requestAnimationFrame.","MemberExpression","unexpectedWhitespace",{"range":"353","text":"354"},"'history' is assigned a value but never used.","'CreateResumeAcardion' is defined but never used.","'TemplateTwo' is defined but never used.","'ColorPicker' is defined but never used.","'useState' is defined but never used.","'progressColors' is assigned a value but never used.","'setProgressColors' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'options' is assigned a value but never used.","'values' is assigned a value but never used.","'Switch' is defined but never used.","'FormGroup' is defined but never used.","'FormControlLabel' is defined but never used.","'education' is assigned a value but never used.","'setProjectInputList' is assigned a value but never used.","'experience' is assigned a value but never used.","'toggleChecked' is assigned a value but never used.","'withStyles' is defined but never used.","'handleCheck2' is assigned a value but never used.","no-undef","'setChecked' is not defined.","undef","'Pdf' is defined but never used.","'Document' is defined but never used.","'Page' is defined but never used.","'Text' is defined but never used.","'View' is defined but never used.","'StyleSheet' is defined but never used.","'ref' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"355","fix":"356"},[1140,1142],".","Update the dependencies array to be: [t, i18n, count]",{"range":"357","text":"358"},[1726,1735],"[t, i18n, count]"]