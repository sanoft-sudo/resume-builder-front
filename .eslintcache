[{"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\technicalSkills\\TechnicalSkills.js":"1","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\context\\TechnicalSkillsContext.js":"2","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\resumeAcardion\\CreateResumeAcardion.js":"3","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\PostJobFields.js":"4","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\context\\CountriesContext.js":"5","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\technicalSkills\\TechSkills2.js":"6","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\technicalSkills\\NewM.js":"7","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\keySkills\\KeySkillsSelect.js":"8","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\education\\EducationForm.js":"9","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\experience\\ExperienceForm.js":"10","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\type.js":"11","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\achievementsAction.js":"12","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\achivements\\AchievementForm.js":"13","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\achievementsReducer.js":"14","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\JobSearchBanner.js":"15","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\BannerJob.js":"16","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\autocomleteInputs\\AutocompleteCountry.js":"17","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\languageFrom\\LanguageForm.js":"18","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\context\\LanguagesContext.js":"19","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\App.js":"20","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\pages\\Home.js":"21","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\context\\JobsContext.js":"22","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\JobSearchMain.js":"23","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\Completed.js":"24","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\JobSearchList.js":"25","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\JobSearchRight.js":"26","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\PostViewCard.js":"27","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\DrawerPost.js":"28","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\createContacts\\ContactInformation.js":"29","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\experienceAction.js":"30","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\profileInfoAction.js":"31","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\languagesReducer.js":"32","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\languagesAction.js":"33","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\drivingLReducer.js":"34","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\drivingL\\DrivingLicence.js":"35","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\drivingLAction.js":"36","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\personalDevReducer.js":"37","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\personalDevelopment\\PersonalDevelopment.js":"38","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\createProfile\\ProfileForm.js":"39"},{"size":6666,"mtime":1608308478647,"results":"40","hashOfConfig":"41"},{"size":884,"mtime":1608286057156,"results":"42","hashOfConfig":"41"},{"size":3529,"mtime":1608543691244,"results":"43","hashOfConfig":"41"},{"size":20159,"mtime":1608467238372,"results":"44","hashOfConfig":"41"},{"size":967,"mtime":1608294171820,"results":"45","hashOfConfig":"41"},{"size":6971,"mtime":1608327036306,"results":"46","hashOfConfig":"41"},{"size":7018,"mtime":1608533595429,"results":"47","hashOfConfig":"41"},{"size":3420,"mtime":1608544877953,"results":"48","hashOfConfig":"41"},{"size":7168,"mtime":1608544749061,"results":"49","hashOfConfig":"41"},{"size":10528,"mtime":1608544707420,"results":"50","hashOfConfig":"41"},{"size":2455,"mtime":1608542467037,"results":"51","hashOfConfig":"41"},{"size":384,"mtime":1608427100289,"results":"52","hashOfConfig":"41"},{"size":6619,"mtime":1608544775066,"results":"53","hashOfConfig":"41"},{"size":513,"mtime":1608426922127,"results":"54","hashOfConfig":"41"},{"size":5787,"mtime":1608462938414,"results":"55","hashOfConfig":"41"},{"size":3178,"mtime":1608466377653,"results":"56","hashOfConfig":"41"},{"size":2477,"mtime":1608467926329,"results":"57","hashOfConfig":"41"},{"size":6507,"mtime":1608536682656,"results":"58","hashOfConfig":"41"},{"size":1668,"mtime":1608513567155,"results":"59","hashOfConfig":"41"},{"size":3131,"mtime":1608525305728,"results":"60","hashOfConfig":"41"},{"size":265,"mtime":1607570600276,"results":"61","hashOfConfig":"41"},{"size":761,"mtime":1608180925643,"results":"62","hashOfConfig":"41"},{"size":582,"mtime":1607739577590,"results":"63","hashOfConfig":"41"},{"size":3047,"mtime":1608065398378,"results":"64","hashOfConfig":"41"},{"size":3114,"mtime":1607735853627,"results":"65","hashOfConfig":"41"},{"size":357,"mtime":1607739987594,"results":"66","hashOfConfig":"41"},{"size":3096,"mtime":1607724073740,"results":"67","hashOfConfig":"41"},{"size":1632,"mtime":1607735841072,"results":"68","hashOfConfig":"41"},{"size":7939,"mtime":1608177712714,"results":"69","hashOfConfig":"41"},{"size":368,"mtime":1608095888737,"results":"70","hashOfConfig":"41"},{"size":443,"mtime":1607988526092,"results":"71","hashOfConfig":"41"},{"size":777,"mtime":1608525249648,"results":"72","hashOfConfig":"41"},{"size":1677,"mtime":1608531794824,"results":"73","hashOfConfig":"41"},{"size":487,"mtime":1608538641150,"results":"74","hashOfConfig":"41"},{"size":2977,"mtime":1608544431072,"results":"75","hashOfConfig":"41"},{"size":354,"mtime":1608539102283,"results":"76","hashOfConfig":"41"},{"size":529,"mtime":1608542859164,"results":"77","hashOfConfig":"41"},{"size":6477,"mtime":1608543373903,"results":"78","hashOfConfig":"41"},{"size":6500,"mtime":1608545280424,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"kieyu0",{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"84"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\technicalSkills\\TechnicalSkills.js",["163"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\context\\TechnicalSkillsContext.js",[],["164","165"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\resumeAcardion\\CreateResumeAcardion.js",["166"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\PostJobFields.js",["167","168","169","170","171"],"import React, { useState, useContext}  from 'react';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport isEmail from \"validator/lib/isEmail\";\r\nimport \"../styles/PostJobFields.css\";\r\nimport PostView1 from './PostView1';\r\nimport Select from \"react-select\"\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {savePostJob} from \"../stores/actions/postJobFieldsAction\"\r\nimport {TechnicalSkillsContext} from \"../context/TechnicalSkillsContext\";\r\nimport { CountriesContext } from '../context/CountriesContext';\r\nimport AutocompleteCountry from './autocomleteInputs/AutocompleteCountry';\r\n\r\nconst schema = yup.object().shape({\r\n    adRegion: yup.string().required(),\r\n    city: yup.string().required(),\r\n    companyName: yup.string().required(),\r\n    country: yup.string().required(),\r\n    email: yup.string().required(),\r\n    fromSalary: yup.number().positive().integer().required(),\r\n    fullName: yup.string().required(),\r\n    industry: yup.string().required(),\r\n    jobCondition: yup.string().required(),\r\n    jobTitle: yup.string().required(),\r\n    jobType: yup.string().required(),\r\n    region: yup.string().required(),\r\n    salaryType: yup.string().required(),\r\n    workplace: yup.string().required(),\r\n    toSalary: yup.number().positive().integer().required(),\r\n  });\r\n\r\nfunction PostJobFields() {\r\n    const { t } = useTranslation();\r\n    const dispatch = useDispatch();\r\n    const {technicalSkills} = useContext(TechnicalSkillsContext);\r\n    const countries = useContext(CountriesContext)\r\n    console.log(\"counties\", countries);\r\n    const postjob = useSelector(state => state.postjobReducer.postjob)\r\n    const { register, errors, handleSubmit, control, formState } = useForm({resolver: yupResolver(schema)});\r\n    \r\n    const [phone, setPhone] = useState('');\r\n    const [postedData, setPostedData] = useState({});\r\n    const [checked, setChecked] = useState(false);\r\n\r\n    const toggleChecked = () => {\r\n      setChecked((prev) => !prev);\r\n    };\r\n    \r\n    const onSubmit = (data, e) => {\r\n        console.log(\"manaaaa>>>\", data);\r\n        dispatch(savePostJob(data))\r\n        setPostedData(data);\r\n        e.target.reset();\r\n        setPhone(\"\")\r\n    }\r\n    const techSkill = [\r\n        { value: 'react', label: 'REACT' },\r\n        { value: 'html', label: 'HTML' },\r\n        { value: 'css', label: 'CSS' },\r\n        { value: 'javascript', label: 'JAVASCRIPT' },\r\n        { value: 'vue', label: 'VUE' },\r\n        { value: 'redux', label: 'REDUX' },\r\n        { value: 'angular', label: 'ANGULAR' },\r\n        { value: 'english teacher', label: 'English teacher' },\r\n        { value: 'nurse', label: 'Nurse' },\r\n        { value: 'accountant', label: 'Accountant' },\r\n        { value: 'cleaner', label: 'Cleaner' }\r\n        ]\r\n    const languages = [\r\n        {value: 'uzbek', label: \"Uzbek\"},\r\n        {value: 'russian', label: \"Russian\"},\r\n        {value: 'english', label: \"English\"}\r\n    ]\r\n    \r\n    return (\r\n            <div id=\"jobPostFields\">\r\n                <div className=\"jobpost__bg\">\r\n                        <h2 className=\"jobpost__title\">Create your account to post your job</h2>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6\">\r\n                                <form className=\"jobpost__form\" id=\"jobfields\" onSubmit={handleSubmit(onSubmit)}>               \r\n                                <label name=\"companyLabel\"  htmlFor=\"company\">Your company name <span className=\"required\">*</span></label>\r\n                                <input name=\"companyName\" id=\"company\" ref={register({ required: true})} />\r\n                                <p className=\"error__message\">{errors?.companyName?.message}</p>\r\n\r\n                                <label name=\"fullNameLabel\" htmlFor=\"fullname\">Your full name <span className=\"required\">*</span></label>\r\n                                <input type=\"text\" id=\"fullname\" name=\"fullName\" ref={register({ required: true})}/>\r\n                                <p className=\"error__message\">{errors.fullName?.message}</p>\r\n\r\n                                <label name=\"emailLabel\" htmlFor=\"email\">Your Email <span className=\"required\">*</span></label>\r\n                                <input name=\"email\" id=\"email\"\r\n                                        ref={register({\r\n                                            required: true,\r\n                                            validate: (input) => isEmail(input),\r\n                                        })}\r\n                                        placeholder=\"Email\"\r\n                                />\r\n                                <p className=\"error__message\">{errors.email?.message}</p>\r\n\r\n                                <label name=\"phoneLabel\" htmlFor=\"phone\">Your number (optional)</label>\r\n                                <Controller\r\n                                    as={\r\n                                        <PhoneInput\r\n                                    inputProps={{\r\n                                    name: 'phone',\r\n                                    required: true,\r\n                                    autoFocus: true\r\n                                    }}\r\n                                    country={'uz'}\r\n                                    value={phone}\r\n                                    onChange={phone => setPhone({ phone })}\r\n                                /> }\r\n                                name=\"phone\"\r\n                                control={control}\r\n                                rules= {{required: false}}\r\n                                /> \r\n                                {/* <input type=\"tel\" id=\"tel\" name=\"tel\" ref={register({ required: true})}/> */}\r\n                                <label name=\"cityLabel\" htmlFor=\"city\">City <span className=\"required\">*</span></label>\r\n                                <input type=\"text\" id=\"city\" name=\"city\" ref={register({ required: true})}/>\r\n                                <p className=\"error__message\">{errors.city?.message}</p>\r\n\r\n                                <label name=\"regionLabel\" htmlFor=\"region\">Region <span className=\"required\">*</span></label>\r\n                                <input type=\"text\" id=\"region\" name=\"region\" ref={register({ required: true})}/>\r\n                                <p className=\"error__message\">{errors.region?.message}</p>\r\n\r\n                                <label name=\"countryLabel\" htmlFor=\"country\">Country <span className=\"required\">*</span></label>\r\n                                <Controller\r\n                                    as={\r\n                                        <AutocompleteCountry/>\r\n                                    }\r\n                                    name=\"isNightShift\"\r\n                                    control={control}\r\n                                    />\r\n                                {/* <input type=\"text\" id=\"country\" name=\"country\" ref={register({ required: true})}/> */}\r\n                                <p className=\"error__message\">{errors.country?.message}</p>\r\n\r\n                                <label name=\"industryLabel\" htmlFor=\"industry\">Industry <span className=\"required\">*</span></label>\r\n                                <p>Select the industry thst best describes your company.</p>\r\n                                <select name=\"industry\" ref={register({required:true})}>\r\n                                    <option value=\"industry1\">industry1</option>\r\n                                    <option value=\"industry2\">industry2</option>\r\n                                    <option value=\"industry3\">industry3</option>\r\n                                </select>\r\n\r\n                                <label name=\"jobTitleLabel\" htmlFor=\"jobTitle\">Job title <span className=\"required\">*</span></label>\r\n                                <input type=\"text\" id=\"jobTitle\" name=\"jobTitle\" ref={register({ required: true})}/>\r\n                                <p className=\"error__message\">{errors.jobTitle?.message}</p>\r\n\r\n                                <label name=\"question\">Where will employee work? <span className=\"required\">*</span></label>\r\n                                <div className=\"radios\">\r\n                                    <div className=\"radio__btn\">\r\n                                        <input type=\"radio\" id=\"atoffice\" name=\"workplace\" value=\"At Office\" ref={register({ required: true})}/>\r\n                                        <label name=\"atofficeLabel \" htmlFor=\"atoffice\">At Office</label>\r\n                                    </div>\r\n                                    <div className=\"radio__btn\">\r\n                                        <input type=\"radio\" id=\"multiloc\" name=\"workplace\" value=\"Multi-location\" ref={register({ required: true})}/>\r\n                                        <label name=\"multilocLabel\" htmlFor=\"multiloc\">Multi Locations</label>\r\n                                    </div>\r\n                                    <div className=\"radio__btn\">\r\n                                        <input type=\"radio\" id=\"remote-19\" name=\"workplace\" value=\"Remote Due To Covid-19\"/>\r\n                                        <label name=\"remoteDueToLabel\" htmlFor=\"remote-19\" ref={register({ required: true})}>Remote due to Covid-19</label>\r\n                                    </div>\r\n                                    <div className=\"radio__btn\">\r\n                                        <input type=\"radio\" id=\"fulRemote\" name=\"workplace\" value=\"Full Remote\" ref={register({ required: true})}/>\r\n                                        <label name=\"fullRemoteLabel\" htmlFor=\"fulRemote\">Fully remote</label>\r\n\r\n                                    </div>\r\n                                    <div className=\"radio__btn\">\r\n                                        <input type=\"radio\" id=\"ontheroad\" name=\"workplace\" value=\"On The Road\" ref={register({ required: true})}/>\r\n                                        <label name=\"onTheRoadLabel\" htmlFor=\"ontheroad\">On the road</label>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                                <label name=\"adverLocLabel\" htmlFor=\"advertloc\">Where would you like to advertise this job? <span className=\"required\">*</span> </label>\r\n                                <input type=\"text\" id=\"advertloc\" name=\"adRegion\" autoComplete={true}\r\n                                ref={register({ required: true})}\r\n                                />\r\n                                \r\n                                <label>Is this job full time or part time? <span className=\"required\">*</span></label>\r\n                                <div className=\"radios\">\r\n                                    <div className=\"radio__btn\">\r\n                                        <input type=\"radio\" id=\"full\" name=\"jobCondition\" value=\"Full Time\" ref={register({ required: true})}/>\r\n                                    <label name=\"fullTimeLabel\" htmlFor=\"full\">Full time</label>\r\n                                    </div>\r\n                                    <div className=\"radio__btn\">\r\n                                        <input type=\"radio\" id=\"part\" name=\"jobCondition\" value=\"Part Time\" ref={register({ required: true})}/>\r\n                                    <label name=\"partTimeLabel\" htmlFor=\"part\">Part time</label>\r\n                                    </div>\r\n                                    <div className=\"radio__btn\">\r\n                                        <input type=\"radio\" id=\"fullandpart\" name=\"jobCondition\" value=\"Part And Full Time\" ref={register({ required: true})}/>\r\n                                    <label name=\"fullAndPartLabel\" htmlFor=\"fullandpart\">Either full-time or paer-time</label>\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n\r\n                                <label>Are these additional job types that apply? <span className=\"required\">*</span></label>\r\n                                <div className=\"radios\">\r\n                                    <div className=\"radio__btn\">\r\n                                        <input type=\"radio\" id=\"internship\" name=\"jobType\" value=\"internship\" ref={register({ required: true})}/>\r\n                                        <label name=\"internshipLabel\" htmlFor=\"internship\">Internship</label>\r\n                                    </div>\r\n                                    <div className=\"radio__btn\">\r\n                                        <input type=\"radio\" id=\"temporary\" name=\"jobType\" value=\"temporary\" ref={register({ required: true})}/>\r\n                                        <label name=\"tempLabel\" htmlFor=\"temporary\">Temporary</label>\r\n                                    </div>\r\n                                    <div className=\"radio__btn\">\r\n                                        <input type=\"radio\" id=\"contract\" name=\"jobType\" value=\"contract\" ref={register({ required: true})}/>\r\n                                        <label name=\"contractLabel\" htmlFor=\"contract\">Contract</label>\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n                                <label name=\"salaryLabel\" htmlFor=\"salfrom\">Salary</label>\r\n\r\n                                <div className=\"salary_inputs\">\r\n                                <div className=\"row salary_box\">\r\n                                    <div className=\"col-md-4 inp\">\r\n                                        <label name=\"fromLabel\" htmlFor=\"from\">From </label>\r\n                                        <input type=\"number\" id=\"salfrom\" name=\"fromSalary\" ref={register({ required: true})}/>\r\n                                        <p className=\"error__message\">{errors.fromSalary?.message}</p>\r\n                                    </div>\r\n                                    <div className=\"col-md-4 inp\">\r\n                                        <label name=\"toLabel\" htmlFor=\"to\">To </label>\r\n                                        <input type=\"number\" id=\"to\" name=\"toSalary\" ref={register({ required: true})}/>\r\n                                        <p className=\"error__message\">{errors.toSalary?.message}</p>\r\n                                    </div>\r\n                                    <div className=\"col-md-4 inp\">\r\n                                    <div className=\"sal_type\">\r\n                                        <label name=\"typeLabel\" htmlFor=\"salaryType\">Type </label>\r\n                                        <select name=\"salaryType\" id=\"salaryType\" ref={register({ required: true})}>\r\n                                            <option key=\"value\" value=\"0\" disabled>Select an option</option>\r\n                                            <option key=\"value\" value=\"hour\">hour</option>\r\n                                            <option key=\"value\" value=\"day\">day</option>\r\n                                            <option key=\"value\" value=\"month\">month</option>\r\n                                        </select>\r\n                                        <p className=\"error__message\">{errors.salaryType?.message}</p>\r\n                                    </div> \r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"nightShift\">\r\n                                <Controller\r\n                                    as={\r\n                                <FormGroup>\r\n                                <FormControlLabel\r\n                                    control={<Switch checked={checked} color=\"primary\" \r\n                                    defaultValue={checked} ref={register({required:false})} \r\n                                    name=\"isNightShift\" \r\n                                    onChange={toggleChecked} \r\n                                    value={!checked? \"Night job\" : \"Day job\"}\r\n                                    />}\r\n                                    label={checked? \"Nightshift\" : \"Dayshift\"}\r\n                                />\r\n                                </FormGroup>\r\n                                }\r\n                                name=\"isNightShift\"\r\n                                control={control}\r\n                                // rules= {{required:false}} \r\n                         />\r\n                                </div>\r\n                                <div className=\"additional\">\r\n                                    <label name=\"aboutJob\" htmlFor=\"aboutJob\">About job </label>\r\n                                    <textarea name=\"aboutJob\" id=\"aboutJob\" cols=\"30\" rows=\"7\" ref={register({ required: false})}></textarea>\r\n                                    <label name=\"addReqLabel\" htmlFor=\"addRequirement\">Additional requirements(if needed) </label>\r\n                                    <textarea name=\"addRequirement\" id=\"addRequirement\" cols=\"30\" rows=\"7\" ref={register({ required: false})}></textarea>\r\n                                </div>\r\n                                <div>\r\n                                <label className=\"language__title\">Skills</label>\r\n                                 <Controller\r\n                                    as={\r\n                                <Select\r\n                                    defaultValue={[]}\r\n                                    isMulti\r\n                                    name=\"skills\"\r\n                                    options={technicalSkills}\r\n                                    className=\"basic-multi-select\"\r\n                                    classNamePrefix=\"select\"\r\n                                />\r\n                                    }\r\n                                    name=\"skills\"\r\n                                    control={control}\r\n                                    rules= {{required: true}}\r\n                                />\r\n                                <p className=\"error__message\">{errors.skills?.message}</p>\r\n                                <label className=\"language__title\">Languages</label>\r\n                                <Controller\r\n                                    as={\r\n                                <Select\r\n                                    defaultValue={[]}\r\n                                    isMulti\r\n                                    name=\"languages\"\r\n                                    options={languages}\r\n                                    className=\"basic-multi-select\"\r\n                                    classNamePrefix=\"select\"\r\n                                />\r\n                                    }\r\n                                    name=\"languages\"\r\n                                    control={control}\r\n                                    rules= {{required: true}}\r\n                                />\r\n                                <p className=\"error__message\">{errors.languages?.message}</p>      \r\n\r\n                               \r\n                                </div>\r\n                                    \r\n                                </div>\r\n                                <button htmlFor=\"jobfields\" className=\" btn btn-success postJobFieldButton mt-5\" type=\"submit\">Save and Post</button>\r\n                            </form>\r\n                                \r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n                                <PostView1/>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                </div>\r\n                {\r\n                    \r\n                }\r\n        </div>\r\n    )\r\n  \r\n}\r\n\r\nexport default PostJobFields\r\n","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\context\\CountriesContext.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\technicalSkills\\TechSkills2.js",["172"],"import React, {useState, useContext} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {TechnicalSkillsContext} from \"../../../context/TechnicalSkillsContext\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport PropTypes from 'prop-types';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport NumberFormat from 'react-number-format';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport { withStyles, makeStyles} from '@material-ui/core/styles';\r\nimport {saveTechSkills} from \"../../../stores/actions/technicalSkillsAction\";\r\nimport  \"../../../styles/TechSkills2.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n  }));\r\n  \r\n  const ValidationTextField = withStyles({\r\n    root: {\r\n      '& input:invalid + fieldset': {\r\n        borderColor: 'ff1100',\r\n        borderWidth: 2,\r\n      },\r\n    },\r\n  })(TextField);\r\n\r\n  export default function TechSkills2() {\r\n    const dispatch = useDispatch();\r\n    const techskills = useSelector(state => state.technicalSkillsReducer.techSkillsList)\r\n    const {technicalSkills} = useContext(TechnicalSkillsContext);\r\n    console.log(\"tech---->\", technicalSkills);\r\n    const classes = useStyles();\r\n  const {control } = useForm();\r\n    const [techSkill, setTechSkill] = useState({});\r\n    const [selected, setSelected] = useState(null);\r\n    \r\n    const onSubmit = (e) => {\r\n        console.log(\"tech before onsubmit\", techSkill);\r\n        e.preventDefault();\r\n        if(techSkill!==null){\r\n            dispatch(saveTechSkills(techSkill))\r\n        \r\n      setSelected(null)\r\n      setTechSkill({})\r\n      resetForm();\r\n      console.log(\"techSkill after submit\", techSkill);\r\n    };\r\n  const resetForm =() =>{\r\n    setTechSkill(techSkill.tech_skill_rank=\"\")\r\n  }\r\n    const handleRemoveTechSkill =(i)=>{\r\n        let list = [...techSkill];\r\n        list.splice(i, 1);\r\n        setTechSkill(list);\r\n    }\r\n  \r\n    const handleAddTechSkill =()=>{\r\n        setTechSkill([...techSkill, {tech_skill: \"\",  tech_skill_rank: \"\"}]);\r\n    }\r\n      \r\n      const handleChange = (e)=>{\r\n      const {name,value} = e.target\r\n      console.log(\"VALUE\", value);\r\n      console.log(\"SELECTED\", selected.title);\r\n      if(value){\r\n           techSkill.tech_skill = selected.title\r\n        techSkill.tech_skill_rank=value\r\n      setTechSkill(techSkill)\r\n      }\r\n     \r\n       \r\n      }\r\n      console.log(\"TECHSKILL\", techSkill);\r\n    return (\r\n        <div className=\"technical__skillsContainer\">\r\n          <div className=\"technical__skillsHeader\">\r\n            {techskills.length!==0 &&\r\n            techskills.map((sk, i) =>(\r\n               <div className=\"tech__skillbox\">\r\n                   <div className=\"tech__skillTitleBox\">\r\n                        <h5 className=\"tech__skillTitle\">{sk.tech_skill +\" \"+ sk.tech_skill_rank} %</h5>\r\n                   </div>\r\n                  <div className=\"tech_skillButtons\">\r\n                    <Fab size=\"small\" color=\"primary\" aria-label=\"edit\"  className={classes.margin}>\r\n                        <EditIcon className=\"tech__skillEdit\"/>\r\n                    </Fab>\r\n                    <Fab size=\"small\" color=\"secondary\" aria-label=\"delete\" className={classes.margin}>\r\n                        <DeleteOutlineIcon className=\"tech__skillDelete\"/>\r\n                    </Fab>\r\n                  </div>\r\n                  \r\n              </div>\r\n            ))\r\n            }\r\n           \r\n          </div>\r\n            <form className=\"technical__skillsForm\" onSubmit={onSubmit} id=\"tech_skillsForm\" onReset={resetForm}>\r\n                    <div className=\"special_box2\">\r\n                        <Controller\r\n                            render={({onChange, value}) =>\r\n                            <Autocomplete\r\n                                valiant=\"outlined\"\r\n                                options={technicalSkills}\r\n                                className=\"tech__skillsInput\"\r\n                                getOptionLabel={(option) => option.title}\r\n                                id={\"tech_skill\"}\r\n                                name={\"tech_skill\"}\r\n                                value={selected}\r\n                                onChange={((e, newValue)=>{\r\n                                    setSelected(newValue)\r\n                                })\r\n                                }\r\n                                renderInput={(params) => (\r\n                                <TextField {...params} label=\"Technical Skill\" variant=\"outlined\" margin=\"normal\" />\r\n                                )}\r\n                            />\r\n                            }\r\n                            name={\"tech_skill\"}\r\n                           control={control}\r\n                           rules= {{required: true}}\r\n                         /> \r\n                        <Controller\r\n                            render={({onChange, value}) =>\r\n                            <ValidationTextField\r\n                                label=\"Technical skill rank\"\r\n                                className=\"tech__skillsInput\"\r\n                                id=\"tech_rank\"\r\n                                defaultValue={techSkill.tech_skill_rank}\r\n                                onChange={e=>handleChange(e)}\r\n                                placeholder=\"from 1 to 100\"\r\n                                required\r\n                                name=\"tech_skill_rank\"\r\n                                variant=\"outlined\"\r\n                                multiline\r\n                                InputProps={{\r\n                                inputComponent: NumberFormatCustom,\r\n                                }}\r\n                            />\r\n                            }\r\n                            name=\"tech_skill_rank\"\r\n                            control={control}\r\n                            rules= {{required: true}}\r\n                        /> \r\n                    </div>\r\n            <button type=\"submit\" className=\"btn btn-success btn-block\">save</button>\r\n            </form>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nfunction NumberFormatCustom(props) {\r\n    const { inputRef, onChange, ...other } = props;\r\n  \r\n    return (\r\n      <NumberFormat\r\n        {...other}\r\n        getInputRef={inputRef}\r\n        onValueChange={(values) => {\r\n          onChange({\r\n            target: {\r\n              name: props.name,\r\n              value: values.value,\r\n            },\r\n          });\r\n        }}\r\n        minLength=\"1\"\r\n        maxLength=\"3\"\r\n        isNumericString\r\n      />\r\n    );\r\n  }\r\n  \r\n  NumberFormatCustom.propTypes = {\r\n    inputRef: PropTypes.func.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n  };","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\technicalSkills\\NewM.js",["173","174","175"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\keySkills\\KeySkillsSelect.js",["176"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\education\\EducationForm.js",["177"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\experience\\ExperienceForm.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\type.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\achievementsAction.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\achivements\\AchievementForm.js",["178","179","180"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\achievementsReducer.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\JobSearchBanner.js",["181"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\BannerJob.js",["182","183","184","185"],"import React, {useState, useContext, useEffect} from 'react';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport \"../styles/PostJob.css\";\r\nimport PostAddIcon from '@material-ui/icons/PostAdd';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport axios from 'axios';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {CandidatesContext} from \"../context/CandidatesContext\";\r\nfunction BannerJob() {\r\n    const { t, i18n } = useTranslation();\r\n    const history = useHistory();\r\n    const {candidates} = useContext(CandidatesContext);\r\n    return (\r\n        <div className=\"postJob\" id=\"postJob\">\r\n            <div className=\"postJob__title\">\r\n                <h3 >{t(\"banner_post_job_title\")}</h3>\r\n            </div>\r\n            <div className=\"postJob__img\">\r\n                <img src=\"../../assets/images/secretary.png\" alt=\"postjob\"/>\r\n            </div>\r\n            <div className=\"postJob__title2\">\r\n                <h1>{t(\"banner_post_job_title2\")}</h1>\r\n            </div>\r\n            <div className=\"findJob__form\">\r\n                <form action=\"#\" id=\"findCandidateSubmit\">\r\n                    <label htmlFor=\"free-solo-demo\"><h3>{t(\"banner_post_job_label1\")}</h3></label>\r\n                    <Autocomplete\r\n                         id=\"free-solo-demo\"\r\n                         freeSolo\r\n                         options={candidates.map((candidate) => candidate.job_title)}\r\n                         renderInput={(params) => (\r\n                           <TextField {...params} label={t(\"banner_post_job_placeholder1\")} margin=\"normal\" variant=\"outlined\" />\r\n                         )}\r\n                    />\r\n                    <label htmlFor=\"free-solo-2-demo\"><h3>{t(\"banner_post_job_label2\")}</h3></label>\r\n                     <Autocomplete\r\n                          freeSolo\r\n                          id=\"free-solo-2-demo\"\r\n                          disableClearable\r\n                          options={candidates.map((candidate) => candidate.address)}\r\n                          renderInput={(params) => (\r\n                         <TextField\r\n                              {...params}\r\n                              label={t(\"banner_post_job_placeholder2\")}\r\n                              icon={<SearchIcon/>}\r\n                              margin=\"normal\"\r\n                              variant=\"outlined\"\r\n                              InputProps={{ ...params.InputProps, type: 'search' }}\r\n                         />\r\n                      )}\r\n                     />   \r\n                </form>\r\n            </div>\r\n            <div className=\"button__container\">\r\n                <button className=\"btn postJob__buttonFind\" htmlFor=\"findCandidateSubmit\"  onClick={e => history.push(\"/searchcandidates\")}>{t(\"banner_post_job_post_button2\")} <SearchIcon/></button>\r\n                <button className=\"btn postJob__buttonFind\" onClick={e => history.push(\"/jobpost\")}>{t(\"banner_post_job_post_button1\")} <PostAddIcon/></button>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BannerJob\r\n","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\autocomleteInputs\\AutocompleteCountry.js",["186","187","188"],"\r\nimport React, {useState, useEffect} from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport countries from \"i18n-iso-countries\";\r\nimport uzbek from \"i18n-iso-countries/langs/uz.json\";\r\nimport english from \"i18n-iso-countries/langs/en.json\";\r\nimport russian from \"i18n-iso-countries/langs/ru.json\";\r\nimport { useTranslation } from \"react-i18next\";\r\nfunction sleep(delay = 0) {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, delay);\r\n  });\r\n}\r\ncountries.registerLocale(uzbek);\r\ncountries.registerLocale(english);\r\ncountries.registerLocale(russian);\r\nconst uz = countries.getNames(\"uz\", { select: \"official\" });\r\nconst ru = countries.getNames(\"ru\", { select: \"official\" });\r\nconst en = countries.getNames(\"en\", { select: \"official\" });\r\n\r\nexport default function AutocompleteCountry() {\r\nconst { t, i18n } = useTranslation();\r\n  const [open, setOpen] = useState(false);\r\n  const [count, setCount] = useState([]);\r\n\r\n  console.log(\"Count\", count);\r\n  useEffect(() => {\r\n    if(i18n.language===\"uz\"){\r\n        Object.keys(uz).forEach((key, i) => {\r\n        if (key === \"UZ\") {\r\n          count[i] = {\r\n            id: key,\r\n            name: \"O'zbekiston\"\r\n          };\r\n        } else {\r\n          count[i] = {\r\n            id: key,\r\n            name: uz[key]\r\n          };\r\n        }\r\n      });\r\n    }else if(i18n.language===\"ru\"){\r\n        Object.keys(ru).forEach((key, i) => {\r\n              count[i] = {\r\n                id: key,\r\n                name: ru[key]\r\n              };\r\n    })\r\n    }else{\r\n        Object.keys(en).forEach((key, i) => {\r\n            count[i] = {\r\n              id: key,\r\n              name: en[key]\r\n            };\r\n    })\r\n    }\r\n  }, [t, i18n])\r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <Autocomplete\r\n        id=\"country\"\r\n        style={{ width: \"100% \" }}\r\n        open={open}\r\n        onOpen={() => {\r\n          setOpen(true);\r\n        }}\r\n        onClose={() => {\r\n          setOpen(false);\r\n        }}\r\n        getOptionSelected={(option, value) => option.name === value.name}\r\n        getOptionLabel={(option) => option.name}\r\n        options={count}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            label={t(\"autocomplete_country\")}\r\n            variant=\"outlined\"\r\n            InputProps={{\r\n              ...params.InputProps\r\n            }}\r\n          />\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\languageFrom\\LanguageForm.js",["189","190","191","192","193","194"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\context\\LanguagesContext.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\App.js",["195"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\pages\\Home.js",["196"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\context\\JobsContext.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\JobSearchMain.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\Completed.js",["197","198","199","200","201","202","203"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\JobSearchList.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\JobSearchRight.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\PostViewCard.js",["204"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\DrawerPost.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\createContacts\\ContactInformation.js",["205","206","207","208"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\experienceAction.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\profileInfoAction.js",["209"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\languagesReducer.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\languagesAction.js",["210","211","212","213","214","215"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\drivingLReducer.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\drivingL\\DrivingLicence.js",["216"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\actions\\drivingLAction.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\stores\\reducers\\personalDevReducer.js",[],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\personalDevelopment\\PersonalDevelopment.js",["217"],"E:\\1MyProjects\\GitHub\\hr\\resume-builder-front\\src\\components\\resumeBuilder\\createProfile\\ProfileForm.js",["218","219","220"],{"ruleId":"221","severity":1,"message":"222","line":34,"column":11,"nodeType":"223","messageId":"224","endLine":34,"endColumn":21},{"ruleId":"225","replacedBy":"226"},{"ruleId":"227","replacedBy":"228"},{"ruleId":"221","severity":1,"message":"229","line":12,"column":8,"nodeType":"223","messageId":"224","endLine":12,"endColumn":23},{"ruleId":"221","severity":1,"message":"230","line":40,"column":13,"nodeType":"223","messageId":"224","endLine":40,"endColumn":14},{"ruleId":"221","severity":1,"message":"231","line":45,"column":11,"nodeType":"223","messageId":"224","endLine":45,"endColumn":18},{"ruleId":"221","severity":1,"message":"232","line":46,"column":54,"nodeType":"223","messageId":"224","endLine":46,"endColumn":63},{"ruleId":"221","severity":1,"message":"233","line":49,"column":12,"nodeType":"223","messageId":"224","endLine":49,"endColumn":22},{"ruleId":"221","severity":1,"message":"234","line":63,"column":11,"nodeType":"223","messageId":"224","endLine":63,"endColumn":20},{"ruleId":null,"fatal":true,"severity":2,"message":"235","line":184,"column":5},{"ruleId":"221","severity":1,"message":"236","line":53,"column":11,"nodeType":"223","messageId":"224","endLine":53,"endColumn":32},{"ruleId":"221","severity":1,"message":"237","line":59,"column":11,"nodeType":"223","messageId":"224","endLine":59,"endColumn":29},{"ruleId":"221","severity":1,"message":"238","line":65,"column":14,"nodeType":"223","messageId":"224","endLine":65,"endColumn":18},{"ruleId":"221","severity":1,"message":"239","line":83,"column":7,"nodeType":"223","messageId":"224","endLine":83,"endColumn":14},{"ruleId":"221","severity":1,"message":"240","line":39,"column":9,"nodeType":"223","messageId":"224","endLine":39,"endColumn":16},{"ruleId":"221","severity":1,"message":"241","line":32,"column":10,"nodeType":"223","messageId":"224","endLine":32,"endColumn":16},{"ruleId":"221","severity":1,"message":"242","line":35,"column":10,"nodeType":"223","messageId":"224","endLine":35,"endColumn":26},{"ruleId":"221","severity":1,"message":"243","line":35,"column":28,"nodeType":"223","messageId":"224","endLine":35,"endColumn":47},{"ruleId":"221","severity":1,"message":"244","line":15,"column":11,"nodeType":"223","messageId":"224","endLine":15,"endColumn":18},{"ruleId":"221","severity":1,"message":"245","line":1,"column":16,"nodeType":"223","messageId":"224","endLine":1,"endColumn":24},{"ruleId":"221","severity":1,"message":"246","line":1,"column":38,"nodeType":"223","messageId":"224","endLine":1,"endColumn":47},{"ruleId":"221","severity":1,"message":"247","line":8,"column":8,"nodeType":"223","messageId":"224","endLine":8,"endColumn":13},{"ruleId":"221","severity":1,"message":"248","line":12,"column":16,"nodeType":"223","messageId":"224","endLine":12,"endColumn":20},{"ruleId":"221","severity":1,"message":"249","line":10,"column":10,"nodeType":"223","messageId":"224","endLine":10,"endColumn":15},{"ruleId":"221","severity":1,"message":"250","line":25,"column":17,"nodeType":"223","messageId":"224","endLine":25,"endColumn":25},{"ruleId":"251","severity":1,"message":"252","line":58,"column":6,"nodeType":"253","endLine":58,"endColumn":15,"suggestions":"254"},{"ruleId":"221","severity":1,"message":"255","line":8,"column":10,"nodeType":"223","messageId":"224","endLine":8,"endColumn":20},{"ruleId":"251","severity":1,"message":"256","line":44,"column":4,"nodeType":"253","endLine":44,"endColumn":6,"suggestions":"257"},{"ruleId":"251","severity":1,"message":"256","line":47,"column":4,"nodeType":"253","endLine":47,"endColumn":6,"suggestions":"258"},{"ruleId":"251","severity":1,"message":"256","line":50,"column":4,"nodeType":"253","endLine":50,"endColumn":6,"suggestions":"259"},{"ruleId":"221","severity":1,"message":"238","line":57,"column":12,"nodeType":"223","messageId":"224","endLine":57,"endColumn":16},{"ruleId":"260","severity":1,"message":"261","line":124,"column":87,"nodeType":"262","messageId":"263","endLine":124,"endColumn":88},{"ruleId":"221","severity":1,"message":"264","line":16,"column":31,"nodeType":"223","messageId":"224","endLine":16,"endColumn":42},{"ruleId":"221","severity":1,"message":"265","line":3,"column":8,"nodeType":"223","messageId":"224","endLine":3,"endColumn":14},{"ruleId":"221","severity":1,"message":"266","line":4,"column":8,"nodeType":"223","messageId":"224","endLine":4,"endColumn":16},{"ruleId":"221","severity":1,"message":"267","line":5,"column":8,"nodeType":"223","messageId":"224","endLine":5,"endColumn":23},{"ruleId":"221","severity":1,"message":"268","line":6,"column":8,"nodeType":"223","messageId":"224","endLine":6,"endColumn":16},{"ruleId":"221","severity":1,"message":"269","line":7,"column":8,"nodeType":"223","messageId":"224","endLine":7,"endColumn":20},{"ruleId":"221","severity":1,"message":"270","line":8,"column":8,"nodeType":"223","messageId":"224","endLine":8,"endColumn":20},{"ruleId":"221","severity":1,"message":"271","line":9,"column":8,"nodeType":"223","messageId":"224","endLine":9,"endColumn":20},{"ruleId":"221","severity":1,"message":"272","line":10,"column":8,"nodeType":"223","messageId":"224","endLine":10,"endColumn":21},{"ruleId":"221","severity":1,"message":"245","line":1,"column":16,"nodeType":"223","messageId":"224","endLine":1,"endColumn":24},{"ruleId":"221","severity":1,"message":"273","line":5,"column":22,"nodeType":"223","messageId":"224","endLine":5,"endColumn":32},{"ruleId":"221","severity":1,"message":"274","line":13,"column":8,"nodeType":"223","messageId":"224","endLine":13,"endColumn":14},{"ruleId":"221","severity":1,"message":"232","line":23,"column":54,"nodeType":"223","messageId":"224","endLine":23,"endColumn":63},{"ruleId":"221","severity":1,"message":"275","line":42,"column":11,"nodeType":"223","messageId":"224","endLine":42,"endColumn":18},{"ruleId":"221","severity":1,"message":"276","line":1,"column":31,"nodeType":"223","messageId":"224","endLine":1,"endColumn":41},{"ruleId":"221","severity":1,"message":"277","line":24,"column":19,"nodeType":"223","messageId":"224","endLine":24,"endColumn":25},{"ruleId":"278","severity":1,"message":"279","line":28,"column":17,"nodeType":"280","messageId":"281","endLine":30,"endColumn":2},{"ruleId":"221","severity":1,"message":"277","line":44,"column":19,"nodeType":"223","messageId":"224","endLine":44,"endColumn":25},{"ruleId":"278","severity":1,"message":"279","line":47,"column":17,"nodeType":"280","messageId":"281","endLine":49,"endColumn":2},{"ruleId":"221","severity":1,"message":"277","line":63,"column":19,"nodeType":"223","messageId":"224","endLine":63,"endColumn":25},{"ruleId":"278","severity":1,"message":"279","line":66,"column":17,"nodeType":"280","messageId":"281","endLine":68,"endColumn":2},{"ruleId":"221","severity":1,"message":"282","line":2,"column":26,"nodeType":"223","messageId":"224","endLine":2,"endColumn":36},{"ruleId":"221","severity":1,"message":"241","line":32,"column":10,"nodeType":"223","messageId":"224","endLine":32,"endColumn":16},{"ruleId":"221","severity":1,"message":"274","line":8,"column":8,"nodeType":"223","messageId":"224","endLine":8,"endColumn":14},{"ruleId":"221","severity":1,"message":"233","line":29,"column":8,"nodeType":"223","messageId":"224","endLine":29,"endColumn":18},{"ruleId":"221","severity":1,"message":"240","line":53,"column":9,"nodeType":"223","messageId":"224","endLine":53,"endColumn":16},"no-unused-vars","'techskills' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["283"],"no-negated-in-lhs",["284"],"'CreateKeySkills' is defined but never used.","'t' is assigned a value but never used.","'postjob' is assigned a value but never used.","'formState' is assigned a value but never used.","'postedData' is assigned a value but never used.","'techSkill' is assigned a value but never used.","Parsing error: Unexpected token\n\n  182 |     name: PropTypes.string.isRequired,\n  183 |     onChange: PropTypes.func.isRequired,\n> 184 |   };\n      |     ^","'handleRemoveTechSkill' is assigned a value but never used.","'handleAddTechSkill' is assigned a value but never used.","'name' is assigned a value but never used.","'jobList' is assigned a value but never used.","'classes' is assigned a value but never used.","'values' is assigned a value but never used.","'projectInputList' is assigned a value but never used.","'setProjectInputList' is assigned a value but never used.","'history' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","'i18n' is assigned a value but never used.","'sleep' is defined but never used.","'setCount' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'count'. Either include it or remove the dependency array.","ArrayExpression",["285"],"'withStyles' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["286"],["287"],["288"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'JobsContext' is defined but never used.","'Resume' is defined but never used.","'CallIcon' is defined but never used.","'MailOutlineIcon' is defined but never used.","'RoomIcon' is defined but never used.","'LinkedInIcon' is defined but never used.","'TelegramIcon' is defined but never used.","'FacebookIcon' is defined but never used.","'InstagramIcon' is defined but never used.","'makeStyles' is defined but never used.","'Button' is defined but never used.","'contact' is assigned a value but never used.","'EDIT_CLICK' is defined but never used.","'errMsg' is assigned a value but never used.","no-unreachable","Unreachable code.","BlockStatement","unreachableCode","'useContext' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"289","fix":"290"},{"desc":"291","fix":"292"},{"desc":"291","fix":"293"},{"desc":"291","fix":"294"},"Update the dependencies array to be: [t, i18n, count]",{"range":"295","text":"296"},"Update the dependencies array to be: [dispatch]",{"range":"297","text":"298"},{"range":"299","text":"298"},{"range":"300","text":"298"},[1758,1767],"[t, i18n, count]",[1730,1732],"[dispatch]",[1787,1789],[1844,1846]]